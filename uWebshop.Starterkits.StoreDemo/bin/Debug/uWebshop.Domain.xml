<?xml version="1.0"?>
<doc>
    <assembly>
        <name>uWebshop.Domain</name>
    </assembly>
    <members>
        <member name="T:uWebshop.Domain.Interfaces.IAppliedOrderDiscount">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IDiscount">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscount.OncePerCustomer">
            <summary>
            Gets a value indicating whether the discount is once per customer.
            </summary>
            <value>
              <c>true</c> if the discount is once per customer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscount.CounterEnabled">
            <summary>
            Gets a value indicating whether the counter is enabled.
            </summary>
            <value>
              <c>true</c> if the counter is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscount.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.RequiredItemIds">
            <summary>
            List of products this discount applies to
            </summary>
            <value>
            The required item ids.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.Condition">
            <summary>
            Discount condition (None, OnTheXthItem, PerSetOfItems)
            </summary>
            <value>
            The condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.NumberOfItemsCondition">
            <summary>
            Number of items required for OnTheXthItem and PerSetOfItems conditions
            </summary>
            <value>
            The number of items condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.DiscountValue">
            <summary>
            The discount value in cents or percentage
            </summary>
            <value>
            The discount value.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.Ranges">
            <summary>
            Information on the ranges for this discount
            </summary>
            <value>
            The ranges string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.DiscountType">
            <summary>
            Type of discount (Percentage, Amount, Free shipping)
            </summary>
            <value>
            The type of the discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.MemberGroups">
            <summary>
            Membergroups this discount is valid for
            </summary>
            <value>
            The member groups.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.AffectedOrderlines">
            <summary>
            Gets the affected orderlines.
            </summary>
            <value>
            The affected orderlines.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.AffectedProductTags">
            <summary>
            Gets the affected product tags.
            </summary>
            <value>
            The affected product tags.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.MinimumOrderAmount">
            <summary>
            Gets the minimum order amount.
            </summary>
            <value>
            The minimum order amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscountAppliedShared.IncludeShippingInOrderDiscountableAmount">
            <summary>
            Gets a value indicating whether [include shipping information order discountable amount].
            </summary>
            <value>
            <c>true</c> if [include shipping information order discountable amount]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAppliedOrderDiscount.AmountForOrder">
            <summary>
            Gets the amount for order.
            </summary>
            <value>
            The amount for order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAppliedOrderDiscount.CouponCode">
            <summary>
            The used coupon code.
            </summary>
            <value>
            The used coupon code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAppliedOrderDiscount.OriginalId">
            <summary>
            Gets the original unique identifier.
            </summary>
            <value>
            The original unique identifier.
            </value>
        </member>
        <member name="T:uWebshop.API.Basket">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Basket.GetBasket">
            <summary>
            Gets the basket.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetFeedbackMessage(System.String)">
            <summary>
            Gets the feedback message.
            </summary>
            <param name="feedbackKey">The feedback key.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetBasket(System.String)">
            <summary>
            Gets the basket.
            </summary>
            <param name="guidAsString">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetBasket(System.Guid)">
            <summary>
            Gets the basket.
            </summary>
            <param name="guid">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetCurrentOrNewBasket">
            <summary>
            Gets the current basket or create a new basket if basket was confirmed.
            Use case: customer clicks back button on payment provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetFulfillmentProviders(System.Boolean,System.String,System.String)">
            <summary>
            Gets the fulfillment providers. (ie shipping/pickup/etc)
            </summary>
            <param name="useZone">if set to <c>true</c> use zone/countries.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetPaymentProviders(System.Boolean,System.String,System.String)">
            <summary>
            Gets the payment providers.
            </summary>
            <param name="useZone">if set to <c>true</c> [use zone].</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Basket.GetAllOrderDiscounts(System.String,System.String)">
            <summary>
            Gets all order discounts.
            </summary>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IChosenPaymentProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenPaymentProvider.Paid">
            <summary>
            Gets a value indicating whether [paid].
            </summary>
            <value>
              <c>true</c> if [paid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenPaymentProvider.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenPaymentProvider.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenPaymentProvider.MethodId">
            <summary>
            Gets the method unique identifier.
            </summary>
            <value>
            The method unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenPaymentProvider.MethodTitle">
            <summary>
            Gets the method title.
            </summary>
            <value>
            The method title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenPaymentProvider.TransactionId">
            <summary>
            Gets the transaction unique identifier.
            </summary>
            <value>
            The transaction unique identifier.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IAddress">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IAddress.GetValue``1(System.String,System.Boolean)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fieldName">Name of the field.</param>
            <param name="ignoreCustomerIsShipping">If customer == shipping address, by default fields from shipping return empty, set to true to return saved value</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.FirstName">
            <summary>
            Gets the first name.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.LastName">
            <summary>
            Gets the last name.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Address1">
            <summary>
            Gets the address1.
            </summary>
            <value>
            The address1.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Address2">
            <summary>
            Gets the address2.
            </summary>
            <value>
            The address2.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Street">
            <summary>
            Gets the street.
            </summary>
            <value>
            The street.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.StreetNumber">
            <summary>
            Gets the street number.
            </summary>
            <value>
            The street number.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.StreetNumberAddition">
            <summary>
            Gets the street number addition.
            </summary>
            <value>
            The street number addition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.City">
            <summary>
            Gets the city.
            </summary>
            <value>
            The city.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Country">
            <summary>
            Gets the country.
            </summary>
            <value>
            The country.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.CountryCode">
            <summary>
            Gets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Region">
            <summary>
            Gets the region.
            </summary>
            <value>
            The region.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.ZipCode">
            <summary>
            Gets the zip code.
            </summary>
            <value>
            The zip code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Company">
            <summary>
            Gets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Phone">
            <summary>
            Gets the phone.
            </summary>
            <value>
            The phone.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IAddress.Email">
            <summary>
            Gets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ICustomer">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ICustomer.Shipping">
            <summary>
            Gets shipping address information for this order.
            </summary>
            <value>
            The shipping.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ICustomer.AcceptsMarketing">
            <summary>
            Gets a value indicating whether [accepts marketing].
            </summary>
            <value>
              <c>true</c> if [accepts marketing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ICustomer.UserName">
            <summary>
            Gets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ICustomer.UserId">
            <summary>
            Gets the user unique identifier.
            </summary>
            <value>
            The user unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ICustomer.TotalSpendingInCents">
            <summary>
            Gets the total spending. Note that this can be an expensive call if many orders exist!
            </summary>
            <value>
            The total spending.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ICustomer.CustomerIsShipping">
            <summary>
            Check if the customers shipping address == billing address
            </summary>
            <value>
            The total spending.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IFulfillment">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillment.Fulfilled">
            <summary>
            Gets a value indicating whether [fulfilled].
            </summary>
            <value>
              <c>true</c> if [fulfilled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillment.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>
            The providers.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IBasket">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderBasketShared">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.UniqueId">
            <summary>
            Gets the unique unique identifier.
            </summary>
            <value>
            The unique unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.Name">
            <summary>
            Gets the name given to this order.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.OrderAmount">
            <summary>
            Gets the order amount.
            </summary>
            <value>
            The order amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.OrderLines">
            <summary>
            Gets the order lines.
            </summary>
            <value>
            The order lines.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.Customer">
            <summary>
            Gets the customer.
            </summary>
            <value>
            The customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.OrderFields">
            <summary>
            Get the extra orderfields
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.Store">
            <summary>
            Gets the store.
            </summary>
            <value>
            The store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.GrandTotal">
            <summary>
            Gets the grand total.
            </summary>
            <value>
            The grand total.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.SubTotal">
            <summary>
            Gets the sub total.
            </summary>
            <value>
            The sub total.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.AverageOrderVatPercentage">
            <summary>
            Gets the average order vat percentage.
            </summary>
            <value>
            The average order vat percentage.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.Quantity">
            <summary>
            Gets the order line item quantity.
            </summary>
            <value>
            The total item quantity
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketWishlistShared.OrderLineTotal">
            <summary>
            Gets the order line total.
            </summary>
            <value>
            The order line total.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.IsVatCharged">
            <summary>
            Gets a value indicating whether [is vat charged].
            </summary>
            <value>
              <c>true</c> if [is vat charged]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.RegionalVat">
            <summary>
            Gets the regional vat.
            </summary>
            <value>
            The regional vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.Discounts">
            <summary>
            Gets the discounts.
            </summary>
            <value>
            The discounts.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.UsedCouponCodes">
            <summary>
            Gets the used coupon codes.
            </summary>
            <value>
            The used coupon codes.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.Fulfillment">
            <summary>
            Gets the fulfillment.
            </summary>
            <value>
            The fulfillment.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.Payment">
            <summary>
            Gets the payment.
            </summary>
            <value>
            The payment.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.ChargedOrderAmount">
            <summary>
            Gets the charged order amount.
            </summary>
            <value>
            The charged order amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.ChargedShippingAmount">
            <summary>
            Gets the charged shipping amount.
            </summary>
            <value>
            The charged shipping amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.ChargedPaymentAmount">
            <summary>
            Gets the charged payment amount.
            </summary>
            <value>
            The charged payment amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.PaymentProviderAmount">
            <summary>
            Gets the payment provider amount.
            </summary>
            <value>
            The payment provider amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.ShippingProviderAmount">
            <summary>
            Gets the shipping provider amount.
            </summary>
            <value>
            The shipping provider amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.OrderAmount">
            <summary>
            Gets the order amount.
            </summary>
            <value>
            The order amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderBasketShared.OrderLineTotal">
            <summary>
            Gets the order line total.
            </summary>
            <value>
            The order line total.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBasket.TermsAccepted">
            <summary>
            Gets a value indicating whether [terms accepted].
            </summary>
            <value>
              <c>true</c> if [terms accepted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBasket.ValidationResults">
            <summary>
            Gets the validation results.
            </summary>
            <value>
            The validation results.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrder">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.Localization">
            <summary>
            Gets the localization.
            </summary>
            <value>
            The localization.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.OrderReference">
            <summary>
            Gets the order reference.
            </summary>
            <value>
            The order reference.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.StoreOrderReferenceId">
            <summary>
            Gets the store order reference unique identifier.
            </summary>
            <value>
            The store order reference unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.Status">
            <summary>
            Gets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.ConfirmDate">
            <summary>
            Gets the confirm date.
            </summary>
            <value>
            The confirm date.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.PaidDate">
            <summary>
            Gets the paid date.
            </summary>
            <value>
            The paid date.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.ShippedDate">
            <summary>
            Gets the shipped date.
            </summary>
            <value>
            The shipped date.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.IsPaid">
            <summary>
            Gets a value indicating whether [is paid].
            </summary>
            <value>
              <c>true</c> if [is paid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrder.IsFulfilled">
            <summary>
            Gets a value indicating whether [is fulfilled].
            </summary>
            <value>
              <c>true</c> if [is fulfilled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IWishlist">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPayment">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IPayment.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>
            The providers.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IValidationResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResult.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResult.Alias">
            <summary>
            Gets the alias.
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResult.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResult.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResult.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IValidationResults">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.All">
            <summary>
            Gets all ValidationResults.
            </summary>
            <value>
            All ValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.Order">
            <summary>
            Gets the order ValidationResults.
            </summary>
            <value>
            The order ValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.Stock">
            <summary>
            Gets the stock ValidationResults.
            </summary>
            <value>
            The stockValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.OrderLine">
            <summary>
            Gets the order line ValidationResults.
            </summary>
            <value>
            The order line ValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.Custom">
            <summary>
            Gets the custom ValidationResults.
            </summary>
            <value>
            The custom ValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.Customer">
            <summary>
            Gets the customer ValidationResults.
            </summary>
            <value>
            The customer ValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.Payment">
            <summary>
            Gets the payment ValidationResults.
            </summary>
            <value>
            The payment ValidationResults.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IValidationResults.Shipping">
            <summary>
            Gets the shipping ValidationResults.
            </summary>
            <value>
            The shipping ValidationResults.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IBillingProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProvider.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProvider.SortOrder">
            <summary>
            Gets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProvider.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProvider.Methods">
            <summary>
            Gets the methods.
            </summary>
            <value>
            The methods.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProvider.Type">
            <summary>
            Gets the type of this billing provider.
            </summary>
            <value>
            The type of this billing provider.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IBillingProviderMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProviderMethod.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProviderMethod.SortOrder">
            <summary>
            Gets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProviderMethod.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProviderMethod.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProviderMethod.Amount">
            <summary>
            Gets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IBillingProviderMethod.Image">
            <summary>
            Gets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="T:uWebshop.API.Catalog">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Catalog.GetAllCategories(System.String,System.String)">
            <summary>
            Gets all categories.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetAllRootCategories(System.String,System.String)">
            <summary>
            Gets all root categories.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetAllProducts(System.String,System.String)">
            <summary>
            Gets all products.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetAllProductVariants(System.String,System.String)">
            <summary>
            Gets all product variants.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetCategory(System.Int32,System.String,System.String)">
            <summary>
            Gets the category.
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetCategory(uWebshop.API.ICategory,System.String,System.String)">
            <summary>
            Gets the category.
            </summary>
            <param name="category">The category.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">category</exception>
        </member>
        <member name="M:uWebshop.API.Catalog.GetCategoriesRecursive(System.Int32,System.String,System.String)">
            <summary>
            Gets the categories recursive.
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetCategoriesRecursive(uWebshop.API.ICategory,System.String,System.String)">
            <summary>
            Gets the categories recursive.
            </summary>
            <param name="category">The category.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">category</exception>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProduct(System.Int32,System.String,System.String)">
            <summary>
            Gets the product.
            </summary>
            <param name="productId">The product unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProduct(uWebshop.API.IProduct,System.String,System.String)">
            <summary>
            Gets the product.
            </summary>
            <param name="product">The product.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">product</exception>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProductsRecursive(System.Int32,System.String,System.String)">
            <summary>
            Gets the products recursive.
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProductsRecursive(uWebshop.API.ICategory,System.String,System.String)">
            <summary>
            Gets the products recursive.
            </summary>
            <param name="category">The category.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">category</exception>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProductVariant(System.Int32,System.String,System.String)">
            <summary>
            Gets the product variant.
            </summary>
            <param name="variantId">The variant unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProductVariant(uWebshop.Domain.Interfaces.IProductVariant,System.String,System.String)">
            <summary>
            Gets the product variant.
            </summary>
            <param name="variant">The variant.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">variant</exception>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProductsVariantsRecursive(System.Int32,System.String,System.String)">
            <summary>
            Gets the products variants recursive.
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetProductsVariantsRecursive(uWebshop.API.ICategory,System.String,System.String)">
            <summary>
            Gets the products variants recursive.
            </summary>
            <param name="category">The category.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">category</exception>
        </member>
        <member name="M:uWebshop.API.Catalog.MatchingTagCategories(System.Int32,System.String,System.String)">
            <summary>
            Returns unique categories witch have one ore more tags in common with the given categoryId
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.MatchingTagCategories(uWebshop.API.ICategory,System.String,System.String)">
            <summary>
            Returns unique categories witch have one ore more tags in common with the given ICategory
            </summary>
            <param name="category">The category.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.MatchingTagProducts(System.Int32,System.String,System.String)">
            <summary>
            Returns unique products witch have one ore more tags in common with the given productId
            </summary>
            <param name="productId">The product unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.MatchingTagProducts(uWebshop.API.IProduct,System.String,System.String)">
            <summary>
            Returns unique products witch have one ore more tags in common with the given IProduct
            </summary>
            <param name="product">The product.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.NiceUrl(System.Int32)">
            <summary>
            Creates the Url for a Catalog item by Id
            </summary>
            <param name="id">catalog item Id</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.NiceUrl(System.Int32,System.Int32)">
            <summary>
            Creates the Url for a Catalog item by Id
            </summary>
            <param name="id">catalog item Id</param>
            <param name="categoryId">the Id of the category used to build the url. input 0 will use currentCategory.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.NiceUrl(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the Url for a catalog item by Id 
            </summary>
            <param name="id">catalog item Id</param>
            <param name="categoryId">the Id of the category used to build the url. input 0 will use currentCategory.</param>
            <param name="storeId">the id of the store you want to link to</param>
            If the categoryId is not in the categories list of the product, it will use the first category
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.NiceUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Creates the Url for a catalog item by Id 
            </summary>
            <param name="id">catalog item Id</param>
            <param name="categoryId">the Id of the category used to build the url. input 0 will use currentCategory.</param>
            <param name="storeAlias">the id of the store you want to link to</param>
            If the categoryId is not in the categories list of the product, it will use the first category
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Catalog.GetPages(System.Int32,System.Int32)">
            <summary>
            Generate paging based on the itemcount and the items per page
            </summary>
            <param name="itemCount">The item count.</param>
            <param name="itemsPerPage">The items per page.</param>
            <returns>
            Paging Object
            </returns>
        </member>
        <member name="T:uWebshop.API.ICategory">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.ICategory.GetProperty(System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="propertyAlias">The property alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.ICategory.GetParentCategories">
            <summary>
            Gets the parent categories.
            </summary>
        </member>
        <member name="M:uWebshop.API.ICategory.NiceUrl">
            <summary>
            The url for this product
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.ICategory.NiceUrl(System.String)">
            <summary>
            The url for this product based on the current store
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.ICategory.NiceUrl(System.Boolean,System.String,System.String)">
            <summary>
            The url for this product based on the current store
            </summary>
            <param name="getCanonicalUrl">if set to <c>true</c> get the canonical URL.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.API.ICategory.ParentCategory">
            <summary>
            Gets the parent category.
            </summary>
            <value>
            The parent category.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Products">
            <summary>
            Gets a list of products which belong to the category
            </summary>
            <value>
            The products.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.MetaDescription">
            <summary>
            Gets the meta description.
            </summary>
            <value>
            The meta description.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Tags">
            <summary>
            Gets the tags.
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Images">
            <summary>
            Gets the images.
            </summary>
            <value>
            The images.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.SubCategories">
            <summary>
            Gets the sub categories.
            </summary>
            <value>
            The sub categories.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.HasCategories">
            <summary>
            Gets a value indicating whether [has categories].
            </summary>
            <value>
              <c>true</c> if [has categories]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.ProductsRecursive">
            <summary>
            Gets a list of products which belong to the category
            </summary>
            <value>
            The products recursive.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:uWebshop.API.ICategory.Template">
            <summary>
            Gets the template of the product
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="T:uWebshop.API.Customers">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Customers.GetAllCustomers">
            <summary>
            Gets all customers.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomers(System.String)">
            <summary>
            Gets the customers.
            </summary>
            <param name="group">The group.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomersBySpending(System.Int32,System.String)">
            <summary>
            Gets the customers by spending.
            </summary>
            <param name="amountInCents">The amount information cents.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetOrders(System.Int32,System.String)">
            <summary>
            Gets the orders.
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetOrders(System.String,System.String)">
            <summary>
            Gets the orders.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetWishlist(System.String,System.String)">
            <summary>
            Gets the wishlist for the current membership user or the current guest
            </summary>
            <param name="wishlistName">Name of the wishlist.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetWishlist(System.Int32,System.String,System.String)">
            <summary>
            Gets the wishlist.
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <param name="wishlistName">Name of the wishlist.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetWishlist(System.String,System.String,System.String)">
            <summary>
            Gets the wishlist.
            </summary>
            <param name="userName">Name of the usern.</param>
            <param name="wishlistName">Name of the wishlist.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetWishlists(System.Int32,System.String)">
            <summary>
            Gets the wishlists.
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetWishlists(System.String,System.String)">
            <summary>
            Gets the wishlists.
            </summary>
            <param name="userName">Name of the usern.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomerValueFromSession(System.String)">
            <summary>
            Get the customer field value from from session
            </summary>
            <param name="fieldName">the property field name</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomerValueFromProfile(System.String)">
            <summary>
            Get the customer field value from from membership
            </summary>
            <param name="fieldName">the property field name</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomerValueFromSessionOrProfile(System.String)">
            <summary>
            Get the customer field value first from session then from membership
            </summary>
            <param name="fieldName">the property field name</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomerValueFromSessionOrBasketOrProfile(uWebshop.Domain.Interfaces.IBasket,System.String)">
            <summary>
            Get the customer field value first from from session, then from the current saved basket and finally from membership
            </summary>
            <param name="fieldName">the property field name</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Customers.GetCustomerValueFromSessionOrBasketOrProfile(System.String,System.String)">
            <summary>
            Get the customer field value first from from session, then from the current saved basket and finally from membership
            </summary>
            <param name="guidAsString">the basket guid as a string</param>
            <param name="fieldName">the property field name</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.API.Discounts">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Discounts.GetAllOrderDiscounts(System.String,System.String)">
            <summary>
            Gets all order discounts.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Discounts.GetDiscountsForOrder(System.String,System.String,System.String)">
            <summary>
            Gets all discounts for the given order
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Discounts.GetDiscountsForOrder(uWebshop.Domain.Interfaces.IBasket,System.String,System.String)">
            <summary>
            Gets all discounts for the given order
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Discounts.GetDiscountForProduct(System.Int32,System.String,System.String)">
            <summary>
            Gets the discount for product.
            </summary>
            <param name="productId">The product unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Discounts.GetDiscountForProduct(uWebshop.API.IProduct,System.String,System.String)">
            <summary>
            Gets the discount for product.
            </summary>
            <param name="product">The product.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">product</exception>
        </member>
        <member name="M:uWebshop.API.Discounts.GetDiscountForProductVariant(System.Int32,System.String,System.String)">
            <summary>
            Gets the discount for product variant.
            </summary>
            <param name="variantId">The variant unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Discounts.GetDiscountForProductVariant(uWebshop.Domain.Interfaces.IProductVariant,System.String,System.String)">
            <summary>
            Gets the discount for product variant.
            </summary>
            <param name="variant">The variant.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">variant</exception>
        </member>
        <member name="T:uWebshop.API.IOrderDiscount">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderDiscountInternalExternalShared">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.API.IOrderDiscount.CouponCodes">
            <summary>
            Gets the coupon codes.
            </summary>
            <value>
            The coupon codes.
            </value>
        </member>
        <member name="T:uWebshop.Domain.IOrderedProduct">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.SKU">
            <summary>
            Gets or sets the sku.
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage.
            </summary>
            <value>
            The discount percentage.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.DiscountExcludingVariants">
            <summary>
            Gets or sets a value indicating whether [discount excluding variants].
            </summary>
            <value>
            <c>true</c> if [discount excluding variants]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Quantity">
            <summary>
            Gets or sets the item count.
            </summary>
            <value>
            The item count.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.CatalogProduct">
            <summary>
            Gets the product.
            </summary>
            <value>
            The product.
            </value>
            <exception cref="T:System.Exception">ProductInfo without ProductId</exception>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Ranges">
            <summary>
            Gets or sets the ranges.
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.IsDiscounted">
            <summary>
            Gets or sets a value indicating whether [is discounted].
            </summary>
            <value>
              <c>true</c> if [is discounted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.OriginalId">
            <summary>
            Gets the original unique identifier.
            </summary>
            <value>
            The original unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProduct.Variants">
            <summary>
            Gets the variants.
            </summary>
            <value>
            The variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.IOrderedProductVariant.OriginalId">
            <summary>
            Gets the original unique identifier.
            </summary>
            <value>
            The original unique identifier.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderFields">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderFields.GetValue``1(System.String)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderLine.GetValue``1(System.String)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderLine.Quantity">
            <summary>
            Gets the quantity.
            </summary>
            <value>
            The quantity.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderLine.Product">
            <summary>
            Gets the product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderLine.Amount">
            <summary>
            Gets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderLine.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="T:uWebshop.API.Orders">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrder">
            <summary>
            Gets the current order.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrder(System.String)">
            <summary>
            Gets the order.
            </summary>
            <param name="guid">The unique identifier as string</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrder(System.Guid)">
            <summary>
            Gets the order.
            </summary>
            <param name="guid">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrderByTransactionId(System.String)">
            <summary>
            Gets the order by transaction unique identifier.
            </summary>
            <param name="transactionId">The transaction unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetAllOrders(System.String)">
            <summary>
            Gets all orders.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrders(uWebshop.Common.OrderStatus,System.String)">
            <summary>
            Gets the orders.
            </summary>
            <param name="status">The status.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrders(System.Int32,System.String)">
            <summary>
            Gets the orders.
            </summary>
            <param name="days">The days.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrders(System.DateTime,System.DateTime,System.String)">
            <summary>
            Gets the orders.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrdersForCustomer(System.Int32,System.String)">
            <summary>
            Gets the orders for customer.
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetOrdersForCustomer(System.String,System.String)">
            <summary>
            Gets the orders for customer.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Orders.GetCompletedOrder">
            <summary>
            Get completed order for current customer
            </summary>
            <returns></returns>
        </member>
        <member name="T:uWebshop.API.IProduct">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.IProduct.GetAllVariants">
            <summary>
            Gets all variants.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.IProduct.NiceUrl">
            <summary>
            The url for this product
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.IProduct.NiceUrl(System.String)">
            <summary>
            The url for this product based on the current store
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.IProduct.NiceUrl(System.Boolean,System.String,System.String)">
            <summary>
            The url for this product based on the current store
            </summary>
            <param name="getCanonicalUrl">if set to <c>true</c> get the canonical URL.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.IProduct.GetProperty(System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="propertyAlias">The property alias.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.API.IProduct.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.HasCategories">
            <summary>
            Gets a value indicating whether [has categories].
            </summary>
            <value>
              <c>true</c> if [has categories]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Categories">
            <summary>
            Gets the categories.
            </summary>
            <value>
            The categories.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.PricesIncludingVat">
            <summary>
            Gets a value indicating whether [prices including vat].
            </summary>
            <value>
              <c>true</c> if [prices including vat]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.SKU">
            <summary>
            Product Number
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Tags">
            <summary>
            Gets the tags of the product
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Images">
            <summary>
            List of images of the product
            </summary>
            <value>
            The images.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Files">
            <summary>
            List of files of the product
            </summary>
            <value>
            The files.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Length">
            <summary>
            Length of the product
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Width">
            <summary>
            Width of the product
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Height">
            <summary>
            Height of the product
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Weight">
            <summary>
            Weight of the product
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Ranges">
            <summary>
            Ranges from the range data type
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Vat">
            <summary>
            The taxpercentage of the pricing
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Stock">
            <summary>
            Stock count
            </summary>
            <value>
            The stock.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.TotalItemsOrdered">
            <summary>
            Number of times this item was ordered
            </summary>
            <value>
            The total items ordered.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.OrderCount">
            <summary>
            Gets the number of times this Product is ordered
            </summary>
            <value>
            The order count.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.StockStatus">
            <summary>
            The status of the stock
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [stock status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.BackorderStatus">
            <summary>
            The status of backorder
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [backorder status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.UseVariantStock">
            <summary>
            Gets a value indicating whether [use variant stock].
            </summary>
            <value>
              <c>true</c> if [use variant stock]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Discount">
            <summary>
            Gets the sale of the pricing
            </summary>
            <value>
            The product discount.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.VariantGroups">
            <summary>
            The groups with variants for this product
            </summary>
            <value>
            The product variant groups.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Orderable">
            <summary>
            Is this product orderable
            stock should be higher then 0
            if stock is lower then 0, but backorder is enabled
            if the stockstatus is disabled
            if UseVariantStock and product has variants and all variants can be ordered
            </summary>
            <value>
              <c>true</c> if [orderable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.IsDiscounted">
            <summary>
            Returns if the pricing is discounted
            </summary>
            <value>
              <c>true</c> if [is discounted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Url">
            <summary>
            The url for this product based on the current store
            </summary>
            <value>
            The url.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Title">
            <summary>
            Gets the title of the content
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.MetaDescription">
            <summary>
            Gets the short description of the content
            </summary>
            <value>
            The meta description.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Description">
            <summary>
            Gets the long description of the content
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.API.IProduct.Template">
            <summary>
            Gets the template of the product
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="T:uWebshop.API.Providers">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Providers.GetAllPaymentProviders(System.String,System.String)">
            <summary>
            Gets all payment providers.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Providers.GetPaymentProvidersForOrder(uWebshop.Domain.Interfaces.IBasket,System.Boolean,System.String,System.String)">
            <summary>
            Gets the payment providers for the given basket 
            </summary>
            <param name="order">the order to match the payment providers with</param>
            <param name="useZone">if set to <c>true</c> [use zone].</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Providers.GetPaymentProvidersForOrder(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Gets the payment providers for a basket by unique order id (Guid)
            </summary>
            <param name="guidAsString">The guid for the order as string</param>
            <param name="useZone">if set to <c>true</c> [use zone].</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Providers.GetAllFulfillmentProviders(System.String,System.String)">
            <summary>
            Gets all fulfillment providers. (ie shipping/pickup/etc)
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Providers.GetFulfillmentProvidersForOrder(uWebshop.Domain.Interfaces.IBasket,System.Boolean,System.String,System.String)">
            <summary>
            Gets the fulfillment providers. (ie shipping/pickup/etc) for a basket
            </summary>
            <param name="order">the order to match the fulfillment providers with</param>
            <param name="useZone">if set to <c>true</c> use zone/countries.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Providers.GetFulfillmentProvidersForOrder(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Gets the fulfillment providers. (ie shipping/pickup/etc) for a basket by Unique Order Id (Guid)
            </summary>
            <param name="order">the order to match the fulfillment providers with</param>
            <param name="useZone">if set to <c>true</c> use zone/countries.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.MethodId">
            <summary>
            Gets the method unique identifier.
            </summary>
            <value>
            The method unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.MethodTitle">
            <summary>
            Gets the method title.
            </summary>
            <value>
            The method title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.Fulfilled">
            <summary>
            Gets a value indicating whether [fulfilled].
            </summary>
            <value>
              <c>true</c> if [fulfilled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.Status">
            <summary>
            Gets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IChosenFulfillmentProvider.TrackingToken">
            <summary>
            Gets the tracking token.
            </summary>
            <value>
            The tracking token.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IFulfillmentProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProvider.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProvider.SortOrder">
            <summary>
            Gets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProvider.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProvider.Methods">
            <summary>
            Gets the methods.
            </summary>
            <value>
            The methods.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProvider.Type">
            <summary>
            Gets the type of the fulfillment provider.
            </summary>
            <value>
            The type of the fulfillment provider.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod.SortOrder">
            <summary>
            Gets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod.Amount">
            <summary>
            Gets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IFulfillmentProviderMethod.Image">
            <summary>
            Gets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="T:uWebshop.API.Store">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.API.Store.GetStore">
            <summary>
            Gets the store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Store.GetAllStores">
            <summary>
            Gets all stores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Store.GetCurrentLocalization">
            <summary>
            Get the current localization
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Store.GetAllCountries(System.String,System.String)">
            <summary>
            Get all the countries from country.xml or country_storealias.xml
            If not found a fallback list will be used
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Store.GetCountryNameFromCountryCode(System.String)">
            <summary>
            Get the full country name based on the country code country.xml or country_storealias.xml
            returns the given countrycode if no match can be made
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Store.GetCurrencySymbol(System.String)">
            <summary>
            Get currency symbol from ISOcurrencyCode
            </summary>
            <param name="ISOCurrencySymbol"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.API.Store.CreateBasicPrice(System.Int32,System.String,System.String)">
            <summary>
            Create a basic IPrice object
            </summary>
            <param name="price"></param>
            <param name="storeAlias"></param>
            <param name="currencyCode"></param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IProductVariant">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IProductVariant.PriceIncludingProduct(uWebshop.API.IProduct)">
            <summary>
            Gets the price including the product.
            </summary>
            <value>
            The price including the product.
            </value>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IProductVariant.GetProperty(System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="propertyAlias">The property alias.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Orderable">
            <summary>
            Is this product variant orderable:
            stock should be higher then 0
            if stock is lower then 0, but backorder is enabled
            if the stockstatus is disabled
            </summary>
            <value>
              <c>true</c> if [orderable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Discount">
            <summary>
            Gets the sale of the pricing
            </summary>
            <value>
            The product variant discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.IsDiscounted">
            <summary>
            Returns if the pricing is discounted
            </summary>
            <value>
              <c>true</c> if [is discounted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Title">
            <summary>
            Gets the title of the content
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.SKU">
            <summary>
            ProductVariant SKU
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Group">
            <summary>
            Gets or sets the group.
            </summary>
            <value>
            The group.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Required">
            <summary>
            Gets or sets a value indicating whether [required variant].
            </summary>
            <value>
              <c>true</c> if [required variant]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Description">
            <summary>
            Gets the long description of the content
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Length">
            <summary>
            Length of the product
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Width">
            <summary>
            Width of the product
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Height">
            <summary>
            Height of the product
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Weight">
            <summary>
            Weight of the product
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Ranges">
            <summary>
            Ranges from the range data type
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.Stock">
            <summary>
            Gets the stock of the variant
            </summary>
            <value>
            The stock.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.OrderCount">
            <summary>
            Gets the number of times this ProductVariant is ordered
            </summary>
            <value>
            The order count.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.StockStatus">
            <summary>
            The status of the stock
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [stock status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariant.BackorderStatus">
            <summary>
            The status of backorder
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [backorder status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IProductVariantGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariantGroup.Variants">
            <summary>
            Product Variants in this group
            </summary>
            <value>
            The product variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariantGroup.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariantGroup.Required">
            <summary>
            Gets a value indicating whether the variant group is required.
            </summary>
            <value>
            <c>true</c> if the variant group is required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductVariantGroup.Id">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BaseClasses.DiscountBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.BaseClasses.uWebshopEntity">
            <summary>
                Class based on the Umbraco Node-class to inherit from
            </summary>
        </member>
        <member name="F:uWebshop.Domain.BaseClasses.uWebshopEntity._nodeName">
            <summary>
            The _node name
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.uWebshopEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.BaseClasses.uWebshopEntity"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.uWebshopEntity.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.NodeBase class
            </summary>
            <param name="id">NodeId of the node</param>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.Node">
            <summary>
            Gets the node.
            </summary>
            <value> The node.
            </value>
            <exception cref="T:System.ArgumentException">Request for Node but no nodeId</exception>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.Id">
            <summary>
                Gets the id of the node
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.Disabled">
            <summary>
            Gets a value indicating whether the entity is disabled.
            </summary>
            <value>
              <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.NodeTypeAlias">
            <summary>
                Gets the type alias of the node
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.Name">
            <summary>
                Gets the name of the node
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.ParentId">
            <summary>
                Gets the id of the parent of the node
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.CreateDate">
            <summary>
                Gets a System.DateTime object that is set to the date and time when the node is created
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.UpdateDate">
            <summary>
                Gets a System.DateTime object that is set to the date and time when the node is updated
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.SortOrder">
            <summary>
                SortOrder for the node
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.uWebshopEntity.UrlName">
            <summary>
            Gets or sets the name of the URL.
            </summary>
            <value>
            The name of the URL.
            </value>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.DiscountBase.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.BaseClasses.DiscountBase"/> class.
            </summary>
            <param name="nodeId">The node unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.DiscountBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.BaseClasses.DiscountBase"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.DiscountBase.RangedDiscountValue(System.Int32)">
            <summary>
            Gets the ranged discount value.
            </summary>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.Title">
            <summary>
            Gets the title of the content
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.Description">
            <summary>
            Gets the long description of the content
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.Disabled">
            <summary>
            Gets or sets a value indicating whether [disable].
            </summary>
            <value>
              <c>true</c> if [disable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.Ranges">
            <summary>
            Ranges from the range data type
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.DiscountType">
            <summary>
            Type of discount (Percentage, Amount, Free shipping)
            </summary>
            <value>
            The type of the discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.DiscountValue">
            <summary>
            The discount value in cents or percentage
            </summary>
            <value>
            The discount value.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.RangesString">
            <summary>
            Gets or sets the ranges string.
            </summary>
            <value>
            The ranges string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.CounterEnabled">
            <summary>
            Gets or sets a value indicating whether [counter enabled].
            </summary>
            <value>
              <c>true</c> if [counter enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.Counter">
            <summary>
            Gets or sets the counter.
            </summary>
            <value>
            The counter.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DiscountBase.MemberGroups">
            <summary>
            Membergroups this discount is valid for
            </summary>
            <value>
            The member groups.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BaseClasses.MediaBase">
            <summary>
            Class based on the Umbraco media class to inherit from
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.Id">
            <summary>
                Gets the id of the media item
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.ParentId">
            <summary>
                Gets the id of the parent of the media item
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.CreateDateTime">
            <summary>
                Gets a System.DateTime object that is set to the date and time when the media item is created
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.IsTrashed">
            <summary>
                Gets a value that indicates whether the item is in the trash
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.FileExtension">
            <summary>
                Gets the file extension of the file
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.FileSize">
            <summary>
                Gets the filesize of the file in bytes
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MediaBase.RelativePathToFile">
            <summary>
                Gets the relative path to the file from the root of the umbraco installation path
            </summary>
        </member>
        <member name="T:uWebshop.Domain.BaseClasses.DocumentBase">
            <summary>
                Class based on the Umbraco Document class to inherit from
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.DocumentBase.#ctor">
            <summary>
                Initializes a new instance of the uWebshop.Domain.DocumentBase class
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.DocumentBase.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.DocumentBase class
            </summary>
            <param name="id">NodeId of the document</param>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DocumentBase.Document">
            <summary>
                Gets the document
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DocumentBase.Id">
            <summary>
                Gets the id of the document
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.DocumentBase.UpdateDate">
            <summary>
                Gets a System.DateTime object that is set to the date and time when the document is updated
            </summary>
        </member>
        <member name="T:uWebshop.Domain.BaseClasses.MemberBase">
            <summary>
                Class based on the Umbraco Document class to inherit from
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.MemberBase.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.MemberBase class
            </summary>
            <param name="id">NodeId of the member</param>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.MemberBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.MemberBase class
            </summary>
            <param name="email">Email of the member</param>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MemberBase.Member">
            <summary>
                Gets the member
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MemberBase.Id">
            <summary>
                Gets the id of the member
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MemberBase.Profile">
            <summary>
            Gets the profile.
            </summary>
            <value>
            The profile.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.GetProperty(System.String)">
            <summary>
            Gets the property.
            </summary>
            <param name="propertyAlias">The property alias.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.Title">
            <summary>
                Gets the title of the content
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.URL">
            <summary>
                Gets the URL of the content
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.MetaDescription">
            <summary>
                Gets the short description of the content
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.Description">
            <summary>
                Gets the long description of the content
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.Template">
            <summary>
                Gets the template of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BaseClasses.MultiStoreUwebshopContent.Disabled">
            <summary>
                Is this content enabled?
            </summary>
        </member>
        <member name="T:uWebshop.Common.HttpRequestSender">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Common.IHttpRequestSender">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Common.IHttpRequestSender.SendRequest(System.String,System.String)">
            <summary>
            Send data to an URL using HTTP POST.
            </summary>
            <param name="url">Url to send to</param>
            <param name="postData">The data to send</param>
        </member>
        <member name="M:uWebshop.Common.IHttpRequestSender.GetRequest(System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            Send data to an URL using HTTP GET.
            </summary>
            <param name="url">Url to send to</param>
            <param name="postData">The data to send</param>
            <param name="headers">Additional Headers</param>
        </member>
        <member name="M:uWebshop.Common.HttpRequestSender.SendRequest(System.String,System.String)">
            <summary>
            Send data to an URL using HTTP POST.
            </summary>
            <param name="url">Url to send to</param>
            <param name="postData">The data to send</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Common.HttpRequestSender.GetRequest(System.String,System.String,System.Net.WebHeaderCollection)">
            <summary>
            Send data to an URL using HTTP GET.
            </summary>
            <param name="url">Url to send to</param>
            <param name="postData">The data to send</param>
            <param name="headers">Additional Headers</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IDiscountedRangedPrice">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IDiscountedPrice">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IVatPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IVatPrice.WithVat">
            <summary>
            Gets the price with vat.
            </summary>
            <value>
            The price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IVatPrice.WithoutVat">
            <summary>
            Gets the price without vat.
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IVatPrice.Vat">
            <summary>
            Gets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscountedPrice.BeforeDiscount">
            <summary>
            Gets the original price before the discount.
            </summary>
            <value>
            The original price before the discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscountedPrice.Discount">
            <summary>
            Gets the discount.
            </summary>
            <value>
            The discount.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IRangedPrice">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IRangedPrice.Ranged">
            <summary>
            Gets the ranged.
            </summary>
            <value>
            The ranged.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscountedRangedPrice.Ranged">
            <summary>
            Gets the price adjusted to the current order.
            </summary>
            <value>
            The ranged price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IDiscountedRangedPrice.BeforeDiscount">
            <summary>
            Gets the original price before the discount.
            </summary>
            <value>
            The original price before the discount.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPrice">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPrice.ToCurrencyString">
            <summary>
            Produces the currency string based on the current currency culture.
            </summary>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IPrice.Value">
            <summary>
            Gets the decimal value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IPrice.ValueInCents">
            <summary>
            Gets the price in cents.
            </summary>
            <value>
            The price in cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Core.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Core.Initialize.Reboot">
            <summary>
            (Re)boots uWebshop.
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IEntityRepository`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityRepository`1.GetById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityRepository`1.GetAll(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityRepository`1.ReloadData(`0,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Reloads the data.
            </summary>
            <param name="entity">The entity.</param>
            <param name="localization">The localization.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ICategoryService">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IEntityService`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityService`1.GetById(System.Int32,uWebshop.Domain.Interfaces.ILocalization,System.Boolean)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <param name="includeDisabled">if set to <c>true</c> [include disabled].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityService`1.GetAll(uWebshop.Domain.Interfaces.ILocalization,System.Boolean)">
            <summary>
            Gets all.
            </summary>
            <param name="localization">The localization.</param>
            <param name="includeDisabled">if set to <c>true</c> [include disabled].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityService`1.ReloadEntityWithId(System.Int32)">
            <summary>
            Reloads the entity with unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityService`1.UnloadEntityWithId(System.Int32)">
            <summary>
            Unloads the entity with unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IEntityService`1.FullResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICategoryService.GetAllRootCategories(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all root categories.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ICMSContentService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSContentService.GetReadonlyById(System.Int32)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSContentService.GenerateDomainUrlForContent(System.Int32)">
            <summary>
            Generates the domain URL for content with unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSContentService.GetById(System.Int32)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSContentService.GetFileById(System.Int32)">
            <summary>
            Gets the file by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSContentService.GetImageById(System.Int32)">
            <summary>
            Gets the image by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ICMSEntityRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSEntityRepository.GetByGlobalId(System.Int32)">
            <summary>
            Gets the by global unique identifier.
            </summary>
            <param name="globalId">The global unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSEntityRepository.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSEntityRepository.GetObjectsByAlias``1(System.String,uWebshop.Domain.Interfaces.ILocalization,System.Int32)">
            <summary>
            Gets the objects by alias.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nodeTypeAlias">The node type alias.</param>
            <param name="localization">The localization.</param>
            <param name="startNodeId">The start node unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSEntityRepository.GetObjectsByAliasUncached``1(System.String,uWebshop.Domain.Interfaces.ILocalization,System.Int32)">
            <summary>
            Gets the objects by alias uncached.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nodeTypeAlias">The node type alias.</param>
            <param name="localization">The localization.</param>
            <param name="startNodeId">The start node unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICMSEntityRepository.GetNodeWithStorePicker(System.Int32)">
            <summary>
            Gets the node with store picker.
            </summary>
            <param name="storeId">The store unique identifier.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPaymentProviderMethodRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.FulfillmentStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.FulfillmentStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.FulfillmentStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.FulfillmentStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.FulfillmentStatus.Partial">
            <summary>
            Partial
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IProductDiscount">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductDiscount.ExcludeVariants">
            <summary>
            Gets or sets a value indicating whether [exclude variants].
            </summary>
            <value>
              <c>true</c> if [exclude variants]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IProductDiscount.DiscountValue">
            <summary>
            Gets the discount value.
            </summary>
            <value>
            The discount value.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderInfo.PricesAreIncludingVAT">
            <summary>
            Gets or sets a value indicating whether the prices are including vat.
            </summary>
            <value>
            <c>true</c> if the prices are including vat; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderInfo.OrderLines">
            <summary>
            Gets or sets the order lines.
            </summary>
            <value>
            The order lines.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderInfo.StoreInfo">
            <summary>
            Gets the store information.
            </summary>
            <value>
            The store information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderInfo.Localization">
            <summary>
            Gets the localization.
            </summary>
            <value>
            The localization.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Bson.BsonObjectId">
            <summary>
            Represents a BSON Oid (object id).
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonObjectId"/> class.
            </summary>
            <param name="value">The Oid value.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Bson.BsonObjectId.Value">
            <summary>
            Gets or sets the value of the Oid.
            </summary>
            <value>The value of the Oid.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Bson.BsonReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> class with the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>true if the next token was read successfully; false if there are no more tokens to read.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.ReadAsString">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.String"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.Skip">
            <summary>
            Skips the children of the current token.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.SetToken(uWebshop.Newtonsoft.Json.JsonToken)">
            <summary>
            Sets the current token.
            </summary>
            <param name="newToken">The new token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.SetToken(uWebshop.Newtonsoft.Json.JsonToken,System.Object)">
            <summary>
            Sets the current token and value.
            </summary>
            <param name="newToken">The new token.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent">
            <summary>
            Sets the state based on current token type.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReader.Close">
            <summary>
            Changes the <see cref="T:uWebshop.Newtonsoft.Json.JsonReader.State"/> to Closed. 
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.CurrentState">
            <summary>
            Gets the current reader state.
            </summary>
            <value>The current reader state.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.CloseInput">
            <summary>
            Gets or sets a value indicating whether the underlying stream or
            <see cref="T:System.IO.TextReader"/> should be closed when the reader is closed.
            </summary>
            <value>
            true to close the underlying stream or <see cref="T:System.IO.TextReader"/> when
            the reader is closed; otherwise false. The default is true.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.QuoteChar">
            <summary>
            Gets the quotation mark character used to enclose the value of a string.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.DateTimeZoneHandling">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> time zones are handling when reading JSON.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.DateParseHandling">
            <summary>
            Get or set how date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed when reading JSON.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.FloatParseHandling">
            <summary>
            Get or set how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when reading JSON. Reading past this depth will throw a <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.TokenType">
            <summary>
            Gets the type of the current JSON token. 
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.Value">
            <summary>
            Gets the text value of the current JSON token.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.ValueType">
            <summary>
            Gets The Common Language Runtime (CLR) type for the current JSON token.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.Depth">
            <summary>
            Gets the depth of the current token in the JSON document.
            </summary>
            <value>The depth of the current token in the JSON document.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.Path">
            <summary>
            Gets the path of the current JSON token. 
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReader.Culture">
            <summary>
            Gets or sets the culture used when reading JSON. Defaults to <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonReader.State">
            <summary>
            Specifies the state of the reader.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Start">
            <summary>
            The Read method has not been called.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Complete">
            <summary>
            The end of the file has been reached successfully.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Property">
            <summary>
            Reader is at a property.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.ObjectStart">
            <summary>
            Reader is at the start of an object.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Object">
            <summary>
            Reader is in an object.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.ArrayStart">
            <summary>
            Reader is at the start of an array.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Array">
            <summary>
            Reader is in an array.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Closed">
            <summary>
            The Close method has been called.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.PostValue">
            <summary>
            Reader has just read a value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.ConstructorStart">
            <summary>
            Reader is at the start of a constructor.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Constructor">
            <summary>
            Reader in a constructor.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Error">
            <summary>
            An error occurred that prevents the read operation from continuing.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonReader.State.Finished">
            <summary>
            The end of the file has been reached successfully.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonReader"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonReader"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.Stream,System.Boolean,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonReader"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="readRootValueAsArray">if set to <c>true</c> the root object will be read as a JSON array.</param>
            <param name="dateTimeKindHandling">The <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.#ctor(System.IO.BinaryReader,System.Boolean,System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonReader"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="readRootValueAsArray">if set to <c>true</c> the root object will be read as a JSON array.</param>
            <param name="dateTimeKindHandling">The <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null. This method will return <c>null</c> at the end of an array.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadAsString">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.String"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>
            A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonReader.Close">
            <summary>
            Changes the <see cref="T:uWebshop.Newtonsoft.Json.JsonReader.State"/> to Closed.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Bson.BsonReader.JsonNet35BinaryCompatibility">
            <summary>
            Gets or sets a value indicating whether binary data reading should compatible with incorrect Json.NET 3.5 written binary.
            </summary>
            <value>
            	<c>true</c> if binary data reading will be compatible with incorrect Json.NET 3.5 written binary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Bson.BsonReader.ReadRootValueAsArray">
            <summary>
            Gets or sets a value indicating whether the root object will be read as a JSON array.
            </summary>
            <value>
            	<c>true</c> if the root object will be read as a JSON array; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Bson.BsonReader.DateTimeKindHandling">
            <summary>
            Gets or sets the <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.
            </summary>
            <value>The <see cref="T:System.DateTimeKind"/> used when reading <see cref="T:System.DateTime"/> values from BSON.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Bson.BsonWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating JSON data.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.#ctor">
            <summary>
            Creates an instance of the <c>JsonWriter</c> class. 
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteEndObject">
            <summary>
            Writes the end of a Json object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteEndArray">
            <summary>
            Writes the end of an array.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteEndConstructor">
            <summary>
            Writes the end constructor.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteEnd">
            <summary>
            Writes the end of the current Json object or array.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteToken(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Writes the current <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> token and its children.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read the token from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteToken(uWebshop.Newtonsoft.Json.JsonReader,System.Boolean)">
            <summary>
            Writes the current <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> token.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read the token from.</param>
            <param name="writeChildren">A flag indicating whether the current token's children should be written.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteEnd(uWebshop.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteIndent">
            <summary>
            Writes indent characters.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValueDelimiter">
            <summary>
            Writes the JSON value delimiter.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteIndentSpace">
            <summary>
            Writes an indent space.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON without changing the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteRawValue(System.String)">
            <summary>
            Writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int32})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.UInt32})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int64})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.UInt64})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Single})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Boolean})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Int16})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.UInt16})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Char})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Byte})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.SByte})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Decimal})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTime})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.DateTimeOffset})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.Guid})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Nullable{System.TimeSpan})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object"/> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text. 
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.WriteWhitespace(System.String)">
            <summary>
            Writes out the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriter.SetWriteState(uWebshop.Newtonsoft.Json.JsonToken,System.Object)">
            <summary>
            Sets the state of the JsonWriter,
            </summary>
            <param name="token">The JsonToken being written.</param>
            <param name="value">The value being written.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.CloseOutput">
            <summary>
            Gets or sets a value indicating whether the underlying stream or
            <see cref="T:System.IO.TextReader"/> should be closed when the writer is closed.
            </summary>
            <value>
            true to close the underlying stream or <see cref="T:System.IO.TextReader"/> when
            the writer is closed; otherwise false. The default is true.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.WriteState">
            <summary>
            Gets the state of the writer.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.Path">
            <summary>
            Gets the path of the writer. 
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.Formatting">
            <summary>
            Indicates how JSON text output is formatted.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.DateFormatHandling">
            <summary>
            Get or set how dates are written to JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.DateTimeZoneHandling">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> time zones are handling when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.StringEscapeHandling">
            <summary>
            Get or set how strings are escaped when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.FloatFormatHandling">
            <summary>
            Get or set how special floating point numbers, e.g. <see cref="F:System.Double.NaN"/>,
            <see cref="F:System.Double.PositiveInfinity"/> and <see cref="F:System.Double.NegativeInfinity"/>,
            are written to JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.DateFormatString">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> and <see cref="T:System.DateTimeOffset"/> values are formatting when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriter.Culture">
            <summary>
            Gets or sets the culture used when writing JSON. Defaults to <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonWriter"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.#ctor(System.IO.BinaryWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteEnd(uWebshop.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteRawValue(System.String)">
            <summary>
            Writes raw JSON where a value is expected and updates the writer's state.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object"/> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteObjectId(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value that represents a BSON object id.
            </summary>
            <param name="value">The Object ID value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Bson.BsonWriter.WriteRegex(System.String,System.String)">
            <summary>
            Writes a BSON regex.
            </summary>
            <param name="pattern">The regex pattern.</param>
            <param name="options">The regex options.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Bson.BsonWriter.DateTimeKindHandling">
            <summary>
            Gets or sets the <see cref="T:System.DateTimeKind"/> used when writing <see cref="T:System.DateTime"/> values to BSON.
            When set to <see cref="F:System.DateTimeKind.Unspecified"/> no conversion will occur.
            </summary>
            <value>The <see cref="T:System.DateTimeKind"/> used when writing <see cref="T:System.DateTime"/> values to BSON.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.BinaryConverter">
            <summary>
            Converts a binary value to and from a base 64 string value.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonConverter">
            <summary>
            Converts an object to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConverter.GetSchema">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of the JSON produced by the JsonConverter.
            </summary>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of the JSON produced by the JsonConverter.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonConverter.CanRead">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can read JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can read JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value><c>true</c> if this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.BinaryConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.BinaryConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.BinaryConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.BsonObjectIdConverter">
            <summary>
            Converts a <see cref="T:uWebshop.Newtonsoft.Json.Bson.BsonObjectId"/> to and from JSON and BSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.CustomCreationConverter`1">
            <summary>
            Create a custom object
            </summary>
            <typeparam name="T">The object type to convert.</typeparam>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.CustomCreationConverter`1.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.CustomCreationConverter`1.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.CustomCreationConverter`1.Create(System.Type)">
            <summary>
            Creates an object which will then be populated by the serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.CustomCreationConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.CustomCreationConverter`1.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.DataSetConverter">
            <summary>
            Converts a <see cref="T:System.Data.DataSet"/> to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DataSetConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DataSetConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.DataTableConverter">
            <summary>
            Converts a <see cref="T:System.Data.DataTable"/> to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DataTableConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DataTableConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.DateTimeConverterBase">
            <summary>
            Provides a base class for converting a <see cref="T:System.DateTime"/> to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.EntityKeyMemberConverter">
            <summary>
            Converts an Entity Framework EntityKey to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.EntityKeyMemberConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.EntityKeyMemberConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.EntityKeyMemberConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.ExpandoObjectConverter">
            <summary>
            Converts an ExpandoObject to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.ExpandoObjectConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.ExpandoObjectConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.ExpandoObjectConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.ExpandoObjectConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
            	<c>true</c> if this <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.IsoDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to and from the ISO 8601 date format (e.g. 2008-04-12T12:53Z).
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeStyles">
            <summary>
            Gets or sets the date time styles used when converting a date to and from JSON.
            </summary>
            <value>The date time styles used when converting a date to and from JSON.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when converting a date to and from JSON.
            </summary>
            <value>The date time format used when converting a date to and from JSON.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.IsoDateTimeConverter.Culture">
            <summary>
            Gets or sets the culture used when converting a date to and from JSON.
            </summary>
            <value>The culture used when converting a date to and from JSON.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to and from a JavaScript date constructor (e.g. new Date(52231943)).
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.KeyValuePairConverter">
            <summary>
            Converts a <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.RegexConverter">
            <summary>
            Converts a <see cref="T:System.Text.RegularExpressions.Regex"/> to and from JSON and BSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.RegexConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.RegexConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.RegexConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.StringEnumConverter">
            <summary>
            Converts an <see cref="T:System.Enum"/> to and from its name string value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.StringEnumConverter.CamelCaseText">
            <summary>
            Gets or sets a value indicating whether the written enum text should be camel case.
            </summary>
            <value><c>true</c> if the written enum text will be camel case; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.VersionConverter">
            <summary>
            Converts a <see cref="T:System.Version"/> to and from a string (e.g. "1.2.3.4").
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.VersionConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.VersionConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.VersionConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter">
            <summary>
            Converts XML to and from JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="serializer">The calling serializer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(uWebshop.Newtonsoft.Json.JsonReader,System.Type,System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(System.String,System.String@)">
            <summary>
            Checks if the attributeName is a namespace attribute.
            </summary>
            <param name="attributeName">Attribute name to test.</param>
            <param name="prefix">The attribute name prefix if it has one, otherwise an empty string.</param>
            <returns>True if attribute name is for a namespace attribute, otherwise false.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified value type.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified value type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeRootElementName">
            <summary>
            Gets or sets the name of the root element to insert when deserializing to XML if the JSON structure has produces multiple root elements.
            </summary>
            <value>The name of the deserialize root element.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.WriteArrayAttribute">
            <summary>
            Gets or sets a flag to indicate whether to write the Json.NET array attribute.
            This attribute helps preserve arrays when converting the written XML back to JSON.
            </summary>
            <value><c>true</c> if the array attibute is written to the XML; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Converters.XmlNodeConverter.OmitRootObject">
            <summary>
            Gets or sets a value indicating whether to write the root JSON object.
            </summary>
            <value><c>true</c> if the JSON root object is omitted; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.ConstructorHandling">
            <summary>
            Specifies how constructors are used when initializing objects during deserialization by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ConstructorHandling.Default">
            <summary>
            First attempt to use the public default constructor, then fall back to single paramatized constructor, then the non-public default constructor.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ConstructorHandling.AllowNonPublicDefaultConstructor">
            <summary>
            Json.NET will use a non-public default constructor before falling back to a paramatized constructor.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.DateFormatHandling">
            <summary>
            Specifies how dates are formatted when writing JSON text.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateFormatHandling.IsoDateFormat">
            <summary>
            Dates are written in the ISO 8601 format, e.g. "2012-03-21T05:40Z".
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateFormatHandling.MicrosoftDateFormat">
            <summary>
            Dates are written in the Microsoft JSON format, e.g. "\/Date(1198908717056)\/".
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.DateParseHandling">
            <summary>
            Specifies how date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed when reading JSON text.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateParseHandling.None">
            <summary>
            Date formatted strings are not parsed to a date type and are read as strings.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateParseHandling.DateTime">
            <summary>
            Date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed to <see cref="F:uWebshop.Newtonsoft.Json.DateParseHandling.DateTime"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateParseHandling.DateTimeOffset">
            <summary>
            Date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed to <see cref="F:uWebshop.Newtonsoft.Json.DateParseHandling.DateTimeOffset"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.DateTimeZoneHandling">
            <summary>
            Specifies how to treat the time value when converting between string and <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateTimeZoneHandling.Local">
            <summary>
            Treat as local time. If the <see cref="T:System.DateTime"/> object represents a Coordinated Universal Time (UTC), it is converted to the local time.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateTimeZoneHandling.Utc">
            <summary>
            Treat as a UTC. If the <see cref="T:System.DateTime"/> object represents a local time, it is converted to a UTC.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateTimeZoneHandling.Unspecified">
            <summary>
            Treat as a local time if a <see cref="T:System.DateTime"/> is being converted to a string.
            If a string is being converted to <see cref="T:System.DateTime"/>, convert to a local time if a time zone is specified.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DateTimeZoneHandling.RoundtripKind">
            <summary>
            Time zone information should be preserved when converting.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.DefaultValueHandling">
            <summary>
            Specifies default value handling options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="ReducingSerializedJsonSizeDefaultValueHandlingObject" title="DefaultValueHandling Class"/>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="ReducingSerializedJsonSizeDefaultValueHandlingExample" title="DefaultValueHandling Ignore Example"/>
            </example>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DefaultValueHandling.Include">
            <summary>
            Include members where the member value is the same as the member's default value when serializing objects.
            Included members are written to JSON. Has no effect when deserializing.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DefaultValueHandling.Ignore">
            <summary>
            Ignore members where the member value is the same as the member's default value when serializing objects
            so that is is not written to JSON.
            This option will ignore all default values (e.g. <c>null</c> for objects and nullable typesl; <c>0</c> for integers,
            decimals and floating point numbers; and <c>false</c> for booleans). The default value ignored can be changed by
            placing the <see cref="T:System.ComponentModel.DefaultValueAttribute"/> on the property.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DefaultValueHandling.Populate">
            <summary>
            Members with a default value but no JSON will be set to their default value when deserializing.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.DefaultValueHandling.IgnoreAndPopulate">
            <summary>
            Ignore members where the member value is the same as the member's default value when serializing objects
            and sets members to their default value when deserializing.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.FloatFormatHandling">
            <summary>
            Specifies float format handling options when writing special floating point numbers, e.g. <see cref="F:System.Double.NaN"/>,
            <see cref="F:System.Double.PositiveInfinity"/> and <see cref="F:System.Double.NegativeInfinity"/> with <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.FloatFormatHandling.String">
            <summary>
            Write special floating point values as strings in JSON, e.g. "NaN", "Infinity", "-Infinity".
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.FloatFormatHandling.Symbol">
            <summary>
            Write special floating point values as symbols in JSON, e.g. NaN, Infinity, -Infinity.
            Note that this will produce non-valid JSON.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.FloatFormatHandling.DefaultValue">
            <summary>
            Write special floating point values as the property's default value in JSON, e.g. 0.0 for a <see cref="T:System.Double"/> property, null for a <see cref="T:System.Nullable`1"/> property.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.FloatParseHandling">
            <summary>
            Specifies how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.FloatParseHandling.Double">
            <summary>
            Floating point numbers are parsed to <see cref="F:uWebshop.Newtonsoft.Json.FloatParseHandling.Double"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.FloatParseHandling.Decimal">
            <summary>
            Floating point numbers are parsed to <see cref="F:uWebshop.Newtonsoft.Json.FloatParseHandling.Decimal"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Formatting">
            <summary>
            Specifies formatting options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonTextWriter"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Formatting.None">
            <summary>
            No special formatting is applied. This is the default.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Formatting.Indented">
            <summary>
            Causes child objects to be indented according to the <see cref="P:uWebshop.Newtonsoft.Json.JsonTextWriter.Indentation"/> and <see cref="P:uWebshop.Newtonsoft.Json.JsonTextWriter.IndentChar"/> settings.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.IJsonLineInfo">
            <summary>
            Provides an interface to enable a class to return line and position information.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.IJsonLineInfo.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            	<c>true</c> if LineNumber and LinePosition can be provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.IJsonLineInfo.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>The current line number or 0 if no line information is available (for example, HasLineInfo returns false).</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.IJsonLineInfo.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value>The current line position or 0 if no line information is available (for example, HasLineInfo returns false).</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonArrayAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> how to serialize the collection.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonContainerAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> how to serialize the object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonContainerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonContainerAttribute"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonContainerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonContainerAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.ItemConverterType">
            <summary>
            Gets the collection's items converter.
            </summary>
            <value>The collection's items converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.IsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve object references.
            </summary>
            <value>
            	<c>true</c> to keep object reference; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.ItemIsReference">
            <summary>
            Gets or sets a value that indicates whether to preserve collection's items references.
            </summary>
            <value>
            	<c>true</c> to keep collection's items object references; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing the collection's items.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonContainerAttribute.ItemTypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing the collection's items.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonArrayAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonArrayAttribute"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonArrayAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonObjectAttribute"/> class with a flag indicating whether the array can contain null items
            </summary>
            <param name="allowNullItems">A flag indicating whether the array can contain null items.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonArrayAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonArrayAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonArrayAttribute.AllowNullItems">
            <summary>
            Gets or sets a value indicating whether null items are allowed in the collection.
            </summary>
            <value><c>true</c> if null items are allowed in the collection; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonConstructorAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> to use the specified constructor when deserializing that object.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonConvert">
            <summary>
            Provides methods for converting between common language runtime types and JSON types.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="SerializeObject" title="Serializing and Deserializing JSON with JsonConvert" />
            </example>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.True">
            <summary>
            Represents JavaScript's boolean value true as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.False">
            <summary>
            Represents JavaScript's boolean value false as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.Null">
            <summary>
            Represents JavaScript's null as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.Undefined">
            <summary>
            Represents JavaScript's undefined as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.PositiveInfinity">
            <summary>
            Represents JavaScript's positive infinity as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.NegativeInfinity">
            <summary>
            Represents JavaScript's negative infinity as a string. This field is read-only.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonConvert.NaN">
            <summary>
            Represents JavaScript's NaN as a string. This field is read-only.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.DateTime,uWebshop.Newtonsoft.Json.DateFormatHandling,uWebshop.Newtonsoft.Json.DateTimeZoneHandling)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to its JSON string representation using the <see cref="T:uWebshop.Newtonsoft.Json.DateFormatHandling"/> specified.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="format">The format the date will be converted to.</param>
            <param name="timeZoneHandling">The time zone handling when the date is converted to a string.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)">
            <summary>
            Converts the <see cref="T:System.DateTimeOffset"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset,uWebshop.Newtonsoft.Json.DateFormatHandling)">
            <summary>
            Converts the <see cref="T:System.DateTimeOffset"/> to its JSON string representation using the <see cref="T:uWebshop.Newtonsoft.Json.DateFormatHandling"/> specified.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="format">The format the date will be converted to.</param>
            <returns>A JSON string representation of the <see cref="T:System.DateTimeOffset"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Boolean)">
            <summary>
            Converts the <see cref="T:System.Boolean"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Char)">
            <summary>
            Converts the <see cref="T:System.Char"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Char"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Enum)">
            <summary>
            Converts the <see cref="T:System.Enum"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Enum"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Int32)">
            <summary>
            Converts the <see cref="T:System.Int32"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Int16)">
            <summary>
            Converts the <see cref="T:System.Int16"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.UInt16)">
            <summary>
            Converts the <see cref="T:System.UInt16"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt16"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.UInt32)">
            <summary>
            Converts the <see cref="T:System.UInt32"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt32"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Int64)">
            <summary>
            Converts the <see cref="T:System.Int64"/>  to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.UInt64)">
            <summary>
            Converts the <see cref="T:System.UInt64"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.UInt64"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Single)">
            <summary>
            Converts the <see cref="T:System.Single"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Double)">
            <summary>
            Converts the <see cref="T:System.Double"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Byte)">
            <summary>
            Converts the <see cref="T:System.Byte"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.SByte)">
            <summary>
            Converts the <see cref="T:System.SByte"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.SByte"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Decimal)">
            <summary>
            Converts the <see cref="T:System.Decimal"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.SByte"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Guid)">
            <summary>
            Converts the <see cref="T:System.Guid"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)">
            <summary>
            Converts the <see cref="T:System.TimeSpan"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Uri)">
            <summary>
            Converts the <see cref="T:System.Uri"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.String,System.Char)">
            <summary>
            Converts the <see cref="T:System.String"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="delimiter">The string delimiter character.</param>
            <returns>A JSON string representation of the <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.ToString(System.Object)">
            <summary>
            Converts the <see cref="T:System.Object"/> to its JSON string representation.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>A JSON string representation of the <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object)">
            <summary>
            Serializes the specified object to a JSON string.
            </summary>
            <param name="value">The object to serialize.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,uWebshop.Newtonsoft.Json.Formatting)">
            <summary>
            Serializes the specified object to a JSON string using formatting.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Serializes the specified object to a JSON string using a collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="converters">A collection converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,uWebshop.Newtonsoft.Json.Formatting,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Serializes the specified object to a JSON string using formatting and a collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="converters">A collection converters used while serializing.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="settings">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to serialize the object.
            If this is null, default serialization settings will be is used.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,uWebshop.Newtonsoft.Json.Formatting,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using formatting and <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="settings">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to serialize the object.
            If this is null, default serialization settings will be is used.</param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObject(System.Object,System.Type,uWebshop.Newtonsoft.Json.Formatting,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string using a type, formatting and <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="settings">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to serialize the object.
            If this is null, default serialization settings will be is used.</param>
            <param name="type">
            The type of the value being serialized.
            This parameter is used when <see cref="T:uWebshop.Newtonsoft.Json.TypeNameHandling"/> is Auto to write out the type name if the type of the value does not match.
            Specifing the type is optional.
            </param>
            <returns>
            A JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObjectAsync(System.Object)">
            <summary>
            Asynchronously serializes the specified object to a JSON string.
            Serialization will happen on a new thread.
            </summary>
            <param name="value">The object to serialize.</param>
            <returns>
            A task that represents the asynchronous serialize operation. The value of the <c>TResult</c> parameter contains a JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObjectAsync(System.Object,uWebshop.Newtonsoft.Json.Formatting)">
            <summary>
            Asynchronously serializes the specified object to a JSON string using formatting.
            Serialization will happen on a new thread.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>
            A task that represents the asynchronous serialize operation. The value of the <c>TResult</c> parameter contains a JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeObjectAsync(System.Object,uWebshop.Newtonsoft.Json.Formatting,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Asynchronously serializes the specified object to a JSON string using formatting and a collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            Serialization will happen on a new thread.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="settings">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to serialize the object.
            If this is null, default serialization settings will be is used.</param>
            <returns>
            A task that represents the asynchronous serialize operation. The value of the <c>TResult</c> parameter contains a JSON string representation of the object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String)">
            <summary>
            Deserializes the JSON to a .NET object.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <returns>The deserialized object from the Json string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to a .NET object using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type)">
            <summary>
            Deserializes the JSON to the specified .NET type.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The <see cref="T:System.Type"/> of object being deserialized.</param>
            <returns>The deserialized object from the Json string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String)">
            <summary>
            Deserializes the JSON to the specified .NET type.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <returns>The deserialized object from the Json string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeAnonymousType``1(System.String,``0)">
            <summary>
            Deserializes the JSON to the given anonymous type.
            </summary>
            <typeparam name="T">
            The anonymous type to deserialize to. This can't be specified
            traditionally and must be infered from the anonymous type passed
            as a parameter.
            </typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="anonymousTypeObject">The anonymous type object.</param>
            <returns>The deserialized anonymous type from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeAnonymousType``1(System.String,``0,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the given anonymous type using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <typeparam name="T">
            The anonymous type to deserialize to. This can't be specified
            traditionally and must be infered from the anonymous type passed
            as a parameter.
            </typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="anonymousTypeObject">The anonymous type object.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>The deserialized anonymous type from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Deserializes the JSON to the specified .NET type using a collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="converters">Converters to use while deserializing.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject``1(System.String,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the specified .NET type using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The object to deserialize.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Deserializes the JSON to the specified .NET type using a collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize.</param>
            <param name="converters">Converters to use while deserializing.</param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObject(System.String,System.Type,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the specified .NET type using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize to.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObjectAsync``1(System.String)">
            <summary>
            Asynchronously deserializes the JSON to the specified .NET type.
            Deserialization will happen on a new thread.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <returns>
            A task that represents the asynchronous deserialize operation. The value of the <c>TResult</c> parameter contains the deserialized object from the JSON string.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObjectAsync``1(System.String,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Asynchronously deserializes the JSON to the specified .NET type using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            Deserialization will happen on a new thread.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>
            A task that represents the asynchronous deserialize operation. The value of the <c>TResult</c> parameter contains the deserialized object from the JSON string.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(System.String)">
            <summary>
            Asynchronously deserializes the JSON to the specified .NET type.
            Deserialization will happen on a new thread.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <returns>
            A task that represents the asynchronous deserialize operation. The value of the <c>TResult</c> parameter contains the deserialized object from the JSON string.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(System.String,System.Type,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Asynchronously deserializes the JSON to the specified .NET type using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            Deserialization will happen on a new thread.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize to.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>
            A task that represents the asynchronous deserialize operation. The value of the <c>TResult</c> parameter contains the deserialized object from the JSON string.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.PopulateObject(System.String,System.Object)">
            <summary>
            Populates the object with values from the JSON string.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.PopulateObject(System.String,System.Object,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Populates the object with values from the JSON string using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.PopulateObjectAsync(System.String,System.Object,uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Asynchronously populates the object with values from the JSON string using <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The JSON to populate values from.</param>
            <param name="target">The target object to populate values onto.</param>
            <param name="settings">
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            If this is null, default serialization settings will be is used.
            </param>
            <returns>
            A task that represents the asynchronous populate operation.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode)">
            <summary>
            Serializes the XML node to a JSON string.
            </summary>
            <param name="node">The node to serialize.</param>
            <returns>A JSON string of the XmlNode.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode,uWebshop.Newtonsoft.Json.Formatting)">
            <summary>
            Serializes the XML node to a JSON string using formatting.
            </summary>
            <param name="node">The node to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>A JSON string of the XmlNode.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeXmlNode(System.Xml.XmlNode,uWebshop.Newtonsoft.Json.Formatting,System.Boolean)">
            <summary>
            Serializes the XML node to a JSON string using formatting and omits the root object if <see cref="!:omitRootObject"/> is <c>true</c>.
            </summary>
            <param name="node">The node to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="omitRootObject">Omits writing the root object.</param>
            <returns>A JSON string of the XmlNode.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String)">
            <summary>
            Deserializes the XmlNode from a JSON string.
            </summary>
            <param name="value">The JSON string.</param>
            <returns>The deserialized XmlNode</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String,System.String)">
            <summary>
            Deserializes the XmlNode from a JSON string nested in a root elment specified by <see cref="!:deserializeRootElementName"/>.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <returns>The deserialized XmlNode</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeXmlNode(System.String,System.String,System.Boolean)">
            <summary>
            Deserializes the XmlNode from a JSON string nested in a root elment specified by <see cref="!:deserializeRootElementName"/>
            and writes a .NET array attribute for collections.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <param name="writeArrayAttribute">
            A flag to indicate whether to write the Json.NET array attribute.
            This attribute helps preserve arrays when converting the written XML back to JSON.
            </param>
            <returns>The deserialized XmlNode</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeXNode(System.Xml.Linq.XObject)">
            <summary>
            Serializes the <see cref="T:System.Xml.Linq.XNode"/> to a JSON string.
            </summary>
            <param name="node">The node to convert to JSON.</param>
            <returns>A JSON string of the XNode.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeXNode(System.Xml.Linq.XObject,uWebshop.Newtonsoft.Json.Formatting)">
            <summary>
            Serializes the <see cref="T:System.Xml.Linq.XNode"/> to a JSON string using formatting.
            </summary>
            <param name="node">The node to convert to JSON.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <returns>A JSON string of the XNode.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.SerializeXNode(System.Xml.Linq.XObject,uWebshop.Newtonsoft.Json.Formatting,System.Boolean)">
            <summary>
            Serializes the <see cref="T:System.Xml.Linq.XNode"/> to a JSON string using formatting and omits the root object if <see cref="!:omitRootObject"/> is <c>true</c>.
            </summary>
            <param name="node">The node to serialize.</param>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="omitRootObject">Omits writing the root object.</param>
            <returns>A JSON string of the XNode.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeXNode(System.String)">
            <summary>
            Deserializes the <see cref="T:System.Xml.Linq.XNode"/> from a JSON string.
            </summary>
            <param name="value">The JSON string.</param>
            <returns>The deserialized XNode</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeXNode(System.String,System.String)">
            <summary>
            Deserializes the <see cref="T:System.Xml.Linq.XNode"/> from a JSON string nested in a root elment specified by <see cref="!:deserializeRootElementName"/>.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <returns>The deserialized XNode</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConvert.DeserializeXNode(System.String,System.String,System.Boolean)">
            <summary>
            Deserializes the <see cref="T:System.Xml.Linq.XNode"/> from a JSON string nested in a root elment specified by <see cref="!:deserializeRootElementName"/>
            and writes a .NET array attribute for collections.
            </summary>
            <param name="value">The JSON string.</param>
            <param name="deserializeRootElementName">The name of the root element to append when deserializing.</param>
            <param name="writeArrayAttribute">
            A flag to indicate whether to write the Json.NET array attribute.
            This attribute helps preserve arrays when converting the written XML back to JSON.
            </param>
            <returns>The deserialized XNode</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonConvert.DefaultSettings">
            <summary>
            Gets or sets a function that creates default <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            Default settings are automatically used by serialization methods on <see cref="T:uWebshop.Newtonsoft.Json.JsonConvert"/>,
            and <see cref="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToObject``1"/> and <see cref="M:uWebshop.Newtonsoft.Json.Linq.JToken.FromObject(System.Object)"/> on <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            To serialize without using any default settings create a <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> with
            <see cref="M:uWebshop.Newtonsoft.Json.JsonSerializer.Create"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonConverterAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> to use the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> when serializing the member or class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonConverterAttribute"/> class.
            </summary>
            <param name="converterType">Type of the converter.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonConverterAttribute.ConverterType">
            <summary>
            Gets the type of the converter.
            </summary>
            <value>The type of the converter.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonConverterCollection">
            <summary>
            Represents a collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonDictionaryAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> how to serialize the collection.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonDictionaryAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonDictionaryAttribute"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonDictionaryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonDictionaryAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonException">
            <summary>
            The exception thrown when an error occurs during Json serialization or deserialization.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonException"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonExtensionDataAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> to populate properties with no matching class member onto the specified collection.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonIgnoreAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> not to serialize the public field or public read/write property value.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonObjectAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> how to serialize the object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonObjectAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonObjectAttribute"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonObjectAttribute.#ctor(uWebshop.Newtonsoft.Json.MemberSerialization)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonObjectAttribute"/> class with the specified member serialization.
            </summary>
            <param name="memberSerialization">The member serialization.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonObjectAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonObjectAttribute"/> class with the specified container Id.
            </summary>
            <param name="id">The container Id.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonObjectAttribute.MemberSerialization">
            <summary>
            Gets or sets the member serialization.
            </summary>
            <value>The member serialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonObjectAttribute.ItemRequired">
            <summary>
            Gets or sets a value that indicates whether the object's properties are required.
            </summary>
            <value>
            	A value indicating whether the object's properties are required.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonPropertyAttribute">
            <summary>
            Instructs the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> to always serialize the member with the specified name.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonPropertyAttribute"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonPropertyAttribute"/> class with the specified name.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.ItemConverterType">
            <summary>
            Gets or sets the converter used when serializing the property's collection items.
            </summary>
            <value>The collection's items converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.NullValueHandling">
            <summary>
            Gets or sets the null value handling used when serializing this property.
            </summary>
            <value>The null value handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.DefaultValueHandling">
            <summary>
            Gets or sets the default value handling used when serializing this property.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.ReferenceLoopHandling">
            <summary>
            Gets or sets the reference loop handling used when serializing this property.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.ObjectCreationHandling">
            <summary>
            Gets or sets the object creation handling used when deserializing this property.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.TypeNameHandling">
            <summary>
            Gets or sets the type name handling used when serializing this property.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.IsReference">
            <summary>
            Gets or sets whether this property's value is serialized as a reference.
            </summary>
            <value>Whether this property's value is serialized as a reference.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.Order">
            <summary>
            Gets or sets the order of serialization and deserialization of a member.
            </summary>
            <value>The numeric order of serialization or deserialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.Required">
            <summary>
            Gets or sets a value indicating whether this property is required.
            </summary>
            <value>
            	A value indicating whether this property is required.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the the reference loop handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items reference loop handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.ItemTypeNameHandling">
            <summary>
            Gets or sets the the type name handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items type name handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonPropertyAttribute.ItemIsReference">
            <summary>
            Gets or sets whether this property's collection items are serialized as a reference.
            </summary>
            <value>Whether this property's collection items are serialized as a reference.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonReaderException">
            <summary>
            The exception thrown when an error occurs while reading Json text.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReaderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReaderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReaderException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReaderException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonReaderException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonSerializationException">
            <summary>
            The exception thrown when an error occurs during Json serialization or deserialization.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializationException"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializationException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializationException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonSerializer">
            <summary>
            Serializes and deserializes objects into and from the JSON format.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> enables you to control how objects are encoded into JSON.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Create">
            <summary>
            Creates a new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will not use default settings.
            </summary>
            <returns>
            A new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will not use default settings.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Create(uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will not use default settings.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.</param>
            <returns>
            A new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will not use default settings.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.CreateDefault">
            <summary>
            Creates a new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will use default settings.
            </summary>
            <returns>
            A new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will use default settings.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.CreateDefault(uWebshop.Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates a new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will use default settings.
            </summary>
            <param name="settings">The settings to be applied to the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.</param>
            <returns>
            A new <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> instance using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/>.
            The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> will use default settings.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader,System.Object)">
            <summary>
            Populates the JSON values onto the target object.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> that contains the JSON structure to reader values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Populate(uWebshop.Newtonsoft.Json.JsonReader,System.Object)">
            <summary>
            Populates the JSON values onto the target object.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that contains the JSON structure to reader values from.</param>
            <param name="target">The target object to populate values onto.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Deserialize(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that contains the JSON structure to deserialize.</param>
            <returns>The <see cref="T:System.Object"/> being deserialized.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:System.IO.StringReader"/>
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> containing the object.</param>
            <param name="objectType">The <see cref="T:System.Type"/> of object being deserialized.</param>
            <returns>The instance of <paramref name="objectType"/> being deserialized.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Deserialize``1(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> containing the object.</param>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <returns>The instance of <typeparamref name="T"/> being deserialized.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Deserialize(uWebshop.Newtonsoft.Json.JsonReader,System.Type)">
            <summary>
            Deserializes the Json structure contained by the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>
            into an instance of the specified type.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> containing the object.</param>
            <param name="objectType">The <see cref="T:System.Type"/> of object being deserialized.</param>
            <returns>The instance of <paramref name="objectType"/> being deserialized.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> and writes the Json structure
            to a <c>Stream</c> using the specified <see cref="T:System.IO.TextWriter"/>. 
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> used to write the Json structure.</param>
            <param name="value">The <see cref="T:System.Object"/> to serialize.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Serialize(uWebshop.Newtonsoft.Json.JsonWriter,System.Object,System.Type)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> and writes the Json structure
            to a <c>Stream</c> using the specified <see cref="T:System.IO.TextWriter"/>. 
            </summary>
            <param name="jsonWriter">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> used to write the Json structure.</param>
            <param name="value">The <see cref="T:System.Object"/> to serialize.</param>
            <param name="objectType">
            The type of the value being serialized.
            This parameter is used when <see cref="P:uWebshop.Newtonsoft.Json.JsonSerializer.TypeNameHandling"/> is Auto to write out the type name if the type of the value does not match.
            Specifing the type is optional.
            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter,System.Object,System.Type)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> and writes the Json structure
            to a <c>Stream</c> using the specified <see cref="T:System.IO.TextWriter"/>. 
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> used to write the Json structure.</param>
            <param name="value">The <see cref="T:System.Object"/> to serialize.</param>
            <param name="objectType">
            The type of the value being serialized.
            This parameter is used when <see cref="P:uWebshop.Newtonsoft.Json.JsonSerializer.TypeNameHandling"/> is Auto to write out the type name if the type of the value does not match.
            Specifing the type is optional.
            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializer.Serialize(uWebshop.Newtonsoft.Json.JsonWriter,System.Object)">
            <summary>
            Serializes the specified <see cref="T:System.Object"/> and writes the Json structure
            to a <c>Stream</c> using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>. 
            </summary>
            <param name="jsonWriter">The <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> used to write the Json structure.</param>
            <param name="value">The <see cref="T:System.Object"/> to serialize.</param>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.JsonSerializer.Error">
            <summary>
            Occurs when the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> errors during serialization and deserialization.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.ReferenceResolver">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver"/> used by the serializer when resolving references.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.Binder">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder"/> used by the serializer when resolving type names.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.TraceWriter">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.ITraceWriter"/> used by the serializer when writing trace messages.
            </summary>
            <value>The trace writer.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.TypeNameHandling">
            <summary>
            Gets or sets how type name writing and reading is handled by the serializer.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.TypeNameAssemblyFormat">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.PreserveReferencesHandling">
            <summary>
            Gets or sets how object references are preserved by the serializer.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.ReferenceLoopHandling">
            <summary>
            Get or set how reference loops (e.g. a class referencing itself) is handled.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.MissingMemberHandling">
            <summary>
            Get or set how missing members (e.g. JSON contains a property that isn't a member on the object) are handled during deserialization.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.NullValueHandling">
            <summary>
            Get or set how null values are handled during serialization and deserialization.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.DefaultValueHandling">
            <summary>
            Get or set how null default are handled during serialization and deserialization.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.ObjectCreationHandling">
            <summary>
            Gets or sets how objects are created during deserialization.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.ConstructorHandling">
            <summary>
            Gets or sets how constructors are used during deserialization.
            </summary>
            <value>The constructor handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.Converters">
            <summary>
            Gets a collection <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> that will be used during serialization.
            </summary>
            <value>Collection <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> that will be used during serialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.ContractResolver">
            <summary>
            Gets or sets the contract resolver used by the serializer when
            serializing .NET objects to JSON and vice versa.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.Context">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext"/> used by the serializer when invoking serialization callback methods.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.Formatting">
            <summary>
            Indicates how JSON text output is formatted.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.DateFormatHandling">
            <summary>
            Get or set how dates are written to JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.DateTimeZoneHandling">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> time zones are handling during serialization and deserialization.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.DateParseHandling">
            <summary>
            Get or set how date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed when reading JSON.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.FloatParseHandling">
            <summary>
            Get or set how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.FloatFormatHandling">
            <summary>
            Get or set how special floating point numbers, e.g. <see cref="F:System.Double.NaN"/>,
            <see cref="F:System.Double.PositiveInfinity"/> and <see cref="F:System.Double.NegativeInfinity"/>,
            are written as JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.StringEscapeHandling">
            <summary>
            Get or set how strings are escaped when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.DateFormatString">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> and <see cref="T:System.DateTimeOffset"/> values are formatting when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.Culture">
            <summary>
            Gets or sets the culture used when reading JSON. Defaults to <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when reading JSON. Reading past this depth will throw a <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializer.CheckAdditionalContent">
            <summary>
            Gets a value indicating whether there will be a check for additional JSON content after deserializing an object.
            </summary>
            <value>
            	<c>true</c> if there will be a check for additional JSON content after deserializing an object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings">
            <summary>
            Specifies the settings on a <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonSerializerSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializerSettings"/> class.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.ReferenceLoopHandling">
            <summary>
            Gets or sets how reference loops (e.g. a class referencing itself) is handled.
            </summary>
            <value>Reference loop handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.MissingMemberHandling">
            <summary>
            Gets or sets how missing members (e.g. JSON contains a property that isn't a member on the object) are handled during deserialization.
            </summary>
            <value>Missing member handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.ObjectCreationHandling">
            <summary>
            Gets or sets how objects are created during deserialization.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.NullValueHandling">
            <summary>
            Gets or sets how null values are handled during serialization and deserialization.
            </summary>
            <value>Null value handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.DefaultValueHandling">
            <summary>
            Gets or sets how null default are handled during serialization and deserialization.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.Converters">
            <summary>
            Gets or sets a collection <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> that will be used during serialization.
            </summary>
            <value>The converters.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.PreserveReferencesHandling">
            <summary>
            Gets or sets how object references are preserved by the serializer.
            </summary>
            <value>The preserve references handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.TypeNameHandling">
            <summary>
            Gets or sets how type name writing and reading is handled by the serializer.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.TypeNameAssemblyFormat">
            <summary>
            Gets or sets how a type name assembly is written and resolved by the serializer.
            </summary>
            <value>The type name assembly format.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.ConstructorHandling">
            <summary>
            Gets or sets how constructors are used during deserialization.
            </summary>
            <value>The constructor handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.ContractResolver">
            <summary>
            Gets or sets the contract resolver used by the serializer when
            serializing .NET objects to JSON and vice versa.
            </summary>
            <value>The contract resolver.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.ReferenceResolver">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver"/> used by the serializer when resolving references.
            </summary>
            <value>The reference resolver.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.TraceWriter">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.ITraceWriter"/> used by the serializer when writing trace messages.
            </summary>
            <value>The trace writer.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.Binder">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder"/> used by the serializer when resolving type names.
            </summary>
            <value>The binder.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.Error">
            <summary>
            Gets or sets the error handler called during serialization and deserialization.
            </summary>
            <value>The error handler called during serialization and deserialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.Context">
            <summary>
            Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext"/> used by the serializer when invoking serialization callback methods.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.DateFormatString">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> and <see cref="T:System.DateTimeOffset"/> values are formatting when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.MaxDepth">
            <summary>
            Gets or sets the maximum depth allowed when reading JSON. Reading past this depth will throw a <see cref="T:uWebshop.Newtonsoft.Json.JsonReaderException"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.Formatting">
            <summary>
            Indicates how JSON text output is formatted.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.DateFormatHandling">
            <summary>
            Get or set how dates are written to JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.DateTimeZoneHandling">
            <summary>
            Get or set how <see cref="T:System.DateTime"/> time zones are handling during serialization and deserialization.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.DateParseHandling">
            <summary>
            Get or set how date formatted strings, e.g. "\/Date(1198908717056)\/" and "2012-03-21T05:40Z", are parsed when reading JSON.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.FloatFormatHandling">
            <summary>
            Get or set how special floating point numbers, e.g. <see cref="F:System.Double.NaN"/>,
            <see cref="F:System.Double.PositiveInfinity"/> and <see cref="F:System.Double.NegativeInfinity"/>,
            are written as JSON.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.FloatParseHandling">
            <summary>
            Get or set how floating point numbers, e.g. 1.0 and 9.9, are parsed when reading JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.StringEscapeHandling">
            <summary>
            Get or set how strings are escaped when writing JSON text.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.Culture">
            <summary>
            Gets or sets the culture used when reading JSON. Defaults to <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonSerializerSettings.CheckAdditionalContent">
            <summary>
            Gets a value indicating whether there will be a check for additional content after deserializing an object.
            </summary>
            <value>
            	<c>true</c> if there will be a check for additional content after deserializing an object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonTextReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to JSON text data.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> class with the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="reader">The <c>TextReader</c> containing the XML data to read.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null. This method will return <c>null</c> at the end of an array.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.ReadAsString">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.String"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.DateTimeOffset"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.Close">
            <summary>
            Changes the state to closed. 
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextReader.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            	<c>true</c> if LineNumber and LinePosition can be provided; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonTextReader.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>
            The current line number or 0 if no line information is available (for example, HasLineInfo returns false).
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonTextReader.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value>
            The current line position or 0 if no line information is available (for example, HasLineInfo returns false).
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonTextWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Creates an instance of the <c>JsonWriter</c> class using the specified <see cref="T:System.IO.TextWriter"/>. 
            </summary>
            <param name="textWriter">The <c>TextWriter</c> to write to.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteEnd(uWebshop.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the specified end token.
            </summary>
            <param name="token">The end token to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WritePropertyName(System.String,System.Boolean)">
            <summary>
            Writes the property name of a name/value pair on a JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="escape">A flag to indicate whether the text should be escaped when it is written as a JSON property name.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteIndent">
            <summary>
            Writes indent characters.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter">
            <summary>
            Writes the JSON value delimiter.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteIndentSpace">
            <summary>
            Writes an indent space.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object"/> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Nullable{System.Single})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Nullable{System.Double})">
            <summary>
            Writes a <see cref="T:System.Nullable`1"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Nullable`1"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text. 
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonTextWriter.WriteWhitespace(System.String)">
            <summary>
            Writes out the given white space.
            </summary>
            <param name="ws">The string of white space characters.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonTextWriter.Indentation">
            <summary>
            Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="T:uWebshop.Newtonsoft.Json.Formatting"/> is set to <c>Formatting.Indented</c>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonTextWriter.QuoteChar">
            <summary>
            Gets or sets which character to use to quote attribute values.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonTextWriter.IndentChar">
            <summary>
            Gets or sets which character to use for indenting when <see cref="T:uWebshop.Newtonsoft.Json.Formatting"/> is set to <c>Formatting.Indented</c>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonTextWriter.QuoteName">
            <summary>
            Gets or sets a value indicating whether object names will be surrounded with quotes.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonToken">
            <summary>
            Specifies the type of Json token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.None">
            <summary>
            This is returned by the <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> if a <see cref="M:uWebshop.Newtonsoft.Json.JsonReader.Read"/> method has not been called. 
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.StartObject">
            <summary>
            An object start token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.StartArray">
            <summary>
            An array start token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.StartConstructor">
            <summary>
            A constructor start token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.PropertyName">
            <summary>
            An object property name.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Raw">
            <summary>
            Raw JSON.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Integer">
            <summary>
            An integer.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Float">
            <summary>
            A float.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.String">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Null">
            <summary>
            A null token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Undefined">
            <summary>
            An undefined token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.EndObject">
            <summary>
            An object end token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.EndArray">
            <summary>
            An array end token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.EndConstructor">
            <summary>
            A constructor end token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Date">
            <summary>
            A Date.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.JsonToken.Bytes">
            <summary>
            Byte data.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonValidatingReader">
            <summary>
            Represents a reader that provides <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> validation.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.#ctor(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonValidatingReader"/> class that
            validates the content returned from the given <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> to read from while validating.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.ReadAsString">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.String"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonValidatingReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.JsonValidatingReader.ValidationEventHandler">
            <summary>
            Sets an event handler for receiving schema validation errors.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.Value">
            <summary>
            Gets the text value of the current JSON token.
            </summary>
            <value></value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.Depth">
            <summary>
            Gets the depth of the current token in the JSON document.
            </summary>
            <value>The depth of the current token in the JSON document.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.Path">
            <summary>
            Gets the path of the current JSON token. 
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.QuoteChar">
            <summary>
            Gets the quotation mark character used to enclose the value of a string.
            </summary>
            <value></value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.TokenType">
            <summary>
            Gets the type of the current JSON token.
            </summary>
            <value></value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.ValueType">
            <summary>
            Gets the Common Language Runtime (CLR) type for the current JSON token.
            </summary>
            <value></value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonValidatingReader.Reader">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> used to construct this <see cref="T:uWebshop.Newtonsoft.Json.JsonValidatingReader"/>.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> specified in the constructor.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.JsonWriterException">
            <summary>
            The exception thrown when an error occurs while reading Json text.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriterException"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriterException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriterException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.JsonWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriterException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.JsonWriterException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.MemberSerialization">
            <summary>
            Specifies the member serialization options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.MemberSerialization.OptOut">
            <summary>
            All public members are serialized by default. Members can be excluded using <see cref="T:uWebshop.Newtonsoft.Json.JsonIgnoreAttribute"/> or <see cref="T:System.NonSerializedAttribute"/>.
            This is the default member serialization mode.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.MemberSerialization.OptIn">
            <summary>
            Only members must be marked with <see cref="T:uWebshop.Newtonsoft.Json.JsonPropertyAttribute"/> or <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> are serialized.
            This member serialization mode can also be set by marking the class with <see cref="T:System.Runtime.Serialization.DataContractAttribute"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.MemberSerialization.Fields">
            <summary>
            All public and private fields are serialized. Members can be excluded using <see cref="T:uWebshop.Newtonsoft.Json.JsonIgnoreAttribute"/> or <see cref="T:System.NonSerializedAttribute"/>.
            This member serialization mode can also be set by marking the class with <see cref="T:System.SerializableAttribute"/>
            and setting IgnoreSerializableAttribute on <see cref="T:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver"/> to false.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.MissingMemberHandling">
            <summary>
            Specifies missing member handling options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.MissingMemberHandling.Ignore">
            <summary>
            Ignore a missing member and do not attempt to deserialize it.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.MissingMemberHandling.Error">
            <summary>
            Throw a <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializationException"/> when a missing member is encountered during deserialization.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.NullValueHandling">
            <summary>
            Specifies null value handling options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="ReducingSerializedJsonSizeNullValueHandlingObject" title="NullValueHandling Class"/>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="ReducingSerializedJsonSizeNullValueHandlingExample" title="NullValueHandling Ignore Example"/>
            </example>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.NullValueHandling.Include">
            <summary>
            Include null values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.NullValueHandling.Ignore">
            <summary>
            Ignore null values when serializing and deserializing objects.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.ObjectCreationHandling">
            <summary>
            Specifies how object creation is handled by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ObjectCreationHandling.Auto">
            <summary>
            Reuse existing objects, create new objects when needed.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ObjectCreationHandling.Reuse">
            <summary>
            Only reuse existing objects.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ObjectCreationHandling.Replace">
            <summary>
            Always create new objects.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.PreserveReferencesHandling">
            <summary>
            Specifies reference handling options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            Note that references cannot be preserved when a value is set via a non-default constructor such as types that implement ISerializable.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="PreservingObjectReferencesOn" title="Preserve Object References"/>       
            </example>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.PreserveReferencesHandling.None">
            <summary>
            Do not preserve references when serializing types.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.PreserveReferencesHandling.Objects">
            <summary>
            Preserve references when serializing into a JSON object structure.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.PreserveReferencesHandling.Arrays">
            <summary>
            Preserve references when serializing into a JSON array structure.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.PreserveReferencesHandling.All">
            <summary>
            Preserve references when serializing.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.ReferenceLoopHandling">
            <summary>
            Specifies reference loop handling options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ReferenceLoopHandling.Error">
            <summary>
            Throw a <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializationException"/> when a loop is encountered.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ReferenceLoopHandling.Ignore">
            <summary>
            Ignore loop references and do not serialize.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.ReferenceLoopHandling.Serialize">
            <summary>
            Serialize loop references.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Required">
            <summary>
            Indicating whether a property is required.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Required.Default">
            <summary>
            The property is not required. The default state.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Required.AllowNull">
            <summary>
            The property must be defined in JSON but can be a null value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Required.Always">
            <summary>
            The property must be defined in JSON and cannot be a null value.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.StringEscapeHandling">
            <summary>
            Specifies how strings are escaped when writing JSON text.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.StringEscapeHandling.Default">
            <summary>
            Only control characters (e.g. newline) are escaped.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.StringEscapeHandling.EscapeNonAscii">
            <summary>
            All non-ASCII and control characters (e.g. newline) are escaped.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.StringEscapeHandling.EscapeHtml">
            <summary>
            HTML (&lt;, &gt;, &amp;, &apos;, &quot;) and control characters (e.g. newline) are escaped.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.TypeNameHandling">
            <summary>
            Specifies type name handling options for the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.TypeNameHandling.None">
            <summary>
            Do not include the .NET type name when serializing types.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.TypeNameHandling.Objects">
            <summary>
            Include the .NET type name when serializing into a JSON object structure.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.TypeNameHandling.Arrays">
            <summary>
            Include the .NET type name when serializing into a JSON array structure.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.TypeNameHandling.All">
            <summary>
            Always include the .NET type name when serializing.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.TypeNameHandling.Auto">
            <summary>
            Include the .NET type name when the type of the object being serialized is not the same as its declared type.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.WriteState">
            <summary>
            Specifies the state of the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Error">
            <summary>
            An exception has been thrown, which has left the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> in an invalid state.
            You may call the <see cref="M:uWebshop.Newtonsoft.Json.JsonWriter.Close"/> method to put the <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> in the <c>Closed</c> state.
            Any other <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> method calls results in an <see cref="T:System.InvalidOperationException"/> being thrown. 
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Closed">
            <summary>
            The <see cref="M:uWebshop.Newtonsoft.Json.JsonWriter.Close"/> method has been called. 
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Object">
            <summary>
            An object is being written. 
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Array">
            <summary>
            A array is being written.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Constructor">
            <summary>
            A constructor is being written.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Property">
            <summary>
            A property is being written.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.WriteState.Start">
            <summary>
            A write method has not been called.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.Extensions">
            <summary>
            Contains the LINQ to JSON extension methods.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains the ancestors of every token in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the ancestors of every node in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of tokens that contains the descendants of every token in the source collection.
            </summary>
            <typeparam name="T">The type of the objects in source, constrained to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JContainer"/>.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the descendants of every node in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Properties(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JObject})">
            <summary>
            Returns a collection of child properties of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> that contains the properties of every object in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JToken},System.Object)">
            <summary>
            Returns a collection of child values of every object in the source collection with the given key.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the values of every node in the source collection with the given key.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Returns a collection of child values of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the values of every node in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JToken},System.Object)">
            <summary>
            Returns a collection of converted child values of every object in the source collection with the given key.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection with the given key.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Returns a collection of converted child values of every object in the source collection.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Value``1(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Value``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Children``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of child tokens of every array in the source collection.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the values of every node in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.Children``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a collection of converted child tokens of every array in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <typeparam name="T">The source collection type.</typeparam>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.AsJEnumerable(System.Collections.Generic.IEnumerable{uWebshop.Newtonsoft.Json.Linq.JToken})">
            <summary>
            Returns the input typed as <see cref="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1"/>.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>The input typed as <see cref="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.Extensions.AsJEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the input typed as <see cref="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1"/>.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the source collection.</param>
            <returns>The input typed as <see cref="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1"/>.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1">
            <summary>
            Represents a collection of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> objects.
            </summary>
            <typeparam name="T">The type of token</typeparam>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1.Item(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JArray">
            <summary>
            Represents a JSON array.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParseArray" title="Parsing a JSON Array from Text" />
            </example>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JContainer">
            <summary>
            Represents a token that can contain other tokens.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Represents an abstract JSON token.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.DeepEquals(uWebshop.Newtonsoft.Json.Linq.JToken,uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Compares the values of two tokens, including the values of all descendant tokens.
            </summary>
            <param name="t1">The first <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to compare.</param>
            <param name="t2">The second <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to compare.</param>
            <returns>true if the tokens are equal; otherwise false.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.AddAfterSelf(System.Object)">
            <summary>
            Adds the specified content immediately after this token.
            </summary>
            <param name="content">A content object that contains simple content or a collection of content objects to be added after this token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.AddBeforeSelf(System.Object)">
            <summary>
            Adds the specified content immediately before this token.
            </summary>
            <param name="content">A content object that contains simple content or a collection of content objects to be added before this token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Ancestors">
            <summary>
            Returns a collection of the ancestor tokens of this token.
            </summary>
            <returns>A collection of the ancestor tokens of this token.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.AfterSelf">
            <summary>
            Returns a collection of the sibling tokens after this token, in document order.
            </summary>
            <returns>A collection of the sibling tokens after this tokens, in document order.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.BeforeSelf">
            <summary>
            Returns a collection of the sibling tokens before this token, in document order.
            </summary>
            <returns>A collection of the sibling tokens before this token, in document order.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Value``1(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key converted to the specified type.
            </summary>
            <typeparam name="T">The type to convert the token to.</typeparam>
            <param name="key">The token key.</param>
            <returns>The converted token value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> containing the child tokens of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>, in document order.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Children``1">
            <summary>
            Returns a collection of the child tokens of this token, in document order, filtered by the specified type.
            </summary>
            <typeparam name="T">The type to filter the child tokens on.</typeparam>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1"/> containing the child tokens of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>, in document order.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the child values of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>, in document order.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Remove">
            <summary>
            Removes this token from its parent.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Replace(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Replaces this token with the specified token.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToString">
            <summary>
            Returns the indented JSON for this token.
            </summary>
            <returns>
            The indented JSON for this token.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToString(uWebshop.Newtonsoft.Json.Formatting,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Returns the JSON for this token using the given formatting and converters.
            </summary>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>The JSON for this token using the given formatting and converters.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.DateTimeOffset">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Boolean}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Int64">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Int64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTime}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Decimal}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Double}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Char}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Int16">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Int16"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.UInt16">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.UInt16"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Char">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Char"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Byte">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Byte"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int32}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int16}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt16}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Byte}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.DateTime">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int64}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Single}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Decimal">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Decimal"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt32}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt64}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Nullable`1"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Double">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Double"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Single">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.UInt32">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.UInt64">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Byte[]">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Byte[]"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Guid">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Guid"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Guid}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Guid"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.TimeSpan">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Nullable{System.TimeSpan}">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Explicit(uWebshop.Newtonsoft.Json.Linq.JToken)~System.Uri">
            <summary>
            Performs an explicit conversion from <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to <see cref="T:System.Uri"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Boolean)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.DateTimeOffset)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTimeOffset"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Boolean})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Int64)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.DateTime})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.DateTimeOffset})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Decimal})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Double})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Int16)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int16"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.UInt16)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt16"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Int32)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int32})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.DateTime)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTime"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int64})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Single})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Decimal)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Decimal"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Int16})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt16})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt32})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.UInt64})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Double)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Single)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.String)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.UInt32)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt32"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.UInt64)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt64"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Byte[])~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte[]"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Uri)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Uri"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.TimeSpan)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.TimeSpan"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.TimeSpan})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Guid)~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Guid"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.op_Implicit(System.Nullable{System.Guid})~uWebshop.Newtonsoft.Json.Linq.JToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> from.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.CreateReader">
            <summary>
            Creates an <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> for this token.
            </summary>
            <returns>An <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that can be used to read this token and its descendants.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the value of the specified object</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.FromObject(System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> from an object using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</param>
            <param name="jsonSerializer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> that will be used when reading the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the value of the specified object</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToObject``1">
            <summary>
            Creates the specified .NET type from the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <typeparam name="T">The object type that the token will be deserialized to.</typeparam>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToObject(System.Type)">
            <summary>
            Creates the specified .NET type from the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="objectType">The object type that the token will be deserialized to.</param>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToObject``1(uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates the specified .NET type from the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <typeparam name="T">The object type that the token will be deserialized to.</typeparam>
            <param name="jsonSerializer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> that will be used when creating the object.</param>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ToObject(System.Type,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates the specified .NET type from the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> using the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <param name="objectType">The object type that the token will be deserialized to.</param>
            <param name="jsonSerializer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> that will be used when creating the object.</param>
            <returns>The new object created from the JSON value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.ReadFrom(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> from a <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</param>
            <returns>
            An <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Parse(System.String)">
            <summary>
            Load a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.Load(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> from a <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</param>
            <returns>
            An <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.SelectToken(System.String)">
            <summary>
            Selects the token that matches the object path.
            </summary>
            <param name="path">
            The object path from the current <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>
            to be returned. This must be a string of property names or array indexes separated
            by periods, such as <code>Tables[0].DefaultView[0].Price</code> in C# or
            <code>Tables(0).DefaultView(0).Price</code> in Visual Basic.
            </param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that matches the object path or a null reference if no matching token is found.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.SelectToken(System.String,System.Boolean)">
            <summary>
            Selects the token that matches the object path.
            </summary>
            <param name="path">
            The object path from the current <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>
            to be returned. This must be a string of property names or array indexes separated
            by periods, such as <code>Tables[0].DefaultView[0].Price</code> in C# or
            <code>Tables(0).DefaultView(0).Price</code> in Visual Basic.
            </param>
            <param name="errorWhenNoMatch">A flag to indicate whether an error should be thrown if no token is found.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that matches the object path.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JToken.DeepClone">
            <summary>
            Creates a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>. All child tokens are recursively cloned.
            </summary>
            <returns>A new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.EqualityComparer">
            <summary>
            Gets a comparer that can compare two tokens for value equality.
            </summary>
            <value>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JTokenEqualityComparer"/> that can compare two nodes for value equality.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Root">
            <summary>
            Gets the root <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The root <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Type">
            <summary>
            Gets the node type for this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.HasValues">
            <summary>
            Gets a value indicating whether this token has child tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Next">
            <summary>
            Gets the next sibling token of this node.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the next sibling token.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Previous">
            <summary>
            Gets the previous sibling token of this node.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> that contains the previous sibling token.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Path">
            <summary>
            Gets the path of the JSON token. 
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Item(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.First">
            <summary>
            Get the first child token of this token.
            </summary>
            <value>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> containing the first child token of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JToken.Last">
            <summary>
            Get the last child token of this token.
            </summary>
            <value>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> containing the last child token of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            Raises the <see cref="E:uWebshop.Newtonsoft.Json.Linq.JContainer.AddingNew"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.AddingNewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:uWebshop.Newtonsoft.Json.Linq.JContainer.ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:uWebshop.Newtonsoft.Json.Linq.JContainer.CollectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.Children">
            <summary>
            Returns a collection of the child tokens of this token, in document order.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> containing the child tokens of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>, in document order.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the child values of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>, in document order.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.Descendants">
            <summary>
            Returns a collection of the descendant tokens for this token in document order.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the descendant tokens of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.Add(System.Object)">
            <summary>
            Adds the specified content as children of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="content">The content to be added.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.AddFirst(System.Object)">
            <summary>
            Adds the specified content as the first children of this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="content">The content to be added.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.CreateWriter">
            <summary>
            Creates an <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> that can be used to add tokens to the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <returns>An <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> that is ready to have content written to it.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.ReplaceAll(System.Object)">
            <summary>
            Replaces the children nodes of this token with the specified content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JContainer.RemoveAll">
            <summary>
            Removes the child nodes from this token.
            </summary>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.Linq.JContainer.ListChanged">
            <summary>
            Occurs when the list changes or an item in the list changes.
            </summary>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.Linq.JContainer.AddingNew">
            <summary>
            Occurs before an item is added to the collection.
            </summary>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.Linq.JContainer.CollectionChanged">
            <summary>
            Occurs when the items list of the collection has changed, or the collection is reset.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JContainer.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JContainer.HasValues">
            <summary>
            Gets a value indicating whether this token has child tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JContainer.First">
            <summary>
            Get the first child token of this token.
            </summary>
            <value>
            A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> containing the first child token of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JContainer.Last">
            <summary>
            Get the last child token of this token.
            </summary>
            <value>
            A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> containing the last child token of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JContainer.Count">
            <summary>
            Gets the count of child JSON tokens.
            </summary>
            <value>The count of child JSON tokens</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.#ctor(uWebshop.Newtonsoft.Json.Linq.JArray)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> class from another <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> object.
            </summary>
            <param name="other">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> object to copy from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Load(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> from a <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> that contains the JSON that was read from the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Parse(System.String)">
            <summary>
            Load a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> populated from the string that contains JSON.</returns>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParseArray" title="Parsing a JSON Array from Text"/>
            </example>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.FromObject(System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/>.</param>
            <param name="jsonSerializer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> that will be used to read the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.IndexOf(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Insert(System.Int32,uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Add(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Contains(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.CopyTo(uWebshop.Newtonsoft.Json.Linq.JToken[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JArray.Remove(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JArray.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JArray.Type">
            <summary>
            Gets the node type for this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JArray.Item(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JArray.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JArray.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JConstructor">
            <summary>
            Represents a JSON constructor.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.#ctor(uWebshop.Newtonsoft.Json.Linq.JConstructor)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> class from another <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> object.
            </summary>
            <param name="other">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> object to copy from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> class with the specified name and content.
            </summary>
            <param name="name">The constructor name.</param>
            <param name="content">The contents of the constructor.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> class with the specified name and content.
            </summary>
            <param name="name">The constructor name.</param>
            <param name="content">The contents of the constructor.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> class with the specified name.
            </summary>
            <param name="name">The constructor name.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JConstructor.Load(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> from a <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JConstructor"/> that contains the JSON that was read from the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JConstructor.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JConstructor.Name">
            <summary>
            Gets or sets the name of this constructor.
            </summary>
            <value>The constructor name.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JConstructor.Type">
            <summary>
            Gets the node type for this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JConstructor.Item(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1">
            <summary>
            Represents a collection of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> objects.
            </summary>
            <typeparam name="T">The type of token</typeparam>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.Empty">
            <summary>
            An empty collection of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> objects.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1"/> struct.
            </summary>
            <param name="enumerable">The enumerable.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1.Item(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.IJEnumerable`1"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JObject">
            <summary>
            Represents a JSON object.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParse" title="Parsing a JSON Object from Text" />
            </example>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.#ctor(uWebshop.Newtonsoft.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> class from another <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> object.
            </summary>
            <param name="other">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> object to copy from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> class with the specified content.
            </summary>
            <param name="content">The contents of the object.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> class with the specified content.
            </summary>
            <param name="content">The contents of the object.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.Properties">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of this object's properties.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of this object's properties.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.Property(System.String)">
            <summary>
            Gets a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> the specified name.
            </summary>
            <param name="name">The property name.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> with the specified name or null.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.PropertyValues">
            <summary>
            Gets an <see cref="T:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1"/> of this object's property values.
            </summary>
            <returns>An <see cref="T:uWebshop.Newtonsoft.Json.Linq.JEnumerable`1"/> of this object's property values.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.Load(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> from a <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> that contains the JSON that was read from the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.Parse(System.String)">
            <summary>
            Load a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> populated from the string that contains JSON.</returns>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\LinqToJsonTests.cs" region="LinqToJsonCreateParse" title="Parsing a JSON Object from Text"/>
            </example>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JObject"/> with the values of the specified object</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.FromObject(System.Object,uWebshop.Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/>.</param>
            <param name="jsonSerializer">The <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> that will be used to read the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.GetValue(System.String)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified property name.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.GetValue(System.String,System.StringComparison)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified property name.
            The exact property name will be searched for first and if no matching property is found then
            the <see cref="T:System.StringComparison"/> will be used to match a property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="comparison">One of the enumeration values that specifies how the strings will be compared.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified property name.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,System.StringComparison,uWebshop.Newtonsoft.Json.Linq.JToken@)">
            <summary>
            Tries to get the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified property name.
            The exact property name will be searched for first and if no matching property is found then
            the <see cref="T:System.StringComparison"/> will be used to match a property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <param name="comparison">One of the enumeration values that specifies how the strings will be compared.</param>
            <returns>true if a value was successfully retrieved; otherwise, false.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.Add(System.String,uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Adds the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.Remove(System.String)">
            <summary>
            Removes the property with the specified name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>true if item was successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.TryGetValue(System.String,uWebshop.Newtonsoft.Json.Linq.JToken@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
            <returns>true if a value was successfully retrieved; otherwise, false.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:uWebshop.Newtonsoft.Json.Linq.JObject.PropertyChanged"/> event with the provided arguments.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.OnPropertyChanging(System.String)">
            <summary>
            Raises the <see cref="E:uWebshop.Newtonsoft.Json.Linq.JObject.PropertyChanging"/> event with the provided arguments.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the filtered properties for this component instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"/> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"/> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"/> for this object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"/> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"/> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"/> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"/> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"/> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JObject.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.Linq.JObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:uWebshop.Newtonsoft.Json.Linq.JObject.PropertyChanging">
            <summary>
            Occurs when a property value is changing.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JObject.Type">
            <summary>
            Gets the node type for this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JObject.Item(System.Object)">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified key.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> with the specified property name.
            </summary>
            <value></value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JProperty">
            <summary>
            Represents a JSON property.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JProperty.#ctor(uWebshop.Newtonsoft.Json.Linq.JProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> class from another <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> object.
            </summary>
            <param name="other">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> object to copy from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JProperty.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="content">The property content.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="content">The property content.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JProperty.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JProperty.Load(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> from a <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/>.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/> that contains the JSON that was read from the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JProperty.ChildrenTokens">
            <summary>
            Gets the container's children tokens.
            </summary>
            <value>The container's children tokens.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JProperty.Name">
            <summary>
            Gets the property name.
            </summary>
            <value>The property name.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JProperty.Value">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JProperty.Type">
            <summary>
            Gets the node type for this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor">
            <summary>
            Represents a view of a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JProperty"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="propertyType">Type of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <returns>
            true if resetting the component changes its value; otherwise, false.
            </returns>
            <param name="component">The component to test for reset capability. 
                            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <returns>
            The value of a property for a given component.
            </returns>
            <param name="component">The component with the property for which to retrieve the value. 
                            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value. 
                            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set. 
                            </param><param name="value">The new value. 
                            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <returns>
            true if the property should be persisted; otherwise, false.
            </returns>
            <param name="component">The component with the property to be examined for persistence. 
                            </param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <returns>
            true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JPropertyDescriptor.NameHashCode">
            <summary>
            Gets the hash code for the name of the member.
            </summary>
            <value></value>
            <returns>
            The hash code for the name of the member.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JRaw">
            <summary>
            Represents a raw JSON string.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JValue">
            <summary>
            Represents a value in JSON (string, integer, date, etc).
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(uWebshop.Newtonsoft.Json.Linq.JValue)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class from another <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> object.
            </summary>
            <param name="other">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> object to copy from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.CreateComment(System.String)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> comment with the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> comment with the given value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.CreateString(System.String)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> string with the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JValue"/> string with the given value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.Equals(uWebshop.Newtonsoft.Json.Linq.JValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Dynamic.DynamicMetaObject"/> responsible for binding operations performed on this object.
            </summary>
            <param name="parameter">The expression tree representation of the runtime value.</param>
            <returns>
            The <see cref="T:System.Dynamic.DynamicMetaObject"/> to bind this object.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JValue.CompareTo(uWebshop.Newtonsoft.Json.Linq.JValue)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj"/>.
            Zero
            This instance is equal to <paramref name="obj"/>.
            Greater than zero
            This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="obj"/> is not the same type as this instance.
            </exception>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JValue.HasValues">
            <summary>
            Gets a value indicating whether this token has child tokens.
            </summary>
            <value>
            	<c>true</c> if this token has child values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JValue.Type">
            <summary>
            Gets the node type for this <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JValue.Value">
            <summary>
            Gets or sets the underlying token value.
            </summary>
            <value>The underlying token value.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JRaw.#ctor(uWebshop.Newtonsoft.Json.Linq.JRaw)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JRaw"/> class from another <see cref="T:uWebshop.Newtonsoft.Json.Linq.JRaw"/> object.
            </summary>
            <param name="other">A <see cref="T:uWebshop.Newtonsoft.Json.Linq.JRaw"/> object to copy from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JRaw.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JRaw"/> class.
            </summary>
            <param name="rawJson">The raw json.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JRaw.Create(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Creates an instance of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JRaw"/> with the content of the reader's current token.
            </summary>
            <param name="reader">The reader.</param>
            <returns>An instance of <see cref="T:uWebshop.Newtonsoft.Json.Linq.JRaw"/> with the content of the reader's current token.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JTokenEqualityComparer">
            <summary>
            Compares tokens to determine whether they are equal.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenEqualityComparer.Equals(uWebshop.Newtonsoft.Json.Linq.JToken,uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to compare.</param>
            <param name="y">The second object of type <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenEqualityComparer.GetHashCode(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JTokenReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.#ctor(uWebshop.Newtonsoft.Json.Linq.JToken)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JTokenReader"/> class.
            </summary>
            <param name="token">The token to read from.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null. This method will return <c>null</c> at the end of an array.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.ReadAsString">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.String"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTime">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.String"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>. This method will return <c>null</c> at the end of an array.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JTokenType">
            <summary>
            Specifies the type of token.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.None">
            <summary>
            No token type has been set.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Object">
            <summary>
            A JSON object.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Array">
            <summary>
            A JSON array.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Constructor">
            <summary>
            A JSON constructor.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Property">
            <summary>
            A JSON object property.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Integer">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Float">
            <summary>
            A float value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.String">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Undefined">
            <summary>
            An undefined value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Date">
            <summary>
            A date value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Raw">
            <summary>
            A raw JSON value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Bytes">
            <summary>
            A collection of bytes value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Guid">
            <summary>
            A Guid value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.Uri">
            <summary>
            A Uri value.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Linq.JTokenType.TimeSpan">
            <summary>
            A TimeSpan value.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Linq.JTokenWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.#ctor(uWebshop.Newtonsoft.Json.Linq.JContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JTokenWriter"/> class writing to the given <see cref="T:uWebshop.Newtonsoft.Json.Linq.JContainer"/>.
            </summary>
            <param name="container">The container being written to.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JTokenWriter"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.Close">
            <summary>
            Closes this stream and the underlying stream.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject">
            <summary>
            Writes the beginning of a Json object.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteStartConstructor(System.String)">
            <summary>
            Writes the start of a constructor with the given name.
            </summary>
            <param name="name">The name of the constructor.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteEnd(uWebshop.Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(System.String)">
            <summary>
            Writes the property name of a name/value pair on a Json object.
            </summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Object)">
            <summary>
            Writes a <see cref="T:System.Object"/> value.
            An error will raised if the value cannot be written as a single JSON token.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteRaw(System.String)">
            <summary>
            Writes raw JSON.
            </summary>
            <param name="json">The raw JSON to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteComment(System.String)">
            <summary>
            Writes out a comment <code>/*...*/</code> containing the specified text.
            </summary>
            <param name="text">Text to place inside the comment.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Linq.JTokenWriter.Token">
            <summary>
            Gets the token being writen.
            </summary>
            <value>The token being writen.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.Extensions">
            <summary>
            Contains the JSON schema extension methods.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.Extensions.IsValid(uWebshop.Newtonsoft.Json.Linq.JToken,uWebshop.Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            Determines whether the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> is valid.
            </summary>
            <param name="source">The source <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.Extensions.IsValid(uWebshop.Newtonsoft.Json.Linq.JToken,uWebshop.Newtonsoft.Json.Schema.JsonSchema,System.Collections.Generic.IList{System.String}@)">
            <summary>
            Determines whether the <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> is valid.
            </summary>
            <param name="source">The source <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
            <param name="errorMessages">When this method returns, contains any error messages generated while validating. </param>
            <returns>
            	<c>true</c> if the specified <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.Extensions.Validate(uWebshop.Newtonsoft.Json.Linq.JToken,uWebshop.Newtonsoft.Json.Schema.JsonSchema)">
            <summary>
            Validates the specified <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="source">The source <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.Extensions.Validate(uWebshop.Newtonsoft.Json.Linq.JToken,uWebshop.Newtonsoft.Json.Schema.JsonSchema,uWebshop.Newtonsoft.Json.Schema.ValidationEventHandler)">
            <summary>
            Validates the specified <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/>.
            </summary>
            <param name="source">The source <see cref="T:uWebshop.Newtonsoft.Json.Linq.JToken"/> to test.</param>
            <param name="schema">The schema to test with.</param>
            <param name="validationEventHandler">The validation event handler.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema">
            <summary>
            An in-memory representation of a JSON Schema.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Read(uWebshop.Newtonsoft.Json.JsonReader)">
            <summary>
            Reads a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> containing the JSON Schema to read.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> object representing the JSON Schema.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Read(uWebshop.Newtonsoft.Json.JsonReader,uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Reads a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from the specified <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">The <see cref="T:uWebshop.Newtonsoft.Json.JsonReader"/> containing the JSON Schema to read.</param>
            <param name="resolver">The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver"/> to use when resolving schema references.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> object representing the JSON Schema.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Parse(System.String)">
            <summary>
            Load a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from a string that contains schema JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Parse(System.String,uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Parses the specified json.
            </summary>
            <param name="json">The json.</param>
            <param name="resolver">The resolver.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter)">
            <summary>
            Writes this schema to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.WriteTo(uWebshop.Newtonsoft.Json.JsonWriter,uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Writes this schema to a <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> using the specified <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver"/>.
            </summary>
            <param name="writer">A <see cref="T:uWebshop.Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="resolver">The resolver used.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchema.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Required">
            <summary>
            Gets or sets whether the object is required.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.ReadOnly">
            <summary>
            Gets or sets whether the object is read only.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Hidden">
            <summary>
            Gets or sets whether the object is visible to users.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Transient">
            <summary>
            Gets or sets whether the object is transient.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Description">
            <summary>
            Gets or sets the description of the object.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Type">
            <summary>
            Gets or sets the types of values allowed by the object.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Pattern">
            <summary>
            Gets or sets the pattern.
            </summary>
            <value>The pattern.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.MinimumLength">
            <summary>
            Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.MaximumLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.DivisibleBy">
            <summary>
            Gets or sets a number that the value should be divisble by.
            </summary>
            <value>A number that the value should be divisble by.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.ExclusiveMinimum">
            <summary>
            Gets or sets a flag indicating whether the value can not equal the number defined by the "minimum" attribute.
            </summary>
            <value>A flag indicating whether the value can not equal the number defined by the "minimum" attribute.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.ExclusiveMaximum">
            <summary>
            Gets or sets a flag indicating whether the value can not equal the number defined by the "maximum" attribute.
            </summary>
            <value>A flag indicating whether the value can not equal the number defined by the "maximum" attribute.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.MinimumItems">
            <summary>
            Gets or sets the minimum number of items.
            </summary>
            <value>The minimum number of items.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.MaximumItems">
            <summary>
            Gets or sets the maximum number of items.
            </summary>
            <value>The maximum number of items.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Items">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of items.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of items.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.PositionalItemsValidation">
            <summary>
            Gets or sets a value indicating whether items in an array are validated using the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> instance at their array position from <see cref="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Items"/>.
            </summary>
            <value>
            	<c>true</c> if items are validated using their array position; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.AdditionalItems">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of additional items.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of additional items.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.AllowAdditionalItems">
            <summary>
            Gets or sets a value indicating whether additional items are allowed.
            </summary>
            <value>
            	<c>true</c> if additional items are allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.UniqueItems">
            <summary>
            Gets or sets whether the array items must be unique.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Properties">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of properties.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of properties.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.AdditionalProperties">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of additional properties.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> of additional properties.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.PatternProperties">
            <summary>
            Gets or sets the pattern properties.
            </summary>
            <value>The pattern properties.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.AllowAdditionalProperties">
            <summary>
            Gets or sets a value indicating whether additional properties are allowed.
            </summary>
            <value>
            	<c>true</c> if additional properties are allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Requires">
            <summary>
            Gets or sets the required property if this property is present.
            </summary>
            <value>The required property if this property is present.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Enum">
            <summary>
            Gets or sets the a collection of valid enum values allowed.
            </summary>
            <value>A collection of valid enum values allowed.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Disallow">
            <summary>
            Gets or sets disallowed types.
            </summary>
            <value>The disallow types.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Default">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Extends">
            <summary>
            Gets or sets the collection of <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> that this schema extends.
            </summary>
            <value>The collection of <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> that this schema extends.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchema.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException">
            <summary>
            Returns detailed information about the schema exception.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException"/> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException"/> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator">
            <summary>
            Generates a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from a specified <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)">
            <summary>
            Generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type,uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver)">
            <summary>
            Generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from.</param>
            <param name="resolver">The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver"/> used to resolve schema references.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type,System.Boolean)">
            <summary>
            Generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from.</param>
            <param name="rootSchemaNullable">Specify whether the generated root <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> will be nullable.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type,uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver,System.Boolean)">
            <summary>
            Generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from the specified type.
            </summary>
            <param name="type">The type to generate a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from.</param>
            <param name="resolver">The <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver"/> used to resolve schema references.</param>
            <param name="rootSchemaNullable">Specify whether the generated root <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> will be nullable.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> generated from the specified type.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator.UndefinedSchemaIdHandling">
            <summary>
            Gets or sets how undefined schemas are handled by the serializer.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator.ContractResolver">
            <summary>
            Gets or sets the contract resolver.
            </summary>
            <value>The contract resolver.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver">
            <summary>
            Resolves <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> from an id.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver.GetSchema(System.String)">
            <summary>
            Gets a <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> for the specified reference.
            </summary>
            <param name="reference">The id.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/> for the specified reference.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.JsonSchemaResolver.LoadedSchemas">
            <summary>
            Gets or sets the loaded schemas.
            </summary>
            <value>The loaded schemas.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType">
            <summary>
            The value types allowed by the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchema"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.None">
            <summary>
            No type specified.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Float">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Integer">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Boolean">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Array">
            <summary>
            Array type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.JsonSchemaType.Any">
            <summary>
            Any type.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling">
            <summary>
            Specifies undefined schema Id handling options for the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaGenerator"/>.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling.None">
            <summary>
            Do not infer a schema Id.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling.UseTypeName">
            <summary>
            Use the .NET type name as the schema Id.
            </summary>
        </member>
        <member name="F:uWebshop.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling.UseAssemblyQualifiedName">
            <summary>
            Use the assembly qualified .NET type name as the schema Id.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.ValidationEventArgs">
            <summary>
            Returns detailed information related to the <see cref="T:uWebshop.Newtonsoft.Json.Schema.ValidationEventHandler"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.ValidationEventArgs.Exception">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Schema.JsonSchemaException"/> associated with the validation error.
            </summary>
            <value>The JsonSchemaException associated with the validation error.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.ValidationEventArgs.Path">
            <summary>
            Gets the path of the JSON location where the validation error occurred.
            </summary>
            <value>The path of the JSON location where the validation error occurred.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Schema.ValidationEventArgs.Message">
            <summary>
            Gets the text description corresponding to the validation error.
            </summary>
            <value>The text description.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Schema.ValidationEventHandler">
            <summary>
            Represents the callback method that will handle JSON schema validation events and the <see cref="T:uWebshop.Newtonsoft.Json.Schema.ValidationEventArgs"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver">
            <summary>
            Resolves member mappings for a type, camel casing property names.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver">
            <summary>
            Used by <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> to resolves a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonContract"/> for a given <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.IContractResolver">
            <summary>
            Used by <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> to resolves a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonContract"/> for a given <see cref="T:System.Type"/>.
            </summary>
            <example>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="ReducingSerializedJsonSizeContractResolverObject" title="IContractResolver Class"/>
              <code lang="cs" source="..\Src\Newtonsoft.Json.Tests\Documentation\SerializationTests.cs" region="ReducingSerializedJsonSizeContractResolverExample" title="IContractResolver Example"/>
            </example>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver"/> class.
            </summary>
            <param name="shareCache">
            If set to <c>true</c> the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver"/> will use a cached shared with other resolvers of the same type.
            Sharing the cache will significantly performance because expensive reflection will only happen once but could cause unexpected
            behavior if different instances of the resolver are suppose to produce different results. When set to false it is highly
            recommended to reuse <see cref="T:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver"/> instances with the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)">
            <summary>
            Resolves the contract for a given type.
            </summary>
            <param name="type">The type to resolve a contract for.</param>
            <returns>The contract for a given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)">
            <summary>
            Gets the serializable members for the type.
            </summary>
            <param name="objectType">The type to get serializable members for.</param>
            <returns>The serializable members for the type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection)">
            <summary>
            Creates the constructor parameters.
            </summary>
            <param name="constructor">The constructor to create properties for.</param>
            <param name="memberProperties">The type's member properties.</param>
            <returns>Properties for the given <see cref="T:System.Reflection.ConstructorInfo"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(uWebshop.Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> for the given <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
            <param name="matchingMemberProperty">The matching member property.</param>
            <param name="parameterInfo">The constructor parameter.</param>
            <returns>A created <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> for the given <see cref="T:System.Reflection.ParameterInfo"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)">
            <summary>
            Resolves the default <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> for the contract.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>The contract's default <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonPrimitiveContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonPrimitiveContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonLinqContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonLinqContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonISerializableContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonISerializableContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonStringContract"/> for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonStringContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)">
            <summary>
            Determines which contract type is created for the given type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>A <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonContract"/> for the given type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,uWebshop.Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates properties for the given <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonContract"/>.
            </summary>
            <param name="type">The type to create properties for.</param>
            /// <param name="memberSerialization">The member serialization mode for the type.</param>
            <returns>Properties for the given <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonContract"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)">
            <summary>
            Creates the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.IValueProvider"/> used by the serializer to get and set values from a member.
            </summary>
            <param name="member">The member.</param>
            <returns>The <see cref="T:uWebshop.Newtonsoft.Json.Serialization.IValueProvider"/> used by the serializer to get and set values from a member.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,uWebshop.Newtonsoft.Json.MemberSerialization)">
            <summary>
            Creates a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> for the given <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <param name="memberSerialization">The member's parent <see cref="T:uWebshop.Newtonsoft.Json.MemberSerialization"/>.</param>
            <param name="member">The member to create a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> for.</param>
            <returns>A created <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> for the given <see cref="T:System.Reflection.MemberInfo"/>.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)">
            <summary>
            Resolves the name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Name of the property.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)">
            <summary>
            Gets the resolved name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Name of the property.</returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration">
            <summary>
            Gets a value indicating whether members are being get and set using dynamic code generation.
            This value is determined by the runtime permissions available.
            </summary>
            <value>
            	<c>true</c> if using dynamic code generation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags">
            <summary>
            Gets or sets the default members search flags.
            </summary>
            <value>The default members search flags.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers">
            <summary>
            Gets or sets a value indicating whether compiler generated members should be serialized.
            </summary>
            <value>
            	<c>true</c> if serialized compiler generated members; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface">
            <summary>
            Gets or sets a value indicating whether to ignore the <see cref="T:System.Runtime.Serialization.ISerializable"/> interface when serializing and deserializing types.
            </summary>
            <value>
            	<c>true</c> if the <see cref="T:System.Runtime.Serialization.ISerializable"/> interface will be ignored when serializing and deserializing types; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute">
            <summary>
            Gets or sets a value indicating whether to ignore the <see cref="T:System.SerializableAttribute"/> attribute when serializing and deserializing types.
            </summary>
            <value>
            	<c>true</c> if the <see cref="T:System.SerializableAttribute"/> attribute will be ignored when serializing and deserializing types; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolvePropertyName(System.String)">
            <summary>
            Resolves the name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The property name camel cased.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver">
            <summary>
            Used to resolve references when serializing and deserializing JSON by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(System.Object,System.String)">
            <summary>
            Resolves a reference to its object.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="reference">The reference to resolve.</param>
            <returns>The object that</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(System.Object,System.Object)">
            <summary>
            Gets the reference for the sepecified object.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object to get a reference for.</param>
            <returns>The reference to the object.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(System.Object,System.Object)">
            <summary>
            Determines whether the specified object is referenced.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object to test for a reference.</param>
            <returns>
            	<c>true</c> if the specified object is referenced; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(System.Object,System.String,System.Object)">
            <summary>
            Adds a reference to the specified object.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="reference">The reference.</param>
            <param name="value">The object to reference.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.DefaultSerializationBinder">
            <summary>
            The default serialization binder used when resolving and loading classes from type names.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(System.String,System.String)">
            <summary>
            When overridden in a derived class, controls the binding of a serialized object to a type.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly"/> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type"/> name of the serialized object.</param>
            <returns>
            The type of the object the formatter creates a new instance of.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>
            When overridden in a derived class, controls the binding of a serialized object to a type.
            </summary>
            <param name="serializedType">The type of the object the formatter creates a new instance of.</param>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly"/> name of the serialized object. </param>
            <param name="typeName">Specifies the <see cref="T:System.Type"/> name of the serialized object. </param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter">
            <summary>
            Represents a trace writer that writes to the application's <see cref="T:System.Diagnostics.TraceListener"/> instances.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ITraceWriter">
            <summary>
            Represents a trace writer.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>
            Writes the specified trace level, message and optional exception.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel"/> at which to write this trace.</param>
            <param name="message">The trace message.</param>
            <param name="ex">The trace exception. This parameter is optional.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ITraceWriter.LevelFilter">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            For example a filter level of <code>Info</code> will exclude <code>Verbose</code> messages and include <code>Info</code>,
            <code>Warning</code> and <code>Error</code> messages.
            </summary>
            <value>The <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>
            Writes the specified trace level, message and optional exception.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel"/> at which to write this trace.</param>
            <param name="message">The trace message.</param>
            <param name="ex">The trace exception. This parameter is optional.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter.LevelFilter">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            For example a filter level of <code>Info</code> will exclude <code>Verbose</code> messages and include <code>Info</code>,
            <code>Warning</code> and <code>Error</code> messages.
            </summary>
            <value>
            The <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.DynamicValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo"/> using dynamic methods.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.IValueProvider">
            <summary>
            Provides methods to get and set values.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.IValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DynamicValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.DynamicValueProvider"/> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DynamicValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.DynamicValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ErrorContext">
            <summary>
            Provides information surrounding an error.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorContext.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorContext.OriginalObject">
            <summary>
            Gets the original object that caused the error.
            </summary>
            <value>The original object that caused the error.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorContext.Member">
            <summary>
            Gets the member that caused the error.
            </summary>
            <value>The member that caused the error.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorContext.Path">
            <summary>
            Gets the path of the JSON location where the error occurred.
            </summary>
            <value>The path of the JSON location where the error occurred.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorContext.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.ErrorContext"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ErrorEventArgs">
            <summary>
            Provides data for the Error event.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ErrorEventArgs.#ctor(System.Object,uWebshop.Newtonsoft.Json.Serialization.ErrorContext)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.ErrorEventArgs"/> class.
            </summary>
            <param name="currentObject">The current object.</param>
            <param name="errorContext">The error context.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorEventArgs.CurrentObject">
            <summary>
            Gets the current object the error event is being raised against.
            </summary>
            <value>The current object the error event is being raised against.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorContext">
            <summary>
            Gets the error context.
            </summary>
            <value>The error context.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ExpressionValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo"/> using dynamic methods.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ExpressionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.ExpressionValueProvider"/> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ExpressionValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.UnderlyingType">
            <summary>
            Gets the underlying type for the contract.
            </summary>
            <value>The underlying type for the contract.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.CreatedType">
            <summary>
            Gets or sets the type created during deserialization.
            </summary>
            <value>The type created during deserialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.IsReference">
            <summary>
            Gets or sets whether this type contract is serialized as a reference.
            </summary>
            <value>Whether this type contract is serialized as a reference.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.Converter">
            <summary>
            Gets or sets the default <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> for this contract.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnDeserializedCallbacks">
            <summary>
            Gets or sets all methods called immediately after deserialization of the object.
            </summary>
            <value>The methods called immediately after deserialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnDeserializingCallbacks">
            <summary>
            Gets or sets all methods called during deserialization of the object.
            </summary>
            <value>The methods called during deserialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnSerializedCallbacks">
            <summary>
            Gets or sets all methods called after serialization of the object graph.
            </summary>
            <value>The methods called after serialization of the object graph.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnSerializingCallbacks">
            <summary>
            Gets or sets all methods called before serialization of the object.
            </summary>
            <value>The methods called before serialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnErrorCallbacks">
            <summary>
            Gets or sets all method called when an error is thrown during the serialization of the object.
            </summary>
            <value>The methods called when an error is thrown during the serialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnDeserialized">
            <summary>
            Gets or sets the method called immediately after deserialization of the object.
            </summary>
            <value>The method called immediately after deserialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnDeserializing">
            <summary>
            Gets or sets the method called during deserialization of the object.
            </summary>
            <value>The method called during deserialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnSerialized">
            <summary>
            Gets or sets the method called after serialization of the object graph.
            </summary>
            <value>The method called after serialization of the object graph.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnSerializing">
            <summary>
            Gets or sets the method called before serialization of the object.
            </summary>
            <value>The method called before serialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.OnError">
            <summary>
            Gets or sets the method called when an error is thrown during the serialization of the object.
            </summary>
            <value>The method called when an error is thrown during the serialization of the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.DefaultCreator">
            <summary>
            Gets or sets the default creator method used to create the object.
            </summary>
            <value>The default creator method used to create the object.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContract.DefaultCreatorNonPublic">
            <summary>
            Gets or sets a value indicating whether the default creator is non public.
            </summary>
            <value><c>true</c> if the default object creator is non-public; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract.ItemConverter">
            <summary>
            Gets or sets the default collection items <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/>.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract.ItemIsReference">
            <summary>
            Gets or sets a value indicating whether the collection items preserve object references.
            </summary>
            <value><c>true</c> if collection items preserve object references; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the collection item reference loop handling.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonContainerContract.ItemTypeNameHandling">
            <summary>
            Gets or sets the collection item type name handling.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract.CollectionItemType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the collection items.
            </summary>
            <value>The <see cref="T:System.Type"/> of the collection items.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonArrayContract.IsMultidimensionalArray">
            <summary>
            Gets a value indicating whether the collection type is a multidimensional array.
            </summary>
            <value><c>true</c> if the collection type is a multidimensional array; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.SerializationCallback">
            <summary>
            Handles <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> serialization callback events.
            </summary>
            <param name="o">The object that raised the callback event.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.SerializationErrorCallback">
            <summary>
            Handles <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/> serialization error callback events.
            </summary>
            <param name="o">The object that raised the callback event.</param>
            <param name="context">The streaming context.</param>
            <param name="errorContext">The error context.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ExtensionDataSetter">
            <summary>
            Sets extension data for an object during deserialization.
            </summary>
            <param name="o">The object to set extension data on.</param>
            <param name="key">The extension data key.</param>
            <param name="value">The extension data value.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract.PropertyNameResolver">
            <summary>
            Gets or sets the property name resolver.
            </summary>
            <value>The property name resolver.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract.DictionaryKeyType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the dictionary keys.
            </summary>
            <value>The <see cref="T:System.Type"/> of the dictionary keys.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonDictionaryContract.DictionaryValueType">
            <summary>
            Gets the <see cref="T:System.Type"/> of the dictionary values.
            </summary>
            <value>The <see cref="T:System.Type"/> of the dictionary values.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract.Properties">
            <summary>
            Gets the object's properties.
            </summary>
            <value>The object's properties.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonDynamicContract.PropertyNameResolver">
            <summary>
            Gets or sets the property name resolver.
            </summary>
            <value>The property name resolver.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonISerializableContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonISerializableContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonISerializableContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonISerializableContract.ISerializableCreator">
            <summary>
            Gets or sets the ISerializable object constructor.
            </summary>
            <value>The ISerializable object constructor.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonLinqContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonLinqContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonLinqContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.MemberSerialization">
            <summary>
            Gets or sets the object member serialization.
            </summary>
            <value>The member object serialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.ItemRequired">
            <summary>
            Gets or sets a value that indicates whether the object's properties are required.
            </summary>
            <value>
            	A value indicating whether the object's properties are required.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.Properties">
            <summary>
            Gets the object's properties.
            </summary>
            <value>The object's properties.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.ConstructorParameters">
            <summary>
            Gets the constructor parameters required for any non-default constructor
            </summary>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.OverrideConstructor">
            <summary>
            Gets or sets the override constructor used to create the object.
            This is set when a constructor is marked up using the
            JsonConstructor attribute.
            </summary>
            <value>The override constructor.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.ParametrizedConstructor">
            <summary>
            Gets or sets the parametrized constructor used to create the object.
            </summary>
            <value>The parametrized constructor.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonObjectContract.ExtensionDataSetter">
            <summary>
            Gets or sets the extension data setter.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonPrimitiveContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonPrimitiveContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonPrimitiveContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty">
            <summary>
            Maps a JSON property to a .NET member or constructor parameter.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.DeclaringType">
            <summary>
            Gets or sets the type that declared this property.
            </summary>
            <value>The type that declared this property.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.Order">
            <summary>
            Gets or sets the order of serialization and deserialization of a member.
            </summary>
            <value>The numeric order of serialization or deserialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.UnderlyingName">
            <summary>
            Gets or sets the name of the underlying member or parameter.
            </summary>
            <value>The name of the underlying member or parameter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ValueProvider">
            <summary>
            Gets the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.IValueProvider"/> that will get and set the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> during serialization.
            </summary>
            <value>The <see cref="T:uWebshop.Newtonsoft.Json.Serialization.IValueProvider"/> that will get and set the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> during serialization.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.PropertyType">
            <summary>
            Gets or sets the type of the property.
            </summary>
            <value>The type of the property.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.Converter">
            <summary>
            Gets or sets the <see cref="T:uWebshop.Newtonsoft.Json.JsonConverter"/> for the property.
            If set this converter takes presidence over the contract converter for the property type.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.MemberConverter">
            <summary>
            Gets the member converter.
            </summary>
            <value>The member converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.Ignored">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> is ignored.
            </summary>
            <value><c>true</c> if ignored; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.Readable">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> is readable.
            </summary>
            <value><c>true</c> if readable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.Writable">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> is writable.
            </summary>
            <value><c>true</c> if writable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.HasMemberAttribute">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> has a member attribute.
            </summary>
            <value><c>true</c> if has a member attribute; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.Required">
            <summary>
            Gets a value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> is required.
            </summary>
            <value>A value indicating whether this <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> is required.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.IsReference">
            <summary>
            Gets a value indicating whether this property preserves object references.
            </summary>
            <value>
            	<c>true</c> if this instance is reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.NullValueHandling">
            <summary>
            Gets the property null value handling.
            </summary>
            <value>The null value handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.DefaultValueHandling">
            <summary>
            Gets the property default value handling.
            </summary>
            <value>The default value handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ReferenceLoopHandling">
            <summary>
            Gets the property reference loop handling.
            </summary>
            <value>The reference loop handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ObjectCreationHandling">
            <summary>
            Gets the property object creation handling.
            </summary>
            <value>The object creation handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.TypeNameHandling">
            <summary>
            Gets or sets the type name handling.
            </summary>
            <value>The type name handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ShouldSerialize">
            <summary>
            Gets or sets a predicate used to determine whether the property should be serialize.
            </summary>
            <value>A predicate used to determine whether the property should be serialize.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.GetIsSpecified">
            <summary>
            Gets or sets a predicate used to determine whether the property should be serialized.
            </summary>
            <value>A predicate used to determine whether the property should be serialized.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.SetIsSpecified">
            <summary>
            Gets or sets an action used to set whether the property has been deserialized.
            </summary>
            <value>An action used to set whether the property has been deserialized.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ItemConverter">
            <summary>
            Gets or sets the converter used when serializing the property's collection items.
            </summary>
            <value>The collection's items converter.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ItemIsReference">
            <summary>
            Gets or sets whether this property's collection items are serialized as a reference.
            </summary>
            <value>Whether this property's collection items are serialized as a reference.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ItemTypeNameHandling">
            <summary>
            Gets or sets the the type name handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items type name handling.</value>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.JsonProperty.ItemReferenceLoopHandling">
            <summary>
            Gets or sets the the reference loop handling used when serializing the property's collection items.
            </summary>
            <value>The collection's items reference loop handling.</value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection">
            <summary>
            A collection of <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> objects.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(uWebshop.Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(uWebshop.Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>
            Adds a <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> object.
            </summary>
            <param name="property">The property to add to the collection.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(System.String)">
            <summary>
            Gets the closest matching <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonProperty"/> object.
            First attempts to get an exact case match of propertyName and then
            a case insensitive match.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>A matching property if found.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(System.String,System.StringComparison)">
            <summary>
            Gets a property by property name.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <param name="comparisonType">Type property name string comparison.</param>
            <returns>A matching property if found.</returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.JsonStringContract">
            <summary>
            Contract details for a <see cref="T:System.Type"/> used by the <see cref="T:uWebshop.Newtonsoft.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.JsonStringContract.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.JsonStringContract"/> class.
            </summary>
            <param name="underlyingType">The underlying type for the contract.</param>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter">
            <summary>
            Represents a trace writer that writes to memory. When the trace message limit is
            reached then old trace messages will be removed as new messages are added.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter.Trace(System.Diagnostics.TraceLevel,System.String,System.Exception)">
            <summary>
            Writes the specified trace level, message and optional exception.
            </summary>
            <param name="level">The <see cref="T:System.Diagnostics.TraceLevel"/> at which to write this trace.</param>
            <param name="message">The trace message.</param>
            <param name="ex">The trace exception. This parameter is optional.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter.GetTraceMessages">
            <summary>
            Returns an enumeration of the most recent trace messages.
            </summary>
            <returns>An enumeration of the most recent trace messages.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> of the most recent trace messages.
            </summary>
            <returns>
            A <see cref="T:System.String"/> of the most recent trace messages.
            </returns>
        </member>
        <member name="P:uWebshop.Newtonsoft.Json.Serialization.MemoryTraceWriter.LevelFilter">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            For example a filter level of <code>Info</code> will exclude <code>Verbose</code> messages and include <code>Info</code>,
            <code>Warning</code> and <code>Error</code> messages.
            </summary>
            <value>
            The <see cref="T:System.Diagnostics.TraceLevel"/> that will be used to filter the trace messages passed to the writer.
            </value>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ObjectConstructor`1">
            <summary>
            Represents a method that constructs an object.
            </summary>
            <typeparam name="T">The object type to create.</typeparam>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.OnErrorAttribute">
            <summary>
            When applied to a method, specifies that the method is called when an error occurs serializing an object.
            </summary>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Serialization.ReflectionValueProvider">
            <summary>
            Get and set values for a <see cref="T:System.Reflection.MemberInfo"/> using reflection.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ReflectionValueProvider.#ctor(System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Newtonsoft.Json.Serialization.ReflectionValueProvider"/> class.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ReflectionValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="target">The target to set the value on.</param>
            <param name="value">The value to set on the target.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Serialization.ReflectionValueProvider.GetValue(System.Object)">
            <summary>
            Gets the value.
            </summary>
            <param name="target">The target to get the value from.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Determines whether the collection is null or empty.
            </summary>
            <param name="collection">The collection.</param>
            <returns>
            	<c>true</c> if the collection is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.CollectionUtils.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the specified generic IList.
            </summary>
            <param name="initial">The list to add to.</param>
            <param name="collection">The collection of elements to add.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.CollectionUtils.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Returns the index of the first occurrence in a sequence by using a specified IEqualityComparer.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="list">A sequence in which to locate a value.</param>
            <param name="value">The object to locate in the sequence</param>
            <param name="comparer">An equality comparer to compare values.</param>
            <returns>The zero-based index of the first occurrence of value within the entire sequence, if found; otherwise, –1.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ConvertUtils.Convert(System.Object,System.Globalization.CultureInfo,System.Type)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert the value to.</param>
            <returns>The converted type.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(System.Object,System.Globalization.CultureInfo,System.Type,System.Object@)">
            <summary>
            Converts the value to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert the value to.</param>
            <param name="convertedValue">The converted value if the conversion was successful or the default value of <c>T</c> if it failed.</param>
            <returns>
            	<c>true</c> if <c>initialValue</c> was converted successfully; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(System.Object,System.Globalization.CultureInfo,System.Type)">
            <summary>
            Converts the value to the specified type. If the value is unable to be converted, the
            value is checked whether it assignable to the specified type.
            </summary>
            <param name="initialValue">The value to convert.</param>
            <param name="culture">The culture to use when converting.</param>
            <param name="targetType">The type to convert or cast the value to.</param>
            <returns>
            The converted type. If conversion was unsuccessful, the initial value
            is returned if assignable to the target type.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.CallMethodWithResult(System.String,System.Dynamic.DynamicMetaObjectBinder,System.Linq.Expressions.Expression[],uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback,uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback)">
            <summary>
            Helper method for generating a MetaObject which calls a
            specific method on Dynamic that returns a result
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.CallMethodReturnLast(System.String,System.Dynamic.DynamicMetaObjectBinder,System.Linq.Expressions.Expression[],uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback)">
            <summary>
            Helper method for generating a MetaObject which calls a
            specific method on Dynamic, but uses one of the arguments for
            the result.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.CallMethodNoResult(System.String,System.Dynamic.DynamicMetaObjectBinder,System.Linq.Expressions.Expression[],uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject{`0}.Fallback)">
            <summary>
            Helper method for generating a MetaObject which calls a
            specific method on Dynamic, but uses one of the arguments for
            the result.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1.GetRestrictions">
            <summary>
            Returns a Restrictions object which includes our current restrictions merged
            with a restriction limiting our type
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues``1">
            <summary>
            Gets a dictionary of the names and values of an Enum type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.EnumUtils.GetNamesAndValues``1(System.Type)">
            <summary>
            Gets a dictionary of the names and values of an Enum type.
            </summary>
            <param name="enumType">The enum type to get names and values for.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)">
            <summary>
            Gets the type of the typed collection's items.
            </summary>
            <param name="type">The type.</param>
            <returns>The type of the typed collection's items.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)">
            <summary>
            Gets the member's underlying type.
            </summary>
            <param name="member">The member.</param>
            <returns>The underlying type of the member.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)">
            <summary>
            Determines whether the member is an indexed property.
            </summary>
            <param name="member">The member.</param>
            <returns>
            	<c>true</c> if the member is an indexed property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the property is an indexed property.
            </summary>
            <param name="property">The property.</param>
            <returns>
            	<c>true</c> if the property is an indexed property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo,System.Object)">
            <summary>
            Gets the member's value on the object.
            </summary>
            <param name="member">The member.</param>
            <param name="target">The target object.</param>
            <returns>The member's value on the object.</returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo,System.Object,System.Object)">
            <summary>
            Sets the member's value on the target object.
            </summary>
            <param name="member">The member.</param>
            <param name="target">The target.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Determines whether the specified MemberInfo can be read.
            </summary>
            <param name="member">The MemberInfo to determine whether can be read.</param>
            /// <param name="nonPublic">if set to <c>true</c> then allow the member to be gotten non-publicly.</param>
            <returns>
            	<c>true</c> if the specified MemberInfo can be read; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo,System.Boolean,System.Boolean)">
            <summary>
            Determines whether the specified MemberInfo can be set.
            </summary>
            <param name="member">The MemberInfo to determine whether can be set.</param>
            <param name="nonPublic">if set to <c>true</c> then allow the member to be set non-publicly.</param>
            <param name="canSetReadOnly">if set to <c>true</c> then allow the member to be set if read-only.</param>
            <returns>
            	<c>true</c> if the specified MemberInfo can be set; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:uWebshop.Newtonsoft.Json.Utilities.StringBuffer">
            <summary>
            Builds a string. Unlike StringBuilder this class lets you reuse it's internal buffer.
            </summary>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(System.String)">
            <summary>
            Determines whether the string is all white space. Empty string will return false.
            </summary>
            <param name="s">The string to test whether it is all white space.</param>
            <returns>
            	<c>true</c> if the string is all white space; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:uWebshop.Newtonsoft.Json.Utilities.StringUtils.NullEmptyString(System.String)">
            <summary>
            Nulls an empty string.
            </summary>
            <param name="s">The string.</param>
            <returns>Null if the string was null, otherwise the string unchanged.</returns>
        </member>
        <member name="M:uWebshop.Domain.NewtonsoftJsonNet.JSONXMLRender.JSONoutput(System.String)">
            <summary>
            Creates XML output based on a JSON string!
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:uWebshop.Domain.NewtonsoftJsonNet.JSONXMLRender.XMLoutput(System.String)">
            <summary>
            Creates XML output based on a JSON string!
            </summary>
            <param name="methodName"></param>
            <param name="json"></param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IShippingProviderUpdateService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IShippingProviderUpdateService.Update(uWebshop.Domain.ShippingProviderMethod,uWebshop.Domain.OrderInfo)">
            <summary>
            Updates the specified shipping provider method.
            </summary>
            <param name="shippingProviderMethod">The shipping provider method.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IShippingProviderService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IShippingProviderService.GetAll(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IShippingProviderService.GetPaymentProviderWithName(System.String,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the name of the payment provider with.
            </summary>
            <param name="name">The name.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IShippingProviderService.GetById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IUwebshopReadonlyContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IDiscountCalculationService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IDiscountCalculationService.DiscountAmountForOrder(uWebshop.Domain.Interfaces.IOrderDiscount,uWebshop.Domain.OrderInfo,uWebshop.Common.Interfaces.IAuthenticationProvider)">
            <summary>
            Discounts the amount for order.
            </summary>
            <param name="discount">The discount.</param>
            <param name="orderInfo">The order information.</param>
            <param name="authenticationProvider">The authentication provider.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IDiscountCalculationService.RangedDiscountValueForOrder(uWebshop.Domain.Interfaces.IOrderDiscount,uWebshop.Domain.OrderInfo)">
            <summary>
            Gets the ranged discount value for order.
            </summary>
            <param name="orderDiscount">The order discount.</param>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.API.IProductLegacy230">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.API.IProductLegacyPriceFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalPriceInCents">
            <summary>
            Gets the original price in cents.
            </summary>
            <value>
            The original price in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.PriceInCents">
            <summary>
            Gets the price in cents.
            </summary>
            <value>
            The price in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.VatAmountInCents">
            <summary>
            The active tax amount in cents
            </summary>
            <value>
            The vat amount  in  cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.DiscountedVatAmount">
            <summary>
            The discounted tax amount
            </summary>
            <value>
            The discounted vat amount.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalVatAmount">
            <summary>
            Tax amount
            </summary>
            <value>
            The original vat amount.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.DiscountedPriceWithVat">
            <summary>
            The discounted price with tax
            </summary>
            <value>
            The discounted price with vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.DiscountedPriceWithoutVat">
            <summary>
            Gets the discounted price without vat.
            </summary>
            <value>
            The discounted price without vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalPriceWithoutVat">
            <summary>
            The price of the pricing without VAT
            </summary>
            <value>
            The original price without vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.PriceWithoutVat">
            <summary>
            The active price of the item without tax
            Gives the discounted price when the pricing is discounted
            Gives the normal price when the pricing isn't discounted
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalPriceWithVat">
            <summary>
            The price of the pricing with VAT
            </summary>
            <value>
            The original price with vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.PriceWithVat">
            <summary>
            The active price of the item with tax
            Gives the discounted price when the pricing is discounted
            Gives the normal price when the pricing isn't discounted
            </summary>
            <value>
            The price with vat.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.VatAmount">
            <summary>
            The active tax amount
            </summary>
            <value>
            The vat amount.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalVatAmountInCents">
            <summary>
            Tax amount
            </summary>
            <value>
            The original vat amount in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.DiscountedVatAmountInCents">
            <summary>
            The discounted tax amount
            </summary>
            <value>
            The discounted vat amount in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.DiscountedPriceWithVatInCents">
            <summary>
            Gets the discounted price with vat in cents.
            </summary>
            <value>
            The discounted price with vat in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.DiscountedPriceWithoutVatInCents">
            <summary>
            Gets or sets the discounted price without vat in cents.
            </summary>
            <value>
            The discounted price without vat in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.PriceWithVatInCents">
            <summary>
            Gets the price with vat in cents.
            </summary>
            <value>
            The price with vat in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.PriceWithoutVatInCents">
            <summary>
            Gets the price without vat in cents.
            </summary>
            <value>
            The price without vat in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalPriceWithoutVatInCents">
            <summary>
            The price of the pricing without VAT
            </summary>
            <value>
            The original price without vat in cents.
            </value>
        </member>
        <member name="P:uWebshop.API.IProductLegacyPriceFields.OriginalPriceWithVatInCents">
            <summary>
            Gets the original price with vat in cents.
            </summary>
            <value>
            The original price with vat in cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IDiscountService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IDiscountService.GetOrderDiscountById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the order discount by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IDiscountService.GetProductDiscountById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the product discount by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IDiscountService.GetById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the discount by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.UwebshopRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.UwebshopRequest.GetStoreUrl(uWebshop.Domain.Store)">
            <summary>
            Gets the store URL for given store.
            </summary>
            <param name="store">The store.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.Current">
            <summary>
            Gets the current request.
            </summary>
            <value>
            The current request.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.CurrentStore">
            <summary>
            Gets the current store.
            </summary>
            <value>
            The current store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.Category">
            <summary>
            Gets the current category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.Product">
            <summary>
            Gets the current product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.PaymentProvider">
            <summary>
            Gets the current payment provider.
            </summary>
            <value>
            The payment provider.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.OrderInfo">
            <summary>
            Gets the current order.
            </summary>
            <value>
            The order information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopRequest.Localization">
            <summary>
            Gets the localization.
            </summary>
            <value>
            The localization.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ContentPropertyTypeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ContentThumbnail">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ContentTypes.ContentThumbnail.Folder">
            <summary>
            The folder
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ContentTypeAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ContentTypeTab">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.CategoryRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ShippingProviderRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ShippingProviderSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ShippingProviderZoneSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.DataTypeDefinitionAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.DiscountRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.DiscountOrderSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.DiscountProductSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.EmailRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.EmailStoreSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.EmailCustomerSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.OrderRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.PaymentProviderRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.PaymentProviderSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ContentTypes.PaymentProviderSectionContentType.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.PaymentProviderZoneSectionContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.ProductRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ContentTypes.ProductRepositoryContentType.ProductOverview">
            <summary>
            Sets the product overview.
            </summary>
            <value>
            The product overview.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.StoreRepositoryContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ContentTypes.UwebshopRootContentType">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Settings">
            <summary>
            the uWebshop settings
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ISettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ISettings.IncludingVat">
            <summary>
            Are all prices in the store including VAT?
            </summary>
            <value>
              <c>true</c> if [including vat]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ISettings.UseLowercaseUrls">
            <summary>
            Render all url's lowercase instead of Case Sensitive
            </summary>
            <value>
              <c>true</c> if [use lowercase urls]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.ISettings.IncompleteOrderLifetime">
            <summary>
            Lifetime of an incomplete order in minutes
            </summary>
            <value>
            The incomple order lifetime.
            </value>
        </member>
        <member name="F:uWebshop.Domain.Settings.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Settings.IncludingVat">
            <summary>
            Are all prices in the store including VAT?
            </summary>
            <value>
              <c>true</c> if [including vat]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Settings.UseLowercaseUrls">
            <summary>
            Render all url's lowercase instead of Case Sensitive
            </summary>
            <value>
              <c>true</c> if [use lowercase urls]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Settings.IncompleteOrderLifetime">
            <summary>
            Lifetime of an incomplete order in minutes
            </summary>
            <value>
            The incomple order lifetime.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ICatalogCacheManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICatalogCacheManager.LoadOrReloadProduct(System.Int32)">
            <summary>
            Loads the original reload product.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICatalogCacheManager.LoadOrReloadProductVariant(System.Int32)">
            <summary>
            Loads the original reload product variant.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICatalogCacheManager.LoadOrReloadCategory(System.Int32)">
            <summary>
            Loads the original reload category.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICatalogCacheManager.UnloadProduct(System.Int32)">
            <summary>
            Unloads the product.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICatalogCacheManager.UnloadProductVariant(System.Int32)">
            <summary>
            Unloads the product variant.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICatalogCacheManager.UnloadCategory(System.Int32)">
            <summary>
            Unloads the category.
            </summary>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IIocContainer">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IDependencyResolver.Resolve``1">
            <summary>
            Resolves this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IIocContainer.SetDefaultServiceFactory(uWebshop.Domain.Interfaces.IServiceFactory)">
            <summary>
            Sets the default service factory.
            </summary>
            <param name="serviceFactory">The service factory.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IProductDiscountRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IProductService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IProductService.GetStockForProduct(System.Int32)">
            <summary>
            Gets the stock for product.
            </summary>
            <param name="productId">The product unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IProductService.CreateProductInfoByProductId(System.Int32,uWebshop.Domain.Interfaces.IOrderInfo,uWebshop.Domain.Interfaces.ILocalization,System.Int32)">
            <summary>
            Creates the product information by product unique identifier.
            </summary>
            <param name="productId">The product unique identifier.</param>
            <param name="order">The order.</param>
            <param name="localization">The localization.</param>
            <param name="itemCount">The item count.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IProductService.GetAllEnabledAndWithCategory(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all enabled and with category.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IProductService.ReloadWithVATSetting">
            <summary>
            Reloads the with vat setting.
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IProductVariantService">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.CreateOrder">
            <summary>
            Creates the order.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.CreateOrder(uWebshop.Domain.Store)">
            <summary>
            Creates the order.
            </summary>
            <param name="store">The store.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.CreateCopyOfOrder(uWebshop.Domain.OrderInfo)">
            <summary>
            Creates the copy of order.
            </summary>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.StoreOrderFirstTimeHackishRefactorPlz(uWebshop.Domain.OrderInfo)">
            <summary>
            Stores the order first time hackish refactor PLZ.
            </summary>
            <param name="order">The order.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.OrderContainsOutOfStockItem(uWebshop.Domain.OrderInfo)">
            <summary>
            Orders the contains out of stock item.
            </summary>
            <param name="orderinfo">The orderinfo.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.GetApplicableOrderLines(uWebshop.Domain.OrderInfo,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the applicable order lines.
            </summary>
            <param name="orderinfo">The orderinfo.</param>
            <param name="itemIdsToCheck">The item ids automatic check.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.OrderContainsItem(uWebshop.Domain.OrderInfo,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Orders the contains item.
            </summary>
            <param name="orderinfo">The orderinfo.</param>
            <param name="itemIdsToCheck">The item ids automatic check.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.ValidateOrderLegacy(uWebshop.Domain.OrderInfo)">
            <summary>
            Validates the order.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="writeToOrderValidation">if set to <c>true</c> [write automatic order validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.ValidateCustomer(uWebshop.Domain.OrderInfo,System.Boolean,System.Boolean)">
            <summary>
            Validates the customer.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <param name="writeToOrderValidation">if set to <c>true</c> [write automatic order validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.ValidateStock(uWebshop.Domain.OrderInfo,System.Boolean,System.Boolean)">
            <summary>
            Validates the stock.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <param name="writeToOrderValidation">if set to <c>true</c> [write automatic order validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.ValidateOrderlines(uWebshop.Domain.OrderInfo,System.Boolean,System.Boolean)">
            <summary>
            Validates the orderlines.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <param name="writeToOrderValidation">if set to <c>true</c> [write automatic order validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.ValidateCustomValidations(uWebshop.Domain.OrderInfo,System.Boolean)">
            <summary>
            Validates the custom validations.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="writeToOrderValidation">if set to <c>true</c> [write automatic order validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.UseStoredDiscounts(uWebshop.Domain.OrderInfo,System.Collections.Generic.List{uWebshop.Domain.Interfaces.IOrderDiscount})">
            <summary>
            Uses the stored discounts.
            </summary>
            <param name="order">The order.</param>
            <param name="discounts">The discounts.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderService.UseDatabaseDiscounts(uWebshop.Domain.OrderInfo)">
            <summary>
            Uses the database discounts.
            </summary>
            <param name="order">The order.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPropertyProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPropertyProvider.ContainsKey(System.String)">
            <summary>
            Determines whether the specified property contains key.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPropertyProvider.UpdateValueIfPropertyPresent(System.String,System.String@)">
            <summary>
            Updates the value difference property present.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPropertyProvider.GetStringValue(System.String)">
            <summary>
            Gets the string value.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IStockService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStockService.GetStockForUwebshopEntityWithId(System.Int32,System.String)">
            <summary>
            Gets the stock for uwebshop entity with unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStockService.SetStock(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Sets the stock.
            </summary>
            <param name="productId">The product unique identifier.</param>
            <param name="delta">The delta.</param>
            <param name="updateOrderCount">if set to <c>true</c> [update order count].</param>
            <param name="storeAlias">The store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStockService.SetOrderCount(System.Int32,System.Int32,System.String)">
            <summary>
            Sets the order count.
            </summary>
            <param name="itemId">The item unique identifier.</param>
            <param name="orderCountToUpdate">The order count automatic update.</param>
            <param name="storeAlias">The store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStockService.ReturnStock(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Returns the stock.
            </summary>
            <param name="itemId">The item unique identifier.</param>
            <param name="stockToReturn">The stock automatic return.</param>
            <param name="updateOrderCount">if set to <c>true</c> [update order count].</param>
            <param name="storeAlias">The store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStockService.GetOrderCount(System.Int32,System.String)">
            <summary>
            Returns the ordercount.
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IStoreService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetCurrentStore">
            <summary>
            Gets the current store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.CurrentStoreAlias">
            <summary>
            Currents the store alias.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetCurrentLocalization">
            <summary>
            Gets the current localization.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetAllStores">
            <summary>
            Gets all stores.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetByAlias(System.String)">
            <summary>
            Gets the by alias.
            </summary>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.LoadStoreUrl(uWebshop.Domain.Store)">
            <summary>
            Loads the store URL.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.RenameStore(System.String,System.String)">
            <summary>
            Renames the store.
            </summary>
            <param name="oldStoreAlias">The old store alias.</param>
            <param name="newStoreAlias">The new store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetNiceUrl(System.Int32,System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the nice URL.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="categoryId">The category unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetCurrentStoreNoFallback">
            <summary>
            Gets the actual store, no fallback if none can be determined
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IStoreService.GetAllLocalizations">
            <summary>
            Gets all localizations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Services.OrderService.OrderContainsOutOfStockItem(uWebshop.Domain.OrderInfo)">
            <summary>
                Does the give order contains items that are out of stock?
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Services.OrderService.ValidateStock(uWebshop.Domain.OrderInfo,System.Boolean,System.Boolean)">
            <summary>
            Validate stock
            </summary>
            <param name="orderInfo"></param>
            <param name="clearValidation"></param>
            <param name="writeToOrderValidation"></param>
            <returns>True = valid, False = Invalid</returns>
        </member>
        <member name="T:uWebshop.Domain.Businesslogic.DocumentProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.DocumentProperty.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.DocumentProperty.Alias">
            <summary>
            Gets or sets the alias.
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.DocumentProperty.ValidationRegularExpression">
            <summary>
            Gets or sets the validation regular expression.
            </summary>
            <value>
            The validation regular expression.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.DocumentProperty.Mandatory">
            <summary>
            Gets or sets a value indicating whether [mandatory].
            </summary>
            <value>
              <c>true</c> if [mandatory]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Businesslogic.HttpContextWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.HttpContextWrapper.RewritePath(System.String)">
            <summary>
            Rewrites the path.
            </summary>
            <param name="newUrl">The new URL.</param>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.HttpContextWrapper.RedirectPermanent(System.String)">
            <summary>
            Redirects permanently.
            </summary>
            <param name="newUrl">The new URL.</param>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.HttpContextWrapper.PathPointsToPhysicalFile(System.String)">
            <summary>
            Path points to physical file?
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HttpContextWrapper.AbsolutePath">
            <summary>
            Gets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HttpContextWrapper.QueryString">
            <summary>
            Gets the query string.
            </summary>
            <value>
            The query string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HttpContextWrapper.IsSecureConnection">
            <summary>
            Gets a value indicating whether the connection is secure.
            </summary>
            <value>
              <c>true</c> if the connection is secure; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HttpContextWrapper.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPaymentProviderRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPaymentProviderService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProviderService.GetAll(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProviderService.GetPaymentProviderWithName(System.String,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the name of the payment provider with.
            </summary>
            <param name="name">The name.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProviderService.GetById(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProviderService.LoadData(uWebshop.Domain.PaymentProvider,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Loads the data.
            </summary>
            <param name="paymentProvider">The payment provider.</param>
            <param name="localization">The localization.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IUmbracoDocumentTypeInstaller">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUmbracoDocumentTypeInstaller.InstallStore(System.String)">
            <summary>
            Installs the store.
            </summary>
            <param name="storeAlias">The store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUmbracoDocumentTypeInstaller.UnInstallStore(System.String)">
            <summary>
            Uninstalls the store.
            </summary>
            <param name="storeAlias">The store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUmbracoDocumentTypeInstaller.CreateOrderDocument(uWebshop.Domain.OrderInfo)">
            <summary>
            Creates the order document.
            </summary>
            <param name="order">The order.</param>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IUrlRewritingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUrlRewritingService.Rewrite">
            <summary>
            Rewrites this instance.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUrlRewritingService.RedirectPermanentOldCatalogUrls">
            <summary>
            Redirects the permanent old catalog urls.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUrlRewritingService.UrlPointsToCatalogRepository(System.String,System.String@)">
            <summary>
            URLs the points automatic catalog repository.
            </summary>
            <param name="absolutePath">The absolute path.</param>
            <param name="catalogPart">The catalog part.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUrlRewritingService.ResolveUwebshopEntityUrl">
            <summary>
            Resolves the uwebshop entity URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IUrlRewritingService.ResolveUwebshopEntityUrl(System.String)">
            <summary>
            Resolves the uwebshop entity URL.
            </summary>
            <param name="absolutePath">The absolute path.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ResolveUwebshopEntityUrlResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.ResolveUwebshopEntityUrlResult.CategoryUrl">
            <summary>
            The category URL
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.ResolveUwebshopEntityUrlResult.Entity">
            <summary>
            The entity
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.ResolveUwebshopEntityUrlResult.ProductUrl">
            <summary>
            The product URL
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Interfaces.ResolveUwebshopEntityUrlResult.StoreUrl">
            <summary>
            The store URL
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IRebuildIndicesService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IRebuildIndicesService.Rebuild">
            <summary>
            Rebuilds this instance.
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Businesslogic.VATChecking.FixedValueIvatChecker">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IVATCheckService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IVATCheckService.VATNumberValid(System.String,uWebshop.Domain.OrderInfo)">
            <summary>
            Vats the number valid.
            </summary>
            <param name="number">The number.</param>
            <param name="order">The order.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.VATChecking.FixedValueIvatChecker.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.Businesslogic.VATChecking.FixedValueIvatChecker"/> class.
            </summary>
            <param name="noVATCharged">if set to <c>true</c> [no vat charged].</param>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.VATChecking.FixedValueIvatChecker.VATNumberValid(System.String,uWebshop.Domain.OrderInfo)">
            <summary>
            Vats the number valid.
            </summary>
            <param name="number">The number.</param>
            <param name="order">The order.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.PriceInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PriceInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PriceInfo"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PriceInfo.#ctor(System.Int32,System.Boolean,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PriceInfo"/> class.
            </summary>
            <param name="basePrice">The base price.</param>
            <param name="basePriceInclVat">if set to <c>true</c> [base price incl vat].</param>
            <param name="vat">The vat.</param>
        </member>
        <member name="P:uWebshop.Domain.PriceInfo.WithVATInCents">
            <summary>
            Gets or sets the with vat information cents.
            </summary>
            <value>
            The with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PriceInfo.WithVAT">
            <summary>
            Gets or sets the with vat.
            </summary>
            <value>
            The with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PriceInfo.WithoutVATInCents">
            <summary>
            Gets or sets the without vat information cents.
            </summary>
            <value>
            The without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PriceInfo.WithoutVAT">
            <summary>
            Gets or sets the without vat.
            </summary>
            <value>
            The without vat.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ChargedShippingCosts">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ChargedShippingCosts.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.ChargedShippingCosts"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ChargedShippingCosts.#ctor(System.Int32,System.Boolean,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.ChargedShippingCosts"/> class.
            </summary>
            <param name="basePrice">The base price.</param>
            <param name="basePriceInclVat">if set to <c>true</c> [base price incl vat].</param>
            <param name="vat">The vat.</param>
        </member>
        <member name="T:uWebshop.Domain.PaymentCosts">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PaymentCosts.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PaymentCosts"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PaymentCosts.#ctor(System.Int32,System.Boolean,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PaymentCosts"/> class.
            </summary>
            <param name="basePrice">The base price.</param>
            <param name="basePriceInclVat">if set to <c>true</c> [base price incl vat].</param>
            <param name="vat">The vat.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderLineTotal">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderLineTotal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.OrderLineTotal"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderLineTotal.#ctor(System.Int32,System.Boolean,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.OrderLineTotal"/> class.
            </summary>
            <param name="basePrice">The base price.</param>
            <param name="basePriceInclVat">if set to <c>true</c> [base price incl vat].</param>
            <param name="vat">The vat.</param>
        </member>
        <member name="T:uWebshop.Domain.DiscountAmount">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.DiscountAmount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.DiscountAmount"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.DiscountAmount.#ctor(System.Int32,System.Boolean,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.DiscountAmount"/> class.
            </summary>
            <param name="basePrice">The base price.</param>
            <param name="basePriceInclVat">if set to <c>true</c> [base price incl vat].</param>
            <param name="vat">The vat.</param>
        </member>
        <member name="T:uWebshop.Domain.XMLRendering.OrderDiscount">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.XMLRendering.OrderDiscount.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.XMLRendering.OrderDiscount"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.XMLRendering.OrderDiscount.#ctor(uWebshop.Domain.Interfaces.IOrderDiscount,uWebshop.Domain.OrderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.XMLRendering.OrderDiscount"/> class.
            </summary>
            <param name="orderDiscount">The order discount.</param>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.DiscountAmount">
            <summary>
            Gets or sets the discount amount.
            </summary>
            <value>
            The discount amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.OriginalDiscountId">
            <summary>
            Gets or sets the original discount unique identifier.
            </summary>
            <value>
            The original discount unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.DiscountType">
            <summary>
            Gets or sets the type of the discount.
            </summary>
            <value>
            The type of the discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.DiscountValue">
            <summary>
            Gets or sets the discount value.
            </summary>
            <value>
            The discount value.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.Condition">
            <summary>
            Gets or sets the condition.
            </summary>
            <value>
            The condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.NumberOfItemsCondition">
            <summary>
            Gets or sets the number of items condition.
            </summary>
            <value>
            The number of items condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.MinimalOrderAmount">
            <summary>
            Gets or sets the minimal order amount.
            </summary>
            <value>
            The minimal order amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.XMLRendering.OrderDiscount.CouponCode">
            <summary>
            Gets or sets the coupon code.
            </summary>
            <value>
            The coupon code.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ICountryRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ICountryRepository.GetAllCountries(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all countries.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IVATCountryRepository">
            <summary>
            
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderUpdatingService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.AddOrUpdateOrderLine(uWebshop.Domain.OrderInfo,System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Create, Add, Update the orderline
            </summary>
            <param name="order"></param>
            <param name="orderLineId">The Id of the orderline</param>
            <param name="productId">The productId</param>
            <param name="action">The action (add, update, delete, deleteall)</param>
            <param name="itemCount">The amount of items to be added</param>
            <param name="variantsList">The variants ID's added to the pricing</param>
            <param name="fields">Custom Fields</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.Save(uWebshop.Domain.OrderInfo,System.Boolean,uWebshop.Common.ValidateSaveAction)">
            <summary>
            Saves the specified order.
            </summary>
            <param name="order">The order.</param>
            <param name="revalidateOrderOnLoadHack">if set to <c>true</c> [revalidate order configuration load hack].</param>
            <param name="validateSaveAction">The validate save action.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.RemoveDiscountsWithCounterZeroFromOrder(uWebshop.Domain.OrderInfo)">
            <summary>
            Removes the discounts with counter zero from order.
            </summary>
            <param name="order">The order.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.SetCurrentMember(uWebshop.Domain.OrderInfo)">
            <summary>
            Sets the current member.
            </summary>
            <param name="order">The order.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.AddPaymentProvider(uWebshop.Domain.OrderInfo,System.Int32,System.String,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Adds the payment provider.
            </summary>
            <param name="order">The order.</param>
            <param name="paymentProviderId">The payment provider unique identifier.</param>
            <param name="paymentProviderMethodId">The payment provider method unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.AddCoupon(uWebshop.Domain.OrderInfo,System.String)">
            <summary>
            Adds the coupon.
            </summary>
            <param name="order">The order.</param>
            <param name="couponCode">The coupon code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.AddShippingProvider(uWebshop.Domain.OrderInfo,System.Int32,System.String,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Adds the shipping provider.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="shippingProviderId">The shipping provider unique identifier.</param>
            <param name="shippingProviderMethodId">The shipping provider method unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.AddCustomerFields(uWebshop.Domain.OrderInfo,System.Collections.Generic.Dictionary{System.String,System.String},uWebshop.Common.CustomerDatatypes)">
            <summary>
            Adds the customer fields.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="fields">The fields.</param>
            <param name="customerDataType">Type of the customer data.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.ChangeOrderToIncompleteAndReturnTrueIfNotAllowed(uWebshop.Domain.OrderInfo)">
            <summary>
            Changes the order automatic incomplete and return false difference not possible.
            </summary>
            <param name="order">The order.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.ConfirmOrder(uWebshop.Domain.OrderInfo,System.Boolean,System.Int32)">
            <summary>
            Confirms the order.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="termsAccepted">if set to <c>true</c> [terms accepted].</param>
            <param name="confirmationNodeId">The confirmation node unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.ChangeLocalization(uWebshop.Domain.OrderInfo,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Changes the store.
            </summary>
            <param name="order">The order.</param>
            <param name="localization">The localization.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderUpdatingService.UpdateProductInfoDiscountInformation(uWebshop.Domain.ProductInfo)">
            <summary>
            Updates the product information discount information.
            </summary>
            <param name="product">The product.</param>
        </member>
        <member name="M:uWebshop.Domain.Services.OrderUpdatingService.AddOrUpdateOrderLine(uWebshop.Domain.OrderInfo,System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create, Add, Update the orderline
            </summary>
            <param name="order"></param>
            <param name="orderLineId">The Id of the orderline</param>
            <param name="productId">The productId</param>
            <param name="action">The action (add, update, delete, deleteall)</param>
            <param name="itemCount">The amount of items to be added</param>
            <param name="variantsList">The variants ID's added to the pricing</param>
            <param name="fields">Custom Fields</param>
            <exception cref="T:System.ArgumentException">
            productId and orderLineId equal or lower to 0
            or
            itemCountToAdd can't be smaller than 0
            </exception>
            <exception cref="T:System.Exception">
            Orderline not found
            </exception>
        </member>
        <member name="T:checkVatService">
            <remarks/>
        </member>
        <member name="M:checkVatService.#ctor">
            <remarks/>
        </member>
        <member name="M:checkVatService.checkVat(System.String@,System.String@,System.Boolean@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:checkVatService.BegincheckVat(System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:checkVatService.EndcheckVat(System.IAsyncResult,System.String@,System.String@,System.Boolean@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:checkVatService.checkVatAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:checkVatService.checkVatAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:checkVatService.checkVatApprox(System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String,System.String,System.Boolean@,System.String@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:checkVatService.BegincheckVatApprox(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:checkVatService.EndcheckVatApprox(System.IAsyncResult,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Boolean@,System.String@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,matchCode@,System.Boolean@,System.String@)">
            <remarks/>
        </member>
        <member name="M:checkVatService.checkVatApproxAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:checkVatService.checkVatApproxAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:checkVatService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:checkVatService.checkVatCompleted">
            <remarks/>
        </member>
        <member name="E:checkVatService.checkVatApproxCompleted">
            <remarks/>
        </member>
        <member name="T:matchCode">
            <remarks/>
        </member>
        <member name="F:matchCode.Item1">
            <remarks/>
        </member>
        <member name="F:matchCode.Item2">
            <remarks/>
        </member>
        <member name="T:checkVatCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:checkVatCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:checkVatCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:checkVatCompletedEventArgs.countryCode">
            <remarks/>
        </member>
        <member name="P:checkVatCompletedEventArgs.vatNumber">
            <remarks/>
        </member>
        <member name="P:checkVatCompletedEventArgs.valid">
            <remarks/>
        </member>
        <member name="P:checkVatCompletedEventArgs.name">
            <remarks/>
        </member>
        <member name="P:checkVatCompletedEventArgs.address">
            <remarks/>
        </member>
        <member name="T:checkVatApproxCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:checkVatApproxCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.countryCode">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.vatNumber">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderName">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderCompanyType">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderStreet">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderPostcode">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderCity">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.valid">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderAddress">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderNameMatch">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderNameMatchSpecified">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderCompanyTypeMatch">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderCompanyTypeMatchSpecified">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderStreetMatch">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderStreetMatchSpecified">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderPostcodeMatch">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderPostcodeMatchSpecified">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderCityMatch">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.traderCityMatchSpecified">
            <remarks/>
        </member>
        <member name="P:checkVatApproxCompletedEventArgs.requestIdentifier">
            <remarks/>
        </member>
        <member name="T:uWebshop.Domain.ClientErrorHandling">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ClientErrorHandling.AddErrorMessage(System.String,System.String,System.String)">
            <summary>
            Adds the error message.
            </summary>
            <param name="message">The message.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.ClientErrorHandling.SetOrClearErrorMessage(System.Boolean,System.String,System.String,System.String)">
            <summary>
            Sets the original clear error message.
            </summary>
            <param name="hasNoError">if set to <c>true</c> [has no error].</param>
            <param name="message">The message.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.ClientErrorHandling.GetErrorMessages">
            <summary>
            Gets the error messages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.ClientErrorHandling.uWebshopException(System.String)">
            <summary>
            Authentications the webshop exception.
            </summary>
            <param name="message">The message.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:uWebshop.Domain.ClientErrorHandling.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ClientErrorHandling.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ClientErrorHandling.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.LicenseSection">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.LicenseSection.Bindings">
            <summary>
            Gets or sets the bindings.
            </summary>
            <value>
            The bindings.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.LicenseSection.Client">
            <summary>
            Gets or sets the client.
            </summary>
            <value>
            The client.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.BindingsElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BindingsElement.BasicHttpBinding">
            <summary>
            Gets or sets the basic HTTP binding.
            </summary>
            <value>
            The basic HTTP binding.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.BasicHttpBindingElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.CloseTimeout">
            <summary>
            Gets or sets the close timeout.
            </summary>
            <value>
            The close timeout.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.OpenTimeout">
            <summary>
            Gets or sets the open timeout.
            </summary>
            <value>
            The open timeout.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout.
            </summary>
            <value>
            The receive timeout.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.SendTimeout">
            <summary>
            Gets or sets the send timeout.
            </summary>
            <value>
            The send timeout.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.AllowCookies">
            <summary>
            Gets or sets the allow cookies.
            </summary>
            <value>
            The allow cookies.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.BypassProxyOnLocal">
            <summary>
            Gets or sets the bypass proxy configuration local.
            </summary>
            <value>
            The bypass proxy configuration local.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.HostNameComparisonMode">
            <summary>
            Gets or sets the host name comparison mode.
            </summary>
            <value>
            The host name comparison mode.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.MaxBufferSize">
            <summary>
            Gets or sets the maximum size of the buffer.
            </summary>
            <value>
            The maximum size of the buffer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.MaxBufferPoolSize">
            <summary>
            Gets or sets the maximum size of the buffer pool.
            </summary>
            <value>
            The maximum size of the buffer pool.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.MaxReceivedMessageSize">
            <summary>
            Gets or sets the maximum size of the received message.
            </summary>
            <value>
            The maximum size of the received message.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.MessageEncoding">
            <summary>
            Gets or sets the message encoding.
            </summary>
            <value>
            The message encoding.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.TextEncoding">
            <summary>
            Gets or sets the text encoding.
            </summary>
            <value>
            The text encoding.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.TransferMode">
            <summary>
            Gets or sets the transfer mode.
            </summary>
            <value>
            The transfer mode.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.UseDefaultWebProxy">
            <summary>
            Gets or sets the use default web proxy.
            </summary>
            <value>
            The use default web proxy.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.ReaderQuotas">
            <summary>
            Gets or sets the reader quotas.
            </summary>
            <value>
            The reader quotas.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.BasicHttpBindingElement.Security">
            <summary>
            Gets or sets the security.
            </summary>
            <value>
            The security.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.ReaderQuotasElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.ReaderQuotasElement.MaxDepth">
            <summary>
            Gets or sets the maximum depth.
            </summary>
            <value>
            The maximum depth.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.ReaderQuotasElement.MaxString">
            <summary>
            Gets or sets the maximum string.
            </summary>
            <value>
            The maximum string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.ReaderQuotasElement.MaxArrayLength">
            <summary>
            Gets or sets the maximum length of the array.
            </summary>
            <value>
            The maximum length of the array.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.ReaderQuotasElement.MaxBytesPerRead">
            <summary>
            Gets or sets the maximum bytes per read.
            </summary>
            <value>
            The maximum bytes per read.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.ReaderQuotasElement.MaxNameTableCharCount">
            <summary>
            Gets or sets the maximum name table character count.
            </summary>
            <value>
            The maximum name table character count.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.SecurityElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.SecurityElement.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.SecurityElement.Transport">
            <summary>
            Gets or sets the transport.
            </summary>
            <value>
            The transport.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.SecurityElement.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.TransportElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.TransportElement.ClientCredentialType">
            <summary>
            Gets or sets the type of the client credential.
            </summary>
            <value>
            The type of the client credential.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.TransportElement.ProxyCredentialType">
            <summary>
            Gets or sets the type of the proxy credential.
            </summary>
            <value>
            The type of the proxy credential.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.TransportElement.Realm">
            <summary>
            Gets or sets the realm.
            </summary>
            <value>
            The realm.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.MessageElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.MessageElement.ClientCredentialType">
            <summary>
            Gets or sets the type of the client credential.
            </summary>
            <value>
            The type of the client credential.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.MessageElement.AlgorithmSuite">
            <summary>
            Gets or sets the algorithm suite.
            </summary>
            <value>
            The algorithm suite.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.ClientElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.ClientElement.Endpoint">
            <summary>
            Gets or sets the endpoint.
            </summary>
            <value>
            The endpoint.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Configuration.EndpointElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Configuration.EndpointElement.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.EndpointElement.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>
            The binding.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.EndpointElement.BindingConfiguration">
            <summary>
            Gets or sets the binding configuration.
            </summary>
            <value>
            The binding configuration.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.EndpointElement.Contract">
            <summary>
            Gets or sets the contract.
            </summary>
            <value>
            The contract.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Configuration.EndpointElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Catalog">
            <summary>
            Class representing the catalog in  webshop, containing a group of categories
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Catalog.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Catalog.CategoryRepositoryNodeAlias">
            <summary>
            The category repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Catalog.ProductRepositoryNodeAlias">
            <summary>
            The product repository node alias
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Category">
            <summary>
                Class representing a category in webshop, containing a group of products
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Category.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Category.IsAlias(System.String)">
            <summary>
            Determines whether the specified node type alias is alias.
            </summary>
            <param name="nodeTypeAlias">The node type alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Category.NiceUrl(System.String,System.String)">
            <summary>
            The url for this category bsaed on a storeAlias
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Category.FullLocalizedUrl(System.String)">
            <summary>
            The full localized URL (ID-URL) of the category
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Category.ParentNodeTypeAlias">
            <summary>
            Gets or sets the parent node type alias.
            </summary>
            <value>
            The parent node type alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.ParentCategory">
            <summary>
            Gets or sets the parent category.
            </summary>
            <value>
            The parent category.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.HasCategories">
            <summary>
            Gets or sets a value indicating whether [has categories].
            </summary>
            <value>
              <c>true</c> if [has categories]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.Products">
            <summary>
                Gets a list of products which belong to the category
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Category.ProductsRecursive">
            <summary>
                Gets a list of products which belong to the category
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Category.ParentCategories">
            <summary>
            Gets the parent categories.
            </summary>
            <value>
            The parent categories.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.Categories">
            <summary>
            Gets a list of (sub)categories of the current category
            </summary>
            <value>
            The categories.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.SubCategories">
            <summary>
            Gets the sub categories.
            </summary>
            <value>
            The sub categories.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.Tags">
            <summary>
            Gets the tags of the category
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.Images">
            <summary>
            Gets the image of the category
            </summary>
            <value>
            The images.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.LocalizedUrl">
            <summary>
            Gets or sets the localized URL.
            </summary>
            <value>
            The localized URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Category.UrlName">
            <summary>
                Returns the localized url (ID-URL)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Category.Url">
            <summary>
                The url for this category based on the current store
            </summary>
        </member>
        <member name="T:uWebshop.Domain.CustomerInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.CustomerInfo.VATNumber">
            <summary>
                VAT number of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.CustomerId">
            <summary>
                Umbraco Member Id of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.AcceptsMarketing">
            <summary>
            Does this customer accepts marketing?
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.LoginName">
            <summary>
                Loginname of the customer (works also when not making use of umbraco members)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.CountryCode">
            <summary>
                Countrycode of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.CountryName">
            <summary>
                CountryName based on countrycode
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.ShippingCountryCode">
            <summary>
                Countrycode of the country to ship to
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.ShippingCountryName">
            <summary>
                Countryname of th ecountry to ship to
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.RegionCode">
            <summary>
                Regioncode of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.RegionName">
            <summary>
                Regioname of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.customerInformation">
            <summary>
            Gets or sets the customer information.
            </summary>
            <value>
            The customer information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.CustomerInformation">
            <summary>
            Gets or sets the customer information.
            </summary>
            <value>
            The customer information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.shippingInformation">
            <summary>
            Gets or sets the shipping information.
            </summary>
            <value>
            The shipping information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.ShippingInformation">
            <summary>
            Gets or sets the shipping information.
            </summary>
            <value>
            The shipping information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.extraInformation">
            <summary>
            Gets or sets the extra information.
            </summary>
            <value>
            The extra information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.ExtraInformation">
            <summary>
            Gets or sets the extra information.
            </summary>
            <value>
            The extra information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.CustomerInfo.CustomerIsShipping">
            <summary>
                Are the customer and the shipping fields equal?
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscount.CouponCode">
            <summary>
            Code of the coupon
            </summary>
            <value>
            The coupon code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscount.OriginalId">
            <summary>
            Gets the original unique identifier.
            </summary>
            <value>
            The original unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IOrderDiscount.Counter">
            <summary>
            Gets the counter.
            </summary>
            <value>
            The counter.
            </value>
        </member>
        <member name="T:uWebshop.Domain.PaymentInfo">
            <summary>
                Payment Provider and Payment Transaction details of the order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.Id">
            <summary>
                Payment Provider Id
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.Title">
            <summary>
                Payment Provider Title
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.MethodId">
            <summary>
                Payment Provider Method Id
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.MethodTitle">
            <summary>
                Payment Provider Method Title
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.Url">
            <summary>
                Url of the Payment Provider
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.Parameters">
            <summary>
                Parameters to sent over to the Payment Provider
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.TransactionId">
            <summary>
                Unique Id for the transaction of the payment
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.TransactionMethod">
            <summary>
                They way this transaction needs to be send over to the payment provider
                Options are: QueryString, Form, Custom, ServerPost
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.PaymentType">
            <summary>
                Type of the payment provider
                OnlinePayment, OfflinePaymentInStore, OfflinePaymentAtCustomer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentInfo.ErrorMessage">
            <summary>
                Possible error messages returned from the payment provider
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ShippingInfo">
            <summary>
                Shipping Provider and Shipping Transaction details of the order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.Id">
            <summary>
                Payment Provider Id
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.Title">
            <summary>
                Payment Provider Title
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.MethodId">
            <summary>
                Payment Provider Method Id
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.MethodTitle">
            <summary>
                Payment Provider Method Title
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.Url">
            <summary>
                Url of the Payment Provider
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.Parameters">
            <summary>
                Parameters to sent over to the Shipping Provider
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.TransactionId">
            <summary>
                Unique Id for the transaction of the shipping
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.TransactionMethod">
            <summary>
                They way this transaction needs to be send over to the Shipping provider
                Options are: QueryString, Form, Custom, ServerPost
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.ShippingType">
            <summary>
                Type of the Shipping provider
                Uknownn, Shipping, Pickup
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingInfo.ErrorMessage">
            <summary>
                Possible error messages returned from the Shipping provider
            </summary>
        </member>
        <member name="T:uWebshop.Domain.StoreInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.LanguageCode">
            <summary>
            Gets or sets the language code.
            </summary>
            <value>
            The language code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.Alias">
            <summary>
            Gets or sets the alias.
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.CurrencyCulture">
            <summary>
            Gets or sets the currency culture.
            </summary>
            <value>
            The currency culture.
            </value>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.CurrencyCultureInfo">
            <summary>
                Returns the CultureInfo based on the CurrencyCulture
            </summary>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.CultureInfo">
            <summary>
                store Culture
            </summary>
        </member>
        <member name="P:uWebshop.Domain.StoreInfo.Store">
            <summary>
            Gets the store.
            </summary>
            <value>
            The store.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ShippingRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingRequest.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingRequest.ParametersAsString">
            <summary>
            Gets the parameters in string format.
            </summary>
            <value>
            The parameters in string format.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingRequest.ParameterRenderMethod">
            <summary>
            Gets or sets the parameter render method.
            </summary>
            <value>
            The parameter render method.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingRequest.ShippingUrlBase">
            <summary>
            Gets or sets the shipping URL base.
            </summary>
            <value>
            The shipping URL base.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingRequest.ShippingUrl">
            <summary>
            Gets the shipping URL.
            </summary>
            <value>
            The shipping URL.
            </value>
        </member>
        <member name="T:uWebshop.Domain.DiscountOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.DiscountOrder.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.SectionNodeAlias">
            <summary>
            The section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.RepositoryNodeAlias">
            <summary>
            The repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.DiscountOrderCondition">
            <summary>
            Gets or sets the discount order condition.
            </summary>
            <value>
            The discount order condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.RequiredItemIds">
            <summary>
            List of products this discount applies to
            </summary>
            <value>
            The required item ids.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.AffectedOrderlines">
            <summary>
            Gets the affected orderlines.
            </summary>
            <value>
            The affected orderlines.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.Condition">
            <summary>
            Discount condition (None, OnTheXthItem, PerSetOfItems)
            </summary>
            <value>
            The condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.NumberOfItemsCondition">
            <summary>
            Number of items required for OnTheXthItem and PerSetOfItems conditions
            </summary>
            <value>
            The number of items condition.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.MinimalOrderAmount">
            <summary>
            Minimum amount of the order before discount is valid
            </summary>
            <value>
            The minimal order amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.MinimumOrderAmountInCents">
            <summary>
            Minimum amount of the order before discount is valid
            </summary>
            <value>
            The minimum order amount in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.CouponCode">
            <summary>
            Code of the coupon
            </summary>
            <value>
            The coupon code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.CouponCodes">
            <summary>
            Code of the coupon
            </summary>
            <value>
            The coupon codes.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.OncePerCustomer">
            <summary>
            Can this discount be only used once per customer?
            </summary>
            <value>
            <c>true</c> if the discount is once per customer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountOrder.OriginalId">
            <summary>
            Gets the original unique identifier.
            </summary>
            <value>
            The original unique identifier.
            </value>
        </member>
        <member name="T:uWebshop.Domain.DummyPaymentProvider">
            <summary>
                Class representing a payment provider in Umbraco
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPaymentProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProvider.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProvider.GetParameterRenderMethod">
            <summary>
            Gets the parameter render method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentProvider.GetAllPaymentMethods(System.Int32)">
            <summary>
            Gets all payment methods.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.DummyPaymentProvider.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.DummyPaymentProvider class
            </summary>
            <param name="id">NodeId of the payment provider</param>
        </member>
        <member name="M:uWebshop.Domain.DummyPaymentProvider.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.DummyPaymentProvider.GetAllPaymentMethods(System.Int32)">
            <summary>
            Gets all payment methods.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.DummyPaymentProvider.GetAllPaymentMethods">
            <summary>
            Gets all payment methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.DummyPaymentProvider.GetParameterRenderMethod">
            <summary>
            Gets the parameter render method.
            </summary>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.DummyPaymentProvider.Id">
            <summary>
            Gets the id of the node
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyPaymentProvider.PaymentMethods">
            <summary>
                Gets a list of payment methods
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyPaymentProvider.PaymentProviderType">
            <summary>
                Gets a list with the payment provider types
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyPaymentProvider.PaymentProviderTitle">
            <summary>
            Gets the payment provider title.
            </summary>
            <value>
            The payment provider title.
            </value>
        </member>
        <member name="T:uWebshop.Domain.DummyShippingProvider">
            <summary>
                Class representing a payment provider in Umbraco
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IShippingProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IShippingProvider.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IShippingProvider.GetAllShippingMethods(System.Int32)">
            <summary>
            Gets all shipping methods.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.DummyShippingProvider.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.DummyShippingProvider class
            </summary>
            <param name="id">NodeId of the shipping provider</param>
        </member>
        <member name="M:uWebshop.Domain.DummyShippingProvider.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.DummyShippingProvider.GetAllShippingMethods(System.Int32)">
            <summary>
            Gets all shipping methods.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.DummyShippingProvider.Title">
            <summary>
                Title of the dummy shippingprovider
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyShippingProvider.ShippingProviderNodeName">
            <summary>
                Nodename of the dummy shippingprovider
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyShippingProvider.ShippingMethods">
            <summary>
                Gets a list of payment methods
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyShippingProvider.ShippingProviderType">
            <summary>
                Gets a list with the shipping provider types
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DummyShippingProvider.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Email">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Email.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the uWebshop.Domain.Email class
            </summary>
            <param name="id">NodeId of the email</param>
        </member>
        <member name="M:uWebshop.Domain.Email.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.Email"/> class.
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Email.EmailRepositoryNodeAlias">
            <summary>
            The email repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Email.EmailTemplateStoreSectionNodeAlias">
            <summary>
            The email template store section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Email.EmailTemplateCustomerSectionNodeAlias">
            <summary>
            The email template customer section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Email.EmailTemplateStoreNodeAlias">
            <summary>
            The email template store node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Email.EmailTemplateCustomerNodeAlias">
            <summary>
            The email template customer node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Email.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Email.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Email.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>
            The template.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Email.TemplatePreview">
            <summary>
            Unused
            </summary>
            <value>
            Unused
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IUwebshopConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.PermanentRedirectOldCatalogUrls">
            <summary>
            Gets a value indicating whether permanent redirect old catalog urls.
            </summary>
            <value>
            <c>true</c> if permanent redirect old catalog urls; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.LegacyCategoryUrlIdentifier">
            <summary>
            Gets the legacy category URL identifier.
            </summary>
            <value>
            The legacy category URL identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.LegacyProductUrlIdentifier">
            <summary>
            Gets the legacy product URL identifier.
            </summary>
            <value>
            The legacy product URL identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.CategoryUrl">
            <summary>
            Gets the category URL.
            </summary>
            <value>
            The category URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.ProductUrl">
            <summary>
            Gets the product URL.
            </summary>
            <value>
            The product URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.ExamineSearcher">
            <summary>
            Gets the examine searcher.
            </summary>
            <value>
            The examine searcher.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.ExamineIndexer">
            <summary>
            Gets the examine indexer.
            </summary>
            <value>
            The examine indexer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopConfiguration.ShareBasketBetweenStores">
            <summary>
            Gets the setting indicating whether the basket is shared between all stores.
            </summary>
            <value>
            The setting indicating whether the basket is shared between all stores.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IUwebshopRequestService">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Interfaces.IUwebshopRequestService.Current">
            <summary>
            Gets the current request.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.ISettingsService">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ISettingsService.RegisterSettingsChangedEvent(System.Action{uWebshop.Domain.Interfaces.ISettings})">
            <summary>
            Registers the settings changed event.
            </summary>
            <param name="e">The decimal.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.ISettingsService.TriggerSettingsChangedEvent(uWebshop.Domain.Interfaces.ISettings)">
            <summary>
            Triggers the store changed event.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderedProduct">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderedProduct.NodeAlias">
            <summary>
            The general node type alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderedProduct.#ctor(System.Int32)">
            <param name="id">NodeId of the orderedProduct</param>
        </member>
        <member name="M:uWebshop.Domain.OrderedProduct.IsAlias(System.String)">
            <summary>
            Determines whether the specified alias is alias.
            </summary>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.DoctypeAlias">
            <summary>
            Gets the specific doctype alias.
            </summary>
            <value>
            The doctype alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.ProductId">
            <summary>
            Gets the product unique identifier.
            </summary>
            <value>
            The product unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.SKU">
            <summary>
            Gets the sku.
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.Weight">
            <summary>
            Gets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.RangesString">
            <summary>
            Gets the ranges string.
            </summary>
            <value>
            The ranges string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.PriceInCents">
            <summary>
            Gets the price information cents.
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.Vat">
            <summary>
            Gets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.ItemCount">
            <summary>
            Gets the item count.
            </summary>
            <value>
            The item count.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.OrderedProductDiscountPercentage">
            <summary>
            Gets or sets the ordered product discount percentage.
            </summary>
            <value>
            The ordered product discount percentage.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.OrderedProductDiscountAmount">
            <summary>
            Gets or sets the ordered product discount amount.
            </summary>
            <value>
            The ordered product discount amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.OrderedProductDiscountExcludingVariants">
            <summary>
            Gets or sets the ordered product discount excluding variants.
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderedProduct.DefaultProperties">
            <summary>
            Gets the default properties.
            </summary>
            <value>
            The default properties.
            </value>
        </member>
        <member name="T:uWebshop.Domain.OrderedProductVariant">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderedProductVariant.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderedProductVariant.#ctor(System.Int32)">
            <param name="id">NodeId of the orderedProductVariant</param>
        </member>
        <member name="M:uWebshop.Domain.OrderedProductVariant.IsAlias(System.String)">
            <summary>
            Determines whether the specified alias is alias.
            </summary>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.VariantId">
            <summary>
            Gets the variant unique identifier.
            </summary>
            <value>
            The variant unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.SKU">
            <summary>
            Gets the sku.
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.Group">
            <summary>
            Gets the group.
            </summary>
            <value>
            The group.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.Length">
            <summary>
            Gets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.Width">
            <summary>
            Gets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.Height">
            <summary>
            Gets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.Weight">
            <summary>
            Gets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.PriceInCents">
            <summary>
            Gets the price information cents.
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.RangesString">
            <summary>
            Gets the ranges string.
            </summary>
            <value>
            The ranges string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.DocTypeAlias">
            <summary>
            Gets the document type alias.
            </summary>
            <value>
            The document type alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage.
            </summary>
            <value>
            The discount percentage.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderedProductVariant.DiscountAmount">
            <summary>
            Gets or sets the discount amount.
            </summary>
            <value>
            The discount amount.
            </value>
        </member>
        <member name="T:uWebshop.Domain.OrderSection">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderSection.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderSection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.OrderSection"/> class.
            </summary>
            <param name="id">NodeId of the document</param>
        </member>
        <member name="P:uWebshop.Domain.OrderSection.OrderStatusInSection">
            <summary>
                Which kind of orders should be listed in this section
            </summary>
        </member>
        <member name="T:uWebshop.Domain.PaymentProviderMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.PaymentProviderMethod.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>
            The name of the provider.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.TestMode">
            <summary>
            Gets or sets a value indicating whether [test mode].
            </summary>
            <value>
              <c>true</c> if [test mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.Settings">
            <summary>
            Gets or sets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.ImageId">
            <summary>
            Gets or sets the image unique identifier.
            </summary>
            <value>
            The image unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.PriceInCents">
            <summary>
            Gets or sets the price information cents.
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.AmountType">
            <summary>
            Gets the type to calculate the payment amount for the order.
            </summary>
            <value>
            The type to calculate the payment amount for the order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.PriceWithVat">
            <summary>
            Gets or sets the price with vat.
            </summary>
            <value>
            The price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.PriceWithVatInCents">
            <summary>
            Gets or sets the price with vat information cents.
            </summary>
            <value>
            The price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.PriceWithoutVat">
            <summary>
            Gets or sets the price without vat.
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProviderMethod.PriceWithoutVatInCents">
            <summary>
            Gets or sets the price without vat information cents.
            </summary>
            <value>
            The price without vat information cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.DiscountProduct">
            <summary>
            Discount over a product
            </summary>
        </member>
        <member name="F:uWebshop.Domain.DiscountProduct.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.DiscountProduct.GetDiscountAmountInCents(System.Int32)">
            <summary>
            The discount value in cents, based on catalog information
            </summary>
            <param name="productId">The product unique identifier.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.SectionNodeAlias">
            <summary>
            The section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.Items">
            <summary>
            List of products this discount applies to
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.Products">
            <summary>
            List of products this discount applies to
            </summary>
            <value>
            The products.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.ProductVariants">
            <summary>
            List of products variants this discount applies to
            </summary>
            <value>
            The product variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.ExcludeVariants">
            <summary>
            Gets or sets a value indicating whether [exclude variants].
            </summary>
            <value>
              <c>true</c> if [exclude variants]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.IsActive">
            <summary>
            Gets or sets a value indicating whether [is active].
            </summary>
            <value>
              <c>true</c> if [is active]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.DiscountProduct.OncePerCustomer">
            <summary>
            Gets a value indicating whether the discount is once per customer.
            </summary>
            <value>
            <c>true</c> if the discount is once per customer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ProductVariantGroup">
            <summary>
            Product variants are grouped by a group title
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ProductVariantGroup.ProductVariants">
            <summary>
            Product Variants in this group
            </summary>
            <value>
            The product variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariantGroup.Variants">
            <summary>
            Product Variants in this group
            </summary>
            <value>
            The product variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariantGroup.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariantGroup.Required">
            <summary>
            Gets a value indicating whether the variant group is required.
            </summary>
            <value>
              <c>true</c> if the variant group is required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Range">
            <summary>
            Class representing a range
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Range.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Range.CreateFromString(System.String)">
            <summary>
            Creates from string.
            </summary>
            <param name="rangesData">The ranges data.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Range.From">
            <summary>
            Gets the from value of the range
            </summary>
            <value>
            The from value.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Range.To">
            <summary>
            Gets the to value of the range
            </summary>
            <value>
            The to value.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Range.PriceInCents">
            <summary>
            Gets the amount of the range
            </summary>
            <value>
            The price in cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.RangesListExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.RangesListExtensions.ToRangesString(System.Collections.Generic.IEnumerable{uWebshop.Domain.Range})">
            <summary>
            Automatics the ranges string.
            </summary>
            <param name="ranges">The ranges.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.RangesListExtensions.FindRangeForValue(System.Collections.Generic.IEnumerable{uWebshop.Domain.Range},System.Int32)">
            <summary>
            Finds the range for value.
            </summary>
            <param name="ranges">The ranges.</param>
            <param name="itemCount">The item count.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.RangesListExtensions.GetRangeAmountForValue(System.Collections.Generic.IEnumerable{uWebshop.Domain.Range},System.Int32)">
            <summary>
            Gets the range amount for value.
            </summary>
            <param name="ranges">The ranges.</param>
            <param name="itemCount">The item count.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Region">
            <summary>
                Class representing a region
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Region.Name">
            <summary>
                Gets the name of the region
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Region.Code">
            <summary>
                Gets the code of the region
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Region.Tax">
            <summary>
                Gets the tax of the region
            </summary>
        </member>
        <member name="T:uWebshop.Domain.ShippingProviderMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ShippingProviderMethod.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
            <value>
            The name of the provider.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.TestMode">
            <summary>
            Gets or sets a value indicating whether [test mode].
            </summary>
            <value>
              <c>true</c> if [test mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.Settings">
            <summary>
            Gets or sets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.ImageId">
            <summary>
            Gets or sets the image unique identifier.
            </summary>
            <value>
            The image unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.PriceInCents">
            <summary>
            Gets or sets the price information cents.
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.ShippingProviderUpdateService">
            <summary>
            Gets or sets the shipping provider update service.
            </summary>
            <value>
            The shipping provider update service.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.PriceWithVat">
            <summary>
            Gets or sets the price with vat.
            </summary>
            <value>
            The price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.PriceWithVatInCents">
            <summary>
            Gets or sets the price with vat information cents.
            </summary>
            <value>
            The price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.PriceWithoutVat">
            <summary>
            Gets or sets the price without vat.
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProviderMethod.PriceWithoutVatInCents">
            <summary>
            Gets or sets the price without vat information cents.
            </summary>
            <value>
            The price without vat information cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Country">
            <summary>
                Class representing a country
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Country.Name">
            <summary>
                Gets the name of the country
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Country.Code">
            <summary>
                Gets the code of the country
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Customer">
            <summary>
                Class representing a customer in Umbraco
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Customer.#ctor(System.String)">
            <summary>
                Construcor of the customer class
            </summary>
            <param name="email">E-mail address of the customer</param>
        </member>
        <member name="M:uWebshop.Domain.Customer.#ctor(System.Int32)">
            <summary>
                Construcor of the customer class
            </summary>
            <param name="id">NodeId of the customer</param>
        </member>
        <member name="M:uWebshop.Domain.Customer.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.FirstName">
            <summary>
                Gets or sets the first name of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.LastName">
            <summary>
                Gets or sets the last name of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.FullName">
            <summary>
                Gets the full name of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.Country">
            <summary>
                Gets or sets the country of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.Region">
            <summary>
                Gets or sets the region of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.Email">
            <summary>
                Gets or sets the e-mail of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.EmailAddress">
            <summary>
                Gets or sets the e-mail address of the customer
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.ValidVAT">
            <summary>
                Is Customer VAT Valid?
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.VATNumber">
            <summary>
                VAT Number
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Customer.Orders">
            <summary>
                Gets a list of orders related to the customer
            </summary>
        </member>
        <member name="T:uWebshop.Domain.CustomerProfile">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.FirstName">
            <summary>
                Customer first name (alias: customerFirstName)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.LastName">
            <summary>
                customer last name (alias: customerLastName)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.Country">
            <summary>
                customer country (alias: customerCountry)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.Region">
            <summary>
                customer region (alias: customerRegion)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.Email">
            <summary>
                customer email (alias: customerEmail)
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.VATNumber">
            <summary>
                VAT Number
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomerProfile.ValidVAT">
            <summary>
            Gets or sets a value indicating whether [valid vat].
            </summary>
            <value>
              <c>true</c> if [valid vat]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.CustomSale">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomSale.DiscountPercentage">
            <summary>
                The discount percentage of the sale
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomSale.DiscountAmount">
            <summary>
                The discount amount of the sale
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomSale.Title">
            <summary>
                The title of the sale
            </summary>
        </member>
        <member name="P:uWebshop.Domain.CustomSale.Description">
            <summary>
                The description of the sale
            </summary>
        </member>
        <member name="T:uWebshop.Domain.File">
            <summary>
            Class representing a file in Umbraco
            </summary>
        </member>
        <member name="P:uWebshop.Domain.File.FileName">
            <summary>
            Gets the name of the file
            </summary>
            <value>
            The name of the file.
            </value>
        </member>
        <member name="P:uWebshop.Domain.File.MultilanguageFileName">
            <summary>
            Gets the multilanguage name of the file
            </summary>
            <value>
            The name of the multilanguage file.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Image">
            <summary>
            Class representing an image in Umbraco
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Image.Width">
            <summary>
            Gets the width of the image
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Image.Height">
            <summary>
            Gets the height of the image
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Store">
            <summary>
            Class representing a language in Umbraco
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Store.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Store.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:uWebshop.Domain.Store.StoreRepositoryNodeAlias">
            <summary>
            The store repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Store.Culture">
            <summary>
            Gets the store culture
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.Alias">
            <summary>
            Get the shop alias
            </summary>
            <value>
            The alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CountryCode">
            <summary>
            Gets the country code
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.DefaultCountryCode">
            <summary>
            Gets or sets the default country code.
            </summary>
            <value>
            The default country code.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CurrencyCulture">
            <summary>
            Returns the currency culture code (en-US)
            </summary>
            <value>
            The currency culture.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CurrencyCodes">
            <summary>
            Gets the currency codes.
            </summary>
            <value>
            The currency codes.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.Currencies">
            <summary>
            Gets or sets the currencies.
            </summary>
            <value>
            The currencies.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CurrencyCultureInfo">
            <summary>
            Returns the CultureInfo based on the CurrencyCulture
            </summary>
            <value>
            The currency culture information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.DefaultCurrencyCultureInfo">
            <summary>
            Gets the default currency culture information.
            </summary>
            <value>
            The default currency culture information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CurrencyCultureSymbol">
            <summary>
            Gets the currency culture symbol.
            </summary>
            <value>
            The currency culture symbol.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.DefaultCurrencyCultureSymbol">
            <summary>
            Gets the default currency culture symbol.
            </summary>
            <value>
            The default currency culture symbol.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CultureInfo">
            <summary>
            Gets a System.Globalization.CultureInfo object that is set to the languagecode and countrycode
            </summary>
            <value>
            The culture information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.GlobalVat">
            <summary>
            Global Vat for all items in the store, when no VAT is specified
            </summary>
            <value>
            The global vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OrderNumberPrefix">
            <summary>
            Prefix value to put before the order numbers
            </summary>
            <value>
            The order number prefix.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OrderNumberTemplate">
            <summary>
            Use a template to generate the order numbers
            </summary>
            <value>
            The order number template.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OrderNumberStartNumber">
            <summary>
            Use a template to generate the order numbers
            </summary>
            <value>
            The order number start number.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UseStock">
            <summary>
            Is stock enabled for this store?
            </summary>
            <value>
              <c>true</c> if [use stock]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UseVariantStock">
            <summary>
            Gets or sets a value indicating whether this store uses variant stock by default.
            </summary>
            <value>
              <c>true</c> if this store uses variant stock by default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UseCountdown">
            <summary>
            Gets or sets a value indicating whether this store uses variant stock by default.
            </summary>
            <value>
              <c>true</c> if this store uses variant stock by default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.enableStock">
            <summary>
            Gets or sets a value indicating whether [enable stock].
            </summary>
            <value>
              <c>true</c> if [enable stock]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UseStoreSpecificStock">
            <summary>
            Use the store specific stock _StoreAlias instead of global stock
            </summary>
            <value>
            <c>true</c> if [use store specific stock]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UseStoreStock">
            <summary>
            Gets or sets a value indicating whether [use store stock].
            </summary>
            <value>
              <c>true</c> if [use store stock]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UseBackorders">
            <summary>
            Use the store specific stock _StoreAlias instead of global stock
            </summary>
            <value>
              <c>true</c> if [use backorders]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.EnableTestmode">
            <summary>
            Gets or sets a value indicating whether [enable testmode].
            </summary>
            <value>
              <c>true</c> if [enable testmode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.IncompleOrderLifetime">
            <summary>
            Gets the incomple order lifetime.
            </summary>
            <value>
            The incomple order lifetime.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.StoreUrlWithoutDomain">
            <summary>
            Gets or sets the store URL without domain.
            </summary>
            <value>
            The store URL without domain.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.EmailAddressFrom">
            <summary>
            Email address to sent the orders from
            </summary>
            <value>
            The email address from.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.EmailAddressFromName">
            <summary>
            Name to sent the orders
            </summary>
            <value>
            The name of the email address from.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.EmailAddressTo">
            <summary>
            Email address to sent the orders from
            </summary>
            <value>
            The email address automatic.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.AccountCreatedEmail">
            <summary>
            Gets the account created email.
            </summary>
            <value>
            The account created email.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.AccountForgotPasswordEmail">
            <summary>
            Gets the account forgot password email.
            </summary>
            <value>
            The account forgot password email.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.ConfirmationEmailStore">
            <summary>
            Sent and email to the store after the order is confirmed
            </summary>
            <value>
            The confirmation email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.ConfirmationEmailCustomer">
            <summary>
            Sent and email to the customer after the order is confirmed
            </summary>
            <value>
            The confirmation email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OnlinePaymentEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is succesfully paid online
            </summary>
            <value>
            The online payment email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OnlinePaymentEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is succesfully paid online
            </summary>
            <value>
            The online payment email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OfflinePaymentEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to offline payment
            </summary>
            <value>
            The offline payment email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.OfflinePaymentEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to offline payment
            </summary>
            <value>
            The offline payment email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.PaymentFailedEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to payment failed
            </summary>
            <value>
            The payment failed email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.PaymentFailedEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to payment failed
            </summary>
            <value>
            The payment failed email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.DispatchedEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to dispatched
            </summary>
            <value>
            The dispatched email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.DispatchEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to dispatched
            </summary>
            <value>
            The dispatch email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CancelEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to cancelled
            </summary>
            <value>
            The cancel email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.CancelEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to cancelled
            </summary>
            <value>
            The cancel email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.ClosedEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to closed
            </summary>
            <value>
            The closed email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.ClosedEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to closed
            </summary>
            <value>
            The closed email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.PendingEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to pending
            </summary>
            <value>
            The pending email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.PendingEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to pending
            </summary>
            <value>
            The pending email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.TemporaryOutOfStockEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to (temporary) out of stock
            </summary>
            <value>
            The temporary out of stock email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.TemporaryOutOfStockEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to (temporary) out of stock
            </summary>
            <value>
            The temporary out of stock email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UndeliverableEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to undeliverable
            </summary>
            <value>
            The undeliverable email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.UndeliverableEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to undeliverable
            </summary>
            <value>
            The undeliverable email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.ReturnedEmailStore">
            <summary>
            Sent and email to the store after the orderstatus is set to returned
            </summary>
            <value>
            The returned email store.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.ReturnedEmailCustomer">
            <summary>
            Sent and email to the customer after the orderstatus is set to returned
            </summary>
            <value>
            The returned email customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.StoreURL">
            <summary>
            Gets or sets the store URL.
            </summary>
            <value>
            The store URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Store.Domains">
            <summary>
            Gets the domains.
            </summary>
            <value>
            The domains.
            </value>
        </member>
        <member name="F:uWebshop.Domain.StoreDomain.domain">
            <summary>
            The domain
            </summary>
        </member>
        <member name="F:uWebshop.Domain.StoreDomain.nodeId">
            <summary>
            The node unique identifier
            </summary>
        </member>
        <member name="T:uWebshop.Domain.DateFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.DateFolder.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="T:uWebshop.Domain.OrderStoreFolder">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderStoreFolder.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Order">
            <summary>
                Class representing an order in Umbraco
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Order.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Order.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.Order"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Order.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the uWebshop.Domain.Order class
            </summary>
            <param name="id">NodeId of the order</param>
        </member>
        <member name="P:uWebshop.Domain.Order.OrderRepositoryNodeAlias">
            <summary>
            The order repository node alias
            </summary>
            <summary>
            The order repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Order.OrderStatusPicker">
            <summary>
            Gets or sets the order status picker.
            </summary>
            <value>
            The order status picker.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Order.OrderPaid">
            <summary>
            Gets or sets a value indicating whether [order paid].
            </summary>
            <value>
              <c>true</c> if [order paid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Order.OrderDetails">
            <summary>
            Gets or sets the order details.
            </summary>
            <value>
            The order details.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Order.UniqueOrderId">
            <summary>
            Gets or sets the unique order unique identifier.
            </summary>
            <value>
            The unique order unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Order.CustomerEmail">
            <summary>
            Gets or sets the customer email.
            </summary>
            <value>
            The customer email.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Order.CustomerFirstName">
            <summary>
            Gets or sets the first name of the customer.
            </summary>
            <value>
            The first name of the customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Order.CustomerLastName">
            <summary>
            Gets or sets the last name of the customer.
            </summary>
            <value>
            The last name of the customer.
            </value>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.CouponCodesData">
            <summary>
            The coupon codes data
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.CustomerInfo">
            <summary>
            The customer information
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.OrderDate">
            <summary>
            [Obsolete!! Use ConfirmDate] Gets the unique orderdate for the order
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.OrderNumber">
            <summary>
            Gets the unique ordernumber for the order
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.PaymentInfo">
            <summary>
            The payment information
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.ReValidateSaveAction">
            <summary>
            The preference validate save action
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.RevalidateOrderOnLoad">
            <summary>
            The revalidate order configuration load
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.ShippingInfo">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.ShippingProviderAmountInCents">
            <summary>
            Gets the shipping costs of the order
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.StoreOrderReferenceId">
            <summary>
            The unique per store id for the order
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.UniqueOrderId">
            <summary>
            Unique Order Id
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.SetStatus(uWebshop.Common.OrderStatus,System.Boolean)">
            <summary>
            Sets the status.
            </summary>
            <param name="newStatus">The new status.</param>
            <param name="sendEmails">if set to <c>true</c> [send emails].</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.RegisterCustomOrderValidation(System.Predicate{uWebshop.Domain.OrderInfo},System.Func{uWebshop.Domain.OrderInfo,System.String})">
            <summary>
            Registers the custom order validation.
            </summary>
            <param name="condition">The condition.</param>
            <param name="errorDictionaryItem">The error dictionary item.</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.SetVATNumber(System.String)">
            <summary>
            Sets the vat number.
            </summary>
            <param name="VATNumber">The vat number.</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddOrderLineDetails(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Add extra fields to any orderline
            </summary>
            <param name="fields">The fields.</param>
            <param name="orderLineId">The order line unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddStore(uWebshop.Domain.Interfaces.IStore)">
            <summary>
            Adds the store.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.RemoveCoupon(System.String)">
            <summary>
                Remove a coupon from the order
            </summary>
            <param name="couponCode"></param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.ConfirmOrder(System.Boolean,System.Int32)">
            <summary>
                Change orderstatus
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.Save(System.Boolean,uWebshop.Common.ValidateSaveAction)">
            <summary>
                Save the order
            </summary>
            <param name="revalidateOrderOnLoadHack">check again validation</param>
            <param name="validateSaveAction"></param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddOrUpdateOrderLine(System.Int32,System.Int32,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Create, Add, Update the orderline
            </summary>
            <param name="orderLineId">The Id of the orderline</param>
            <param name="productId">The productId</param>
            <param name="action">The action (add, update, delete, deleteall)</param>
            <param name="itemCount">The amount of items to be added</param>
            <param name="variantsList">The variants ID's added to the pricing</param>
            <param name="fields">custom fields added to this orderline</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddPaymentProvider(System.Int32,System.String)">
            <summary>
                Add a payment provider to the order
            </summary>
            <param name="paymentProviderId">The Id of the Payment Provider Node</param>
            <param name="paymentProviderMethodId">The Id of the Paymetn Method</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddShippingProvider(System.Int32,System.String)">
            <summary>
                Add a shipping provider to the order
            </summary>
            <param name="shippingProviderId">The Id of the Shipping Provider Node</param>
            <param name="shippingProviderMethodId">The Id of the Shipping Provider Method</param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddCustomerFields(System.Collections.Generic.Dictionary{System.String,System.String},uWebshop.Common.CustomerDatatypes)">
            <summary>
                Add customer/shipping/extra fields to the order
            </summary>
            <param name="fields"></param>
            <param name="customerDataType"></param>
        </member>
        <member name="M:uWebshop.Domain.OrderInfo.AddCoupon(System.String)">
            <summary>
                Add coupon to the order
            </summary>
            <param name="couponCode"></param>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.BeforeOrderUpdated">
            <summary>
            Occurs when [before order updated].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.AfterOrderUpdated">
            <summary>
            Occurs when [after order updated].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.BeforeStatusChanged">
            <summary>
            Occurs when [before status changed].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.AfterStatusChanged">
            <summary>
            Occurs when [after status changed].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.BeforeOrderLineCreated">
            <summary>
            Occurs when [before order line created].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.AfterOrderLineCreated">
            <summary>
            Occurs when [after order line created].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.BeforeOrderLineUpdated">
            <summary>
            Occurs when [before order line updated].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.AfterOrderLineUpdated">
            <summary>
            Occurs when [after order line updated].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.BeforeOrderLineDeleted">
            <summary>
            Occurs when [before order line deleted].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.AfterOrderLineDeleted">
            <summary>
            Occurs when [after order line deleted].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.OrderPaidChanged">
            <summary>
            Occurs when [order paid changed].
            </summary>
        </member>
        <member name="E:uWebshop.Domain.OrderInfo.OrderLoaded">
            <summary>
            Occurs when [order loaded].
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.VatCalculationStrategy">
            <summary>
            Gets the vat calculation strategy.
            </summary>
            <value>
            The vat calculation strategy.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderPriceInCents">
            <summary>
            Gets the payment provider costs of the order
            </summary>
            <value>
            The payment provider price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.StoreInfo">
            <summary>
            The store information
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.Localization">
            <summary>
            Gets the localization.
            </summary>
            <value>
            The localization.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.Name">
            <summary>
            Gets the name given to this order.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.Status">
            <summary>
            Gets the status of the order
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderNodeId">
            <summary>
                Returns the ID of the order document node when it is created
                if not this is 0
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ConfirmDate">
            <summary>
                Gets the unique orderdate for the order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.Paid">
            <summary>
            Gets or sets the paid.
            </summary>
            <value>
            The paid.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.TermsAccepted">
            <summary>
            Gets or sets a value indicating whether [terms accepted].
            </summary>
            <value>
              <c>true</c> if [terms accepted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.StockUpdated">
            <summary>
                Is the stock updated for this order?
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaidDate">
            <summary>
            Gets or sets the paid date.
            </summary>
            <value>
            The paid date.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.CouponCodes">
            <summary>
                Gets a list with the coupons of the order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.AppliedDiscountsInformation">
            <summary>
            Gets or sets the applied discounts information.
            </summary>
            <value>
            The applied discounts information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ChargedShippingCosts">
            <summary>
            Gets or sets the charged shipping costs.
            </summary>
            <value>
            The charged shipping costs.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentCosts">
            <summary>
            Gets or sets the payment costs.
            </summary>
            <value>
            The payment costs.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineTotal">
            <summary>
            Gets or sets the order line total.
            </summary>
            <value>
            The order line total.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingCostsMightBeOutdated">
            <summary>
                Are shippingcosts still up to date?
                TRUE = shipping costs needs to be updated
                FALSE = shipping costs are correct!
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderDiscounts">
            <summary>
            Gets the order discounts.
            </summary>
            <value>
            The order discounts.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.IsDiscounted">
            <summary>
                Is this order discounted?
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.VATCharged">
            <summary>
            Gets or sets a value indicating whether [vat charged].
            </summary>
            <value>
              <c>true</c> if [vat charged]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ChargedAmountInCents">
            <summary>
            Gets or sets the charged amount information cents.
            </summary>
            <value>
            The charged amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderValidationErrors">
            <summary>
            Gets or sets the order validation errors.
            </summary>
            <value>
            The order validation errors.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.RegionalVatInCents">
            <summary>
            Gets or sets the regional vat information cents.
            </summary>
            <value>
            The regional vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.TotalVatInCents">
            <summary>
            Gets or sets the total vat information cents.
            </summary>
            <value>
            The total vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderTotalInCents">
            <summary>
            Gets or sets the order total in cents.
            </summary>
            <value>
            The order total in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderTotalWithoutPaymentInCents">
            <summary>
            Gets the order total without payment in cents.
            </summary>
            <value>
            The order total without payment in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.GrandtotalWithoutVatInCents">
            <summary>
            Gets or sets the grandtotal without vat information cents.
            </summary>
            <value>
            The grandtotal without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.GrandtotalInCents">
            <summary>
            Gets or sets the grandtotal information cents.
            </summary>
            <value>
            The grandtotal information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.VatTotal">
            <summary>
            Gets or sets the vat total in cents.
            </summary>
            <value>
            The vat total in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.VatTotalInCents">
            <summary>
            Gets or sets the vat total in cents.
            </summary>
            <value>
            The vat total in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineTotalInCents">
            <summary>
            Gets or sets the order line total information cents.
            </summary>
            <value>
            The order line total information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DatabaseId">
            <summary>
            Gets or sets the database unique identifier.
            </summary>
            <value>
            The database unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLines">
            <summary>
                Gets a list with the orderlines of the order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PricesAreIncludingVAT">
            <summary>
            Gets or sets a value indicating whether the prices are including vat.
            </summary>
            <value>
            <c>true</c> if the prices are including vat; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.CustomerEmail">
            <summary>
            Gets or sets the customer email.
            </summary>
            <value>
            The customer email.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.CustomerLastName">
            <summary>
            Gets or sets the last name of the customer.
            </summary>
            <value>
            The last name of the customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.CustomerFirstName">
            <summary>
            Gets or sets the first name of the customer.
            </summary>
            <value>
            The first name of the customer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.CustomerCountry">
            <summary>
            Gets or sets the customer country.
            </summary>
            <value>
            The customer country.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.Grandtotal">
            <summary>
                Gets the total amount of the order, including shippingcosts, including paymentcosts: including Vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineWithVatTotal">
            <summary>
                Gets the total of all the orderlines
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineTotalWithVat">
            <summary>
                Gets the total of all the orderlines
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineWithoutVatTotal">
            <summary>
                Gets the total of all the orderlines without VAT
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineTotalWithoutVat">
            <summary>
                Gets the total of all the orderlines without VAT
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.GrandtotalWithoutVat">
            <summary>
                Gets the total amount of the order, including shippingcosts, including paymentcosts: excluding Vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.TotalVat">
            <summary>
                Gets the total tax of the order, excluding shippingcosts
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingProviderVatAmount">
            <summary>
                The shipping vat amount of this order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingProviderCostsWithoutVat">
            <summary>
                The shipping provider costs of this order EXCLUDING Vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingProviderCostsWithVat">
            <summary>
                The shipping provider costs of this order INCLUDING Vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderVatAmount">
            <summary>
                the payment provider vat amount
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderCostsWithoutVat">
            <summary>
                the payment provider costs EXCLUDING vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderCostsWithVat">
            <summary>
                the payment provider costs INCLUDING vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DiscountAmount">
            <summary>
            Gets or sets the discount amount.
            </summary>
            <value>
            The discount amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DiscountAmountWithVat">
            <summary>
            Gets or sets the discount amount with vat.
            </summary>
            <value>
            The discount amount with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DiscountAmountWithoutVat">
            <summary>
            Gets or sets the discount amount without vat.
            </summary>
            <value>
            The discount amount without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.RegionalVat">
            <summary>
                Gets the regional vat for this order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.Subtotal">
            <summary>
                Gets the subtotal of the order
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ChargedAmount">
            <summary>
            Gets or sets the charged amount.
            </summary>
            <value>
            The charged amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DiscountAmountWithVatInCents">
            <summary>
            Gets or sets the discount amount with vat information cents.
            </summary>
            <value>
            The discount amount with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DiscountAmountWithoutVatInCents">
            <summary>
            Gets or sets the discount amount without vat information cents.
            </summary>
            <value>
            The discount amount without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineTotalWithVatInCents">
            <summary>
                Gets the total of all the orderlines in cents with VAT
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.SubtotalInCents">
            <summary>
                Gets the subtotal (orderlines + shipping + payment including discounts
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.OrderLineTotalWithoutVatInCents">
            <summary>
                Gets the total of all the orderlines in cents without VAT
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderCostsWithoutVatInCents">
            <summary>
            Gets or sets the payment provider costs without vat information cents.
            </summary>
            <value>
            The payment provider costs without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderCostsWithVatInCents">
            <summary>
            Gets or sets the payment provider costs with vat information cents.
            </summary>
            <value>
            The payment provider costs with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingProviderCostsWithoutVatInCents">
            <summary>
            Gets or sets the shipping provider costs without vat information cents.
            </summary>
            <value>
            The shipping provider costs without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingProviderCostsWithVatInCents">
            <summary>
            Gets or sets the shipping provider costs with vat information cents.
            </summary>
            <value>
            The shipping provider costs with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ActiveShippingProviderAmountInCents">
            <summary>
                The Active shipping provider amount without Vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.ShippingProviderVatAmountInCents">
            <summary>
            Gets or sets the shipping provider vat amount information cents.
            </summary>
            <value>
            The shipping provider vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.AverageOrderVatPercentage">
            <summary>
            Gets the average order vat percentage.
            </summary>
            <value>
            The average order vat percentage.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.PaymentProviderVatAmountInCents">
            <summary>
            the payment provider vat percentage
            </summary>
            <value>
            The payment provider vat amount in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.DiscountAmountInCents">
            <summary>
            The total discount amount over the order
            </summary>
            <value>
            The discount amount in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderInfo.CreatedInTestMode">
            <summary>
            Gets or sets a value indicating whether [created information test mode].
            </summary>
            <value>
            <c>true</c> if [created information test mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.AfterOrderLineCreatedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.AfterOrderLineCreatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.AfterOrderLineDeletedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.AfterOrderLineDeletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.AfterOrderLineUpdatedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.AfterOrderLineUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.AfterOrderStatusChangedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.AfterOrderStatusChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.AfterOrderUpdatedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.AfterOrderUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.BeforeOrderLineCreatedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.BeforeOrderLineCreatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.BeforeOrderLineDeletedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.BeforeOrderLineDeletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.BeforeOrderLineUpdatedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.BeforeOrderLineUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.BeforeOrderStatusChangedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.BeforeOrderStatusChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.BeforeOrderUpdatedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.BeforeOrderUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.OrderLoadedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="T:uWebshop.Domain.OrderInfo.OrderPaidChangedEventHandler">
            <summary>
            
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="e">The <see cref="T:uWebshop.Domain.OrderPaidChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.CustomOrderValidation.condition">
            <summary>
            The condition
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderInfo.CustomOrderValidation.errorDictionaryItem">
            <summary>
            The error dictionary item
            </summary>
        </member>
        <member name="T:uWebshop.Domain.OrderPaidChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderPaidChangedEventArgs.OrderInfo">
            <summary>
            Gets or sets the order information.
            </summary>
            <value>
            The order information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderPaidChangedEventArgs.Paid">
            <summary>
            Gets or sets a value indicating whether [paid].
            </summary>
            <value>
              <c>true</c> if [paid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BeforeOrderStatusChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderStatusChangedEventArgs.OrderInfo">
            <summary>
            Gets or sets the order information.
            </summary>
            <value>
            The order information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderStatusChangedEventArgs.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
            <value>
            The order status.
            </value>
        </member>
        <member name="T:uWebshop.Domain.AfterOrderStatusChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderStatusChangedEventArgs.OrderInfo">
            <summary>
            Gets or sets the order information.
            </summary>
            <value>
            The order information.
            </value>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderStatusChangedEventArgs.OrderStatus">
            <summary>
            Gets or sets the order status.
            </summary>
            <value>
            The order status.
            </value>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderStatusChangedEventArgs.SendEmails">
            <summary>
            Gets or sets a value indicating whether [send emails].
            </summary>
            <value>
              <c>true</c> if [send emails]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BeforeOrderLineCreatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderLineCreatedEventArgs.OrderLine">
            <summary>
            Gets or sets the order line.
            </summary>
            <value>
            The order line.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderLineCreatedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether [cancel].
            </summary>
            <value>
              <c>true</c> if [cancel]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.AfterOrderLineCreatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderLineCreatedEventArgs.OrderLine">
            <summary>
            Gets or sets the order line.
            </summary>
            <value>
            The order line.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BeforeOrderLineUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderLineUpdatedEventArgs.OrderLine">
            <summary>
            Gets or sets the order line.
            </summary>
            <value>
            The order line.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderLineUpdatedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether [cancel].
            </summary>
            <value>
              <c>true</c> if [cancel]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.AfterOrderLineUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderLineUpdatedEventArgs.OrderLine">
            <summary>
            Gets or sets the order line.
            </summary>
            <value>
            The order line.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BeforeOrderLineDeletedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderLineDeletedEventArgs.OrderLine">
            <summary>
            Gets or sets the order line.
            </summary>
            <value>
            The order line.
            </value>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderLineDeletedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether [cancel].
            </summary>
            <value>
              <c>true</c> if [cancel]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.AfterOrderLineDeletedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderLineDeletedEventArgs.OrderLine">
            <summary>
            Gets or sets the order line.
            </summary>
            <value>
            The order line.
            </value>
        </member>
        <member name="T:uWebshop.Domain.BeforeOrderUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.BeforeOrderUpdatedEventArgs.OrderInfo">
            <summary>
            Gets or sets the order information.
            </summary>
            <value>
            The order information.
            </value>
        </member>
        <member name="T:uWebshop.Domain.AfterOrderUpdatedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.AfterOrderUpdatedEventArgs.OrderInfo">
            <summary>
            Gets or sets the order information.
            </summary>
            <value>
            The order information.
            </value>
        </member>
        <member name="T:uWebshop.Domain.OrderLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderLine.OrderLineId">
            <summary>
            The order line unique identifier
            </summary>
        </member>
        <member name="F:uWebshop.Domain.OrderLine.ProductInfo">
            <summary>
            The product information
            </summary>
        </member>
        <member name="M:uWebshop.Domain.OrderLine.#ctor(uWebshop.Domain.ProductInfo,uWebshop.Domain.Interfaces.IOrderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.OrderLine"/> class.
            </summary>
            <param name="productInfo">The product information.</param>
            <param name="order">The order.</param>
        </member>
        <member name="M:uWebshop.Domain.OrderLine.HasVariantWithId(System.Int32)">
            <summary>
            Determines whether [has variant with unique identifier] [the specified unique identifier].
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
            <value>
            The custom data.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderlineWeight">
            <summary>
            Gets or sets the orderline weight.
            </summary>
            <value>
            The orderline weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineWeight">
            <summary>
            Gets or sets the order line weight.
            </summary>
            <value>
            The order line weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.AmountInCents">
            <summary>
            Gets or sets the amount information cents.
            </summary>
            <value>
            The amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineAmountInCents">
            <summary>
            Gets or sets the order line amount information cents.
            </summary>
            <value>
            The order line amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderDiscountInCents">
            <summary>
            Gets or sets the discount in cents.
            </summary>
            <value>
            The discount in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.Vat">
            <summary>
            Orderline vat amount
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineVat">
            <summary>
            Orderline vat amount
            </summary>
            <value>
            The order line vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.VatAmountInCents">
            <summary>
            Gets or sets the vat amount information cents.
            </summary>
            <value>
            The vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineVatAmountInCents">
            <summary>
            Gets or sets the order line vat amount information cents.
            </summary>
            <value>
            The order line vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineVatAmountAfterOrderDiscountInCents">
            <summary>
            Gets or sets the order line vat amount after order discount information cents.
            </summary>
            <value>
            The order line vat amount after order discount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.SubTotal">
            <summary>
                Orderline amount without vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineSubTotal">
            <summary>
                Orderline amount without vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.VatAmount">
            <summary>
                Orderline vat amount
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineVatAmount">
            <summary>
                Orderline vat amount
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.GrandTotal">
            <summary>
                Orderline amount with vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineGrandTotal">
            <summary>
                Orderline amount with vat
            </summary>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.SubTotalInCents">
            <summary>
            Gets or sets the sub total in cents.
            </summary>
            <value>
            The sub total in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineSubTotalInCents">
            <summary>
            Gets or sets the order line sub total information cents.
            </summary>
            <value>
            The order line sub total information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.GrandTotalInCents">
            <summary>
            Gets or sets the grand total in cents.
            </summary>
            <value>
            The grand total in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.OrderLine.OrderLineGrandTotalInCents">
            <summary>
            Gets or sets the order line grand total information cents.
            </summary>
            <value>
            The order line grand total information cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ProductInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ProductInfo.ProductVariants">
            <summary>
            The product variants
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ProductInfo.Id">
            <summary>
            The unique identifier
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ProductInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.ProductInfo"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ProductInfo.#ctor(uWebshop.Domain.OrderedProduct,uWebshop.Domain.Interfaces.IOrderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.ProductInfo"/> class.
            </summary>
            <param name="orderedProduct">The ordered product.</param>
            <param name="order">The order.</param>
        </member>
        <member name="M:uWebshop.Domain.ProductInfo.#ctor(uWebshop.Domain.Product,uWebshop.Domain.Interfaces.IOrderInfo,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.ProductInfo"/> class.
            </summary>
            <param name="product">The product.</param>
            <param name="order">The order.</param>
            <param name="itemCount">The item count.</param>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.OriginalId">
            <summary>
            Gets the original unique identifier.
            </summary>
            <value>
            The original unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Variants">
            <summary>
            Gets the variants.
            </summary>
            <value>
            The variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ChangedOn">
            <summary>
            Gets or sets the changed configuration.
            </summary>
            <value>
            The changed configuration.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.SKU">
            <summary>
            Gets or sets the sku.
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Tags">
            <summary>
            Gets or sets the tags.
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.OriginalPriceInCents">
            <summary>
            Gets or sets the original price information cents.
            </summary>
            <value>
            The original price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountAmountInCents">
            <summary>
            Gets or sets the discount amount information cents.
            </summary>
            <value>
            The discount amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountPercentage">
            <summary>
            Gets or sets the discount percentage.
            </summary>
            <value>
            The discount percentage.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountExcludingVariants">
            <summary>
            Gets or sets a value indicating whether [discount excluding variants].
            </summary>
            <value>
            <c>true</c> if [discount excluding variants]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.RangesString">
            <summary>
            Gets or sets the ranges string.
            </summary>
            <value>
            The ranges string.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DocTypeAlias">
            <summary>
            Gets or sets the document type alias.
            </summary>
            <value>
            The document type alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ItemCount">
            <summary>
            Gets or sets the item count.
            </summary>
            <value>
            The item count.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.CatalogProduct">
            <summary>
            Gets the product.
            </summary>
            <value>
            The product.
            </value>
            <exception cref="T:System.Exception">ProductInfo without ProductId</exception>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductRangePriceInCents">
            <summary>
            Gets or sets the product range price in cents.
            </summary>
            <value>
            The product range price in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.Ranges">
            <summary>
            Gets or sets the ranges.
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.IsDiscounted">
            <summary>
            Gets or sets a value indicating whether [is discounted].
            </summary>
            <value>
              <c>true</c> if [is discounted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.PriceInCents">
            <summary>
            Gets or sets the price information cents.
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.VatAmount">
            <summary>
            Gets or sets the vat amount.
            </summary>
            <value>
            The vat amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductPriceWithVat">
            <summary>
            Gets or sets the product price with vat.
            </summary>
            <value>
            The product price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductPriceWithoutVat">
            <summary>
            Gets or sets the product price without vat.
            </summary>
            <value>
            The product price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductRangePriceWithoutVat">
            <summary>
            Gets or sets the product range price without vat.
            </summary>
            <value>
            The product range price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductRangePriceWithVat">
            <summary>
            Gets or sets the product range price with vat.
            </summary>
            <value>
            The product range price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountedPriceWithVat">
            <summary>
            Gets or sets the discounted price with vat.
            </summary>
            <value>
            The discounted price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountedPriceWithoutVat">
            <summary>
            Gets or sets the discounted price without vat.
            </summary>
            <value>
            The discounted price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountedVat">
            <summary>
            Gets or sets the discounted vat.
            </summary>
            <value>
            The discounted vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.PriceWithVat">
            <summary>
            Gets or sets the price with vat.
            </summary>
            <value>
            The price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.PriceWithoutVat">
            <summary>
            Gets or sets the price without vat.
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductPriceWithVatInCents">
            <summary>
            Gets or sets the product price with vat information cents.
            </summary>
            <value>
            The product price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductPriceWithoutVariantsWithVatInCents">
            <summary>
            Gets or sets the product price without variants with vat information cents.
            </summary>
            <value>
            The product price without variants with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductPriceWithoutVatInCents">
            <summary>
            Gets or sets the product price without vat information cents.
            </summary>
            <value>
            The product price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductPriceWithoutVariantsWithoutVatInCents">
            <summary>
            Gets or sets the product price without variants without vat information cents.
            </summary>
            <value>
            The product price without variants without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductOriginalPriceWithVatInCents">
            <summary>
            Gets or sets the product original price with vat information cents.
            </summary>
            <value>
            The product original price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductOriginalPriceWithoutVatInCents">
            <summary>
            Gets or sets the product original price without vat information cents.
            </summary>
            <value>
            The product original price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductRangePriceWithVatInCents">
            <summary>
            Gets or sets the product range price with vat information cents.
            </summary>
            <value>
            The product range price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.ProductRangePriceWithoutVatInCents">
            <summary>
            Gets or sets the product range price without vat information cents.
            </summary>
            <value>
            The product range price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.PriceWithVatInCents">
            <summary>
            Gets or sets the price with vat information cents.
            </summary>
            <value>
            The price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.PriceWithoutVatInCents">
            <summary>
            Gets or sets the price without vat information cents.
            </summary>
            <value>
            The price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountedPriceWithVatInCents">
            <summary>
            Gets or sets the discounted price with vat information cents.
            </summary>
            <value>
            The discounted price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountedPriceWithoutVatInCents">
            <summary>
            Gets or sets the discounted price without vat information cents.
            </summary>
            <value>
            The discounted price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.DiscountedVatInCents">
            <summary>
            Gets or sets the discounted vat information cents.
            </summary>
            <value>
            The discounted vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductInfo.VatAmountInCents">
            <summary>
            Gets or sets the vat amount information cents.
            </summary>
            <value>
            The vat amount information cents.
            </value>
        </member>
        <member name="M:uWebshop.Domain.ProductVariantInfo.#ctor(uWebshop.Domain.OrderedProductVariant,uWebshop.Domain.ProductInfo,System.Decimal)">
            <summary>
            Set product variant info based on the variant already in the order
            </summary>
            <param name="productVariant">The product variant.</param>
            <param name="product">The product.</param>
            <param name="productVat">The product vat.</param>
        </member>
        <member name="M:uWebshop.Domain.ProductVariantInfo.#ctor(uWebshop.Domain.ProductVariant,uWebshop.Domain.ProductInfo,System.Int32)">
            <summary>
            Set product variant info based on a product variant in the catalog
            </summary>
            <param name="productVariant">The product variant.</param>
            <param name="product">The product.</param>
            <param name="itemCount">The item count.</param>
        </member>
        <member name="T:uWebshop.Domain.PaymentProvider">
            <summary>
                Class representing a payment provider in Umbraco
            </summary>
        </member>
        <member name="F:uWebshop.Domain.PaymentProvider.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PaymentProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PaymentProvider"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PaymentProvider.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PaymentProvider"/> class.
            </summary>
            <param name="id">NodeId of the node</param>
        </member>
        <member name="M:uWebshop.Domain.PaymentProvider.GetPaymentProvider(System.Int32,System.String,System.String)">
            <summary>
            Gets the payment provider.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PaymentProviderRepositoryNodeAlias">
            <summary>
            The payment provider repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PaymentProviderSectionNodeAlias">
            <summary>
            The payment provider section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PaymentProviderZoneSectionNodeAlias">
            <summary>
            The payment provider zone section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.Title">
            <summary>
            Payment Provider Title
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.Description">
            <summary>
            Payment Provider Description
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.ImageId">
            <summary>
            Id of the Payment Provider Image
            </summary>
            <value>
            The image unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.Type">
            <summary>
            Gets a list with the payment provider types
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.Zones">
            <summary>
            Zones for this payment provider
            </summary>
            <value>
            The zone.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.SuccesNodeId">
            <summary>
            Gets or sets the succes node unique identifier.
            </summary>
            <value>
            The succes node unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.ErrorNodeId">
            <summary>
            Gets or sets the error node unique identifier.
            </summary>
            <value>
            The error node unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.TestMode">
            <summary>
            Provider in testmode?
            true = testmode enabled
            </summary>
            <value>
              <c>true</c> if [test mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.DLLName">
            <summary>
            Full .dll name of the Payment Provider
            </summary>
            <value>
            The name of the DLL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.Vat">
            <summary>
            VAT percentage for the payment provider
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.ControlNodeId">
            <summary>
            Gets or sets the control node unique identifier.
            </summary>
            <value>
            The control node unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PaymentProviderMethods">
            <summary>
            Gets a list of payment methods
            </summary>
            <value>
            The payment provider methods.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PriceInCents">
            <summary>
            Get the amountcost of the payment provider
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.VatAmountInCents">
            <summary>
            Gets or sets the vat amount information cents.
            </summary>
            <value>
            The vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PriceWithoutVatInCents">
            <summary>
            Shipping Provider Amount EXCLUDING Vat
            </summary>
            <value>
            The price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentProvider.PriceWithVatInCents">
            <summary>
            Shipping Provider Amount INCLUDING Vat
            </summary>
            <value>
            The price with vat information cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.PaymentRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.PaymentRequest.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentRequest.ParametersAsString">
            <summary>
            Gets the parameters in string format.
            </summary>
            <value>
            The parameters in string format.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentRequest.ParameterRenderMethod">
            <summary>
            Gets or sets the parameter render method.
            </summary>
            <value>
            The parameter render method.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentRequest.PaymentUrlBase">
            <summary>
            Gets or sets the payment URL base.
            </summary>
            <value>
            The payment URL base.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentRequest.PaymentUrl">
            <summary>
            Gets the payment URL.
            </summary>
            <value>
            The payment URL.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ProductVariant">
            <summary>
            Variant of a product
            Ordered by group
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ProductVariant.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ProductVariant.PriceIncludingProduct(uWebshop.API.IProduct)">
            <summary>
            Gets the price including the product.
            </summary>
            <value>
            The price including the product.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPrice">
            <summary>
            Price of the product variant based on the price value
            !NO VAT RULES APPLIED!
            </summary>
            <value>
            The original price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceIncludingProductPriceWithVat">
            <summary>
            Price of the product + this product variant INCLUDING Vat
            </summary>
            <value>
            The price including product price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceIncludingProductPriceWithVat">
            <summary>
            Gets or sets the original price including product price with vat.
            </summary>
            <value>
            The original price including product price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceIncludingProductPriceWithoutVat">
            <summary>
            Price of the product + this product variant EXCLUDING Vat
            </summary>
            <value>
            The price including product price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceIncludingProductPriceWithoutVat">
            <summary>
            Gets or sets the original price including product price without vat.
            </summary>
            <value>
            The original price including product price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceWithVat">
            <summary>
            Gets or sets the price with vat.
            </summary>
            <value>
            The price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceWithoutVat">
            <summary>
            Gets or sets the price without vat.
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceIncludingProductPriceWithVatInCents">
            <summary>
            Price of the product + this product variant INCLUDING Vat
            </summary>
            <value>
            The price including product price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceIncludingProductPriceWithVatInCents">
            <summary>
            Gets or sets the original price including product price with vat information cents.
            </summary>
            <value>
            The original price including product price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceIncludingProductPriceWithoutVatInCents">
            <summary>
            Price of the product + this product variant EXCLUDING Vat
            </summary>
            <value>
            The price including product price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceIncludingProductPriceWithoutVatInCents">
            <summary>
            Gets or sets the original price including product price without vat information cents.
            </summary>
            <value>
            The original price including product price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedVatAmount">
            <summary>
            The discounted tax amount
            </summary>
            <value>
            The discounted vat amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalVatAmount">
            <summary>
            Tax amount
            </summary>
            <value>
            The original vat amount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedPriceWithVat">
            <summary>
            The discounted price with tax
            </summary>
            <value>
            The discounted price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedPriceWithoutVat">
            <summary>
            Gets or sets the discounted price without vat.
            </summary>
            <value>
            The discounted price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceWithoutVat">
            <summary>
            The price of the pricing without VAT
            </summary>
            <value>
            The original price without vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceWithVat">
            <summary>
            The price of the pricing with VAT
            </summary>
            <value>
            The original price with vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalVatAmountInCents">
            <summary>
            Tax amount
            </summary>
            <value>
            The original vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedVatAmountInCents">
            <summary>
            The discounted tax amount
            </summary>
            <value>
            The discounted vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedPriceWithVatInCents">
            <summary>
            Gets or sets the discounted price with vat information cents.
            </summary>
            <value>
            The discounted price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedPriceWithoutVatInCents">
            <summary>
            Gets or sets the discounted price without vat information cents.
            </summary>
            <value>
            The discounted price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceWithVatInCents">
            <summary>
            Gets or sets the price with vat information cents.
            </summary>
            <value>
            The price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceWithoutVatInCents">
            <summary>
            Gets or sets the price without vat information cents.
            </summary>
            <value>
            The price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceWithoutVatInCents">
            <summary>
            The price of the pricing without VAT
            </summary>
            <value>
            The original price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OriginalPriceWithVatInCents">
            <summary>
            Gets or sets the original price with vat information cents.
            </summary>
            <value>
            The original price with vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Orderable">
            <summary>
            Is this product variant orderable:
            stock should be higher then 0
            if stock is lower then 0, but backorder is enabled
            if the stockstatus is disabled
            </summary>
            <value>
              <c>true</c> if [orderable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PricingVariantGroup">
            <summary>
            The group the variant is in
            </summary>
            <value>
            The pricing variant group.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.DiscountedPriceInCents">
            <summary>
            Gets or sets the discounted price information cents.
            </summary>
            <value>
            The discounted price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.ProductVariantDiscount">
            <summary>
            Gets the sale of the pricing
            </summary>
            <value>
            The product variant discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.IsDiscounted">
            <summary>
            Returns if the pricing is discounted
            </summary>
            <value>
              <c>true</c> if [is discounted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Vat">
            <summary>
            Gets or sets the vat.
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Product">
            <summary>
            Gets the product of the variant
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Title">
            <summary>
            Gets the title of the content
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.SKU">
            <summary>
            ProductVariant SKU
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Group">
            <summary>
            Gets or sets the group.
            </summary>
            <value>
            The group.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.RequiredVariant">
            <summary>
            Gets or sets a value indicating whether [required variant].
            </summary>
            <value>
              <c>true</c> if [required variant]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Required">
            <summary>
            Gets or sets a value indicating whether [required variant].
            </summary>
            <value>
              <c>true</c> if [required variant]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Disabled">
            <summary>
            Is this content enabled?
            </summary>
            <value>
              <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Description">
            <summary>
            Gets the long description of the content
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Length">
            <summary>
            Length of the product
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Width">
            <summary>
            Width of the product
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Height">
            <summary>
            Height of the product
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Weight">
            <summary>
            Weight of the product
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.PriceInCents">
            <summary>
            Gets or sets the price information cents.
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Ranges">
            <summary>
            Ranges from the range data type
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.Stock">
            <summary>
            Gets the stock of the variant
            </summary>
            <value>
            The stock.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.OrderCount">
            <summary>
            Gets the number of times this ProductVariant is ordered
            </summary>
            <value>
            The order count.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.StockStatus">
            <summary>
            The status of the stock
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [stock status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ProductVariant.BackorderStatus">
            <summary>
            The status of backorder
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [backorder status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Product">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Product.StockAlias">
            <summary>
            The stock alias
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Product.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Product.IsAlias(System.String)">
            <summary>
            Determines whether the specified node type alias is this alias.
            </summary>
            <param name="nodeTypeAlias">The node type alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Product.GetAllVariants">
            <summary>
            Gets all variants.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Product.NiceUrl">
            <summary>
            The url for this product
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Product.NiceUrl(System.String)">
            <summary>
            The url for this product based on the current store
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Product.NiceUrl(System.Boolean,System.String,System.String)">
            <summary>
            The url for this product based on the current store
            </summary>
            <param name="getCanonicalUrl">if set to <c>true</c> get the canonical URL.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Product.FullLocalizedUrl(System.String)">
            <summary>
            Fulls the localized URL.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Product.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:uWebshop.Domain.Product.PricesIncludingVat">
            <summary>
            Gets a value indicating whether prices are including vat.
            </summary>
            <value>
            <c>true</c> if prices are including vat; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.HasCategories">
            <summary>
            Gets or sets a value indicating whether this product has extra categories set.
            </summary>
            <value>
            <c>true</c> if this product has extra categories set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.SKU">
            <summary>
            Product Number
            </summary>
            <value>
            The sku.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Tags">
            <summary>
            Gets the tags of the product
            </summary>
            <value>
            The tags.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Categories">
            <summary>
            Gets the category where the product is part of
            </summary>
            <value>
            The categories.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Images">
            <summary>
                List of images of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Product.Files">
            <summary>
                List of files of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Product.Length">
            <summary>
                Length of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Product.Width">
            <summary>
                Width of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Product.Height">
            <summary>
                Height of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Product.Weight">
            <summary>
                Weight of the product
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Product.OriginalPriceInCents">
            <summary>
            Gets or sets the original price in cents.
            </summary>
            <value>
            The original price in cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Ranges">
            <summary>
            Ranges from the range data type
            </summary>
            <value>
            The ranges.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Vat">
            <summary>
            The taxpercentage of the pricing
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Stock">
            <summary>
            Stock count
            </summary>
            <value>
            The stock.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.TotalItemsOrdered">
            <summary>
            Number of times this item was ordered
            </summary>
            <value>
            The total items ordered.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.OrderCount">
            <summary>
            Gets the number of times this Product is ordered
            </summary>
            <value>
            The order count.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.StockStatus">
            <summary>
            The status of the stock
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [stock status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.BackorderStatus">
            <summary>
            The status of backorder
            True = enabled
            False = disabled
            </summary>
            <value>
              <c>true</c> if [backorder status]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.UseVariantStock">
            <summary>
            Gets or sets a value indicating whether [use variant stock].
            </summary>
            <value>
              <c>true</c> if [use variant stock]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Variants">
            <summary>
            Gets or sets the variants.
            </summary>
            <value>
            The variants.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.ProductDiscount">
            <summary>
            Gets the sale of the pricing
            </summary>
            <value>
            The product discount.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.ProductVariantGroups">
            <summary>
            The groups with variants for this product
            </summary>
            <value>
            The product variant groups.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.VariantGroups">
            <summary>
            The groups with variants for this product
            </summary>
            <value>
            The product variant groups.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Orderable">
            <summary>
            Is this product orderable
            stock should be higher then 0
            if stock is lower then 0, but backorder is enabled
            if the stockstatus is disabled
            if UseVariantStock and product has variants and all variants can be ordered
            </summary>
            <value>
              <c>true</c> if [orderable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Price">
            <summary>
            Gets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.IsDiscounted">
            <summary>
            Returns if the pricing is discounted
            </summary>
            <value>
              <c>true</c> if [is discounted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.LocalizedUrl">
            <summary>
            Gets the localized URL.
            </summary>
            <value>
            The localized URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.UrlName">
            <summary>
            The localized URL of the product
            By default (ID-URL)
            can be configured in the web.config
            </summary>
            <value>
            The name of the URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.Url">
            <summary>
            The url for this product based on the current store
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Product.PriceWithoutVat">
            <summary>
            The active price of the item without tax
            Gives the discounted price when the pricing is discounted
            Gives the normal price when the pricing isn't discounted
            </summary>
            <value>
            The price without vat.
            </value>
        </member>
        <member name="T:uWebshop.Domain.ShippingProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:uWebshop.Domain.ShippingProvider.NodeAlias">
            <summary>
            The node alias
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ShippingProvider.IsApplicableToOrder(uWebshop.Domain.OrderInfo)">
            <summary>
            Determines whether [is applicable automatic order] [the specified order information].
            </summary>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.ShippingProvider.LoadShippingMethods">
            <summary>
            Loads the shipping methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.ShippingProvider.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.ShippingProviderRepositoryNodeAlias">
            <summary>
            The shipping provider repository node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.ShippingProviderSectionNodeAlias">
            <summary>
            The shipping provider section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.ShippingProviderZoneSectionNodeAlias">
            <summary>
            The shipping provider zone section node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.Title">
            <summary>
            Payment Provider Title
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.Description">
            <summary>
            Payment Provider Description
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.ImageId">
            <summary>
            Id of the Shipping Provider Image
            </summary>
            <value>
            The image unique identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.Type">
            <summary>
            The type of shipping provider
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.TypeOfRange">
            <summary>
            Get the rangetype for the shipping provider
            </summary>
            <value>
            The type of range.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.RangeFrom">
            <summary>
            Get the range start point for this shipping provider
            </summary>
            <value>
            The range from.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.RangeTo">
            <summary>
            Get the range endpoint of this shipping provider
            </summary>
            <value>
            The range automatic.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.Overrule">
            <summary>
            Check if the shipping provider should overrule all others
            This can be used to set free shipping even if there is weight in the basket.
            </summary>
            <value>
              <c>true</c> if [overrule]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.Zone">
            <summary>
            Zones for this payment provider
            </summary>
            <value>
            The zone.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.TestMode">
            <summary>
            Provider in testmode?
            true = testmode enabled
            </summary>
            <value>
              <c>true</c> if [test mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.PriceInCents">
            <summary>
            Get the amountcost of the shipping provider
            </summary>
            <value>
            The price information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.DLLName">
            <summary>
            Full filename of the shippping provider DLL;
            </summary>
            <value>
            The name of the DLL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.Vat">
            <summary>
            Vat percentage for this shipping provider
            </summary>
            <value>
            The vat.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.VatAmountInCents">
            <summary>
            Gets or sets the vat amount information cents.
            </summary>
            <value>
            The vat amount information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.ShippingProviderMethods">
            <summary>
            Gets a list of shipping methods
            </summary>
            <value>
            The shipping provider methods.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.PriceWithoutVatInCents">
            <summary>
            Shipping Provider Amount EXCLUDING Vat
            </summary>
            <value>
            The price without vat information cents.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingProvider.PriceWithVatInCents">
            <summary>
            Shipping Provider Amount INCLUDING Vat
            </summary>
            <value>
            The price with vat information cents.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Zone">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Zone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.Zone"/> class.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Zone.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.Zone"/> class.
            </summary>
            <param name="id">NodeId of the node</param>
        </member>
        <member name="P:uWebshop.Domain.Zone.PaymentZoneNodeAlias">
            <summary>
            The payment zone node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Zone.ShippingZoneNodeAlias">
            <summary>
            The shipping zone node alias
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Zone.CountryCodes">
            <summary>
                Get the countrycodes of the zone
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Zone.ShippingProviders">
            <summary>
                Get the shippingproviders of the zone
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Zone.PaymentProviders">
            <summary>
                Get the paymentproviders for the zone
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPaymentRequestHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentRequestHandler.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentRequestHandler.CreatePaymentRequest(uWebshop.Domain.OrderInfo)">
            <summary>
            Creates the payment request.
            </summary>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentRequestHandler.GetPaymentUrl(uWebshop.Domain.OrderInfo)">
            <summary>
            Gets the payment URL.
            </summary>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IPaymentResponseHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentResponseHandler.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IPaymentResponseHandler.HandlePaymentResponse(uWebshop.Domain.PaymentProvider)">
            <summary>
            Handles the payment response.
            </summary>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.ExtensionMethods">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ExtensionMethods.ToLogString(System.Exception,System.Boolean,System.String)">
            <summary>
              <para>Creates a log-string from the Exception.</para>
              <para>
            The result includes the stacktrace, innerexception et cetera, separated by
              <seealso cref="P:System.Environment.NewLine"/>.
              </para>
            </summary>
            <param name="ex">The exception to create the string from.</param>
            <param name="printTrace">if set to <c>true</c> [print trace].</param>
            <param name="additionalMessage">Additional message to place at the top of the string, maybe be empty or null.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.ExtensionMethods.ToLogString(System.Exception,System.Text.StringBuilder)">
            <summary>
            Creates the log string.
            </summary>
            <param name="ex">The executable.</param>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:uWebshop.Domain.ExtensionMethods.GetAdjustedPrice(uWebshop.Domain.Interfaces.IProductDiscount,System.Int32)">
            <summary>
            Gets the adjusted price.
            </summary>
            <param name="discount">The discount.</param>
            <param name="priceBeforeDiscount">The price before discount.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Businesslogic.HandleObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Success">
            <summary>
            Gets or sets a value indicating whether [success].
            </summary>
            <value>
              <c>true</c> if [success]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Validated">
            <summary>
            Gets or sets a value indicating whether [validated].
            </summary>
            <value>
              <c>true</c> if [validated]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>
            The item.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.PostConfirmUrl">
            <summary>
            Gets or sets the ExternalURL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.HandleObject.Fields">
            <summary>
            Gets posted fields
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Businesslogic.BasketRequestHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.BasketRequestHandler.HandleuWebshopBasketRequest(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Handles the webshop basket request.
            </summary>
            <param name="requestParameters">The request parameters.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Businesslogic.BasketRequestHandler.HandleBasketRequest(System.Collections.Specialized.NameValueCollection,System.Uri)">
            <summary>
            Handles the webshop basket request.
            </summary>
            <param name="requestParameters">The request parameters.</param>
            <param name="rawRequestUrl">The raw request URL.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Businesslogic.BasketRequestHandler.Session">
            <summary>
            Gets the session.
            </summary>
            <value>
            The session.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Helpers.CryptographyHelper">
            <summary>
                Helper class with encryption related functions
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.CryptographyHelper.Encrypt(System.String)">
            <summary>
                Encrypts a string with Rijndael
            </summary>
            <param name="plainText">String to encrypt</param>
            <returns>Encrypted string</returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.CryptographyHelper.Decrypt(System.String)">
            <summary>
                Decrypts a Rijndael encrypted string
            </summary>
            <returns>Decrypted string</returns>
        </member>
        <member name="T:uWebshop.Domain.Helpers.DiscountHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DiscountHelper.GetProductDiscount(System.Int32,System.String,System.String)">
            <summary>
            Returns a single product discount of a product
            </summary>
            <param name="itemId">The item unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns>
            Sale
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DiscountHelper.GetOrderDiscounts(System.Guid)">
            <summary>
            Returns a single pricing discount of a product
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns>
            Sale
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DiscountHelper.GetDiscountValueForOrder(uWebshop.Domain.Interfaces.IOrderDiscount,uWebshop.Domain.OrderInfo)">
            <summary>
            Gets the discount value for order.
            </summary>
            <param name="discountOrder">The discount order.</param>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Helpers.EmailHelper">
            <summary>
                Helper class with e-mail related functions
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.EmailHelper.SendOrderEmailCustomer(System.Int32,uWebshop.Domain.OrderInfo,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
                Sent an order email based on the emailNode and orderinfo
            </summary>
            <param name="emailNodeId"></param>
            <param name="orderInfo"></param>
            <param name="xsltParameters"> </param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.EmailHelper.SendOrderEmailStore(System.Int32,uWebshop.Domain.OrderInfo,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Sends the order email store.
            </summary>
            <param name="emailNodeId">The email node unique identifier.</param>
            <param name="orderInfo">The order information.</param>
            <param name="xsltParameters">The XSLT parameters.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.EmailHelper.SendMemberEmailCustomer(System.Int32,uWebshop.Domain.Store,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Sends the member email customer.
            </summary>
            <param name="emailNodeId">The email node unique identifier.</param>
            <param name="currentStore">The current store.</param>
            <param name="loginName">Name of the login.</param>
            <param name="password">The password.</param>
            <param name="xsltParameters">The XSLT parameters.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.EmailHelper.ReplaceStrings(System.String,System.Xml.XmlDocument)">
            <summary>
            Replaces the strings.
            </summary>
            <param name="stringToReplace">The string automatic replace.</param>
            <param name="xmlDoc">The XML document.</param>
            <returns></returns>
        </member>
        <member name="E:uWebshop.Domain.Helpers.EmailHelper.BeforeSendEmail">
            <summary>
            Occurs just before an email is sent.
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Helpers.EmailHelper.BeforeSendEmailEventHandler">
            <summary>
            
            </summary>
            <param name="e">The <see cref="T:uWebshop.Domain.Helpers.EmailHelper.BeforeSendEmailEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:uWebshop.Domain.Helpers.EmailHelper.BeforeSendEmailEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Helpers.EmailHelper.BeforeSendEmailEventArgs.Order">
            <summary>
            Gets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Helpers.EmailHelper.BeforeSendEmailEventArgs.Email">
            <summary>
            Gets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Helpers.EmailHelper.IEmailModifier">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.EmailHelper.IEmailModifier.AddAttachment(System.String)">
            <summary>
            Adds the attachment.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="T:uWebshop.Domain.Helpers.InterfaceHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.InterfaceHelper.GetInterfaces``1">
            <summary>
            Gets the interfaces.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Helpers.PaymentRequestHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentRequestHandler.HandleuWebshopPaymentRequest(uWebshop.Domain.PaymentProvider)">
            <summary>
            Handles the uwebshop payment request.
            </summary>
            <param name="paymentProviderNodeId">The payment provider node unique identifier.</param>
            <exception cref="T:System.Exception">HandleuWebshopPaymentRequest paymentProvider.Name == null
            or
            HandleuWebshopPaymentRequest responsehandler == null:  + paymentProvider.Name</exception>
        </member>
        <member name="T:uWebshop.Domain.ShippingConfigHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.ShippingConfigHelper.#ctor(uWebshop.Domain.ShippingProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.ShippingConfigHelper"/> class.
            </summary>
            <param name="shippingProvider">The shipping provider.</param>
        </member>
        <member name="P:uWebshop.Domain.ShippingConfigHelper.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:uWebshop.Domain.ShippingConfigHelper.Settings">
            <summary>
            Gets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Helpers.ShippingProviderHelper">
            <summary>
            Helper class with payment provider related functions
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.GetAllShippingProvidersIncludingCustomProviders">
            <summary>
            Returns a list of all shippping providers
            </summary>
            <returns>
            List of shippping providers
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.GetAllShippingProviders(System.String,System.String)">
            <summary>
            Returns allt he shipping providers in the shop
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.AutoSelectShippingProvider(uWebshop.Domain.OrderInfo)">
            <summary>
                Add default shipping provider to an order. (the cheapest)
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.GetShippingZones(System.String)">
            <summary>
            Gets the shipping zones.
            </summary>
            <param name="countryCode">The country code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.GetShippingProvidersForOrder(System.Boolean)">
            <summary>
            Returns all shipping providers that match the current order
            </summary>
            <param name="useCountry">if set to <c>true</c> [use country].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.GetShippingProvidersForOrder(uWebshop.Domain.OrderInfo,System.Boolean,System.String,System.String)">
            <summary>
            Returns all shipping providers that match the current order
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="useCountry">Use the country information from the order and/or store</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.ShippingProviderHelper.GetShippingProvider(System.Int32,System.String,System.String)">
            <summary>
            Gets the shipping provider.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Helpers.StoreHelper">
            <summary>
                Helper class with language related functions
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Helpers.StoreHelper.AllStoresCacheKey">
            <summary>
            All stores cache key
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Helpers.StoreHelper.CurrentStoreAliasCacheKey">
            <summary>
            The current store alias cache key
            </summary>
        </member>
        <member name="F:uWebshop.Domain.Helpers.StoreHelper.CurrentStoreAliasUrlCacheKey">
            <summary>
            The current store alias URL cache key
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetCurrentStore">
            <summary>
            Get the current store
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetAllStores">
            <summary>
            Returns a list of all languages
            </summary>
            <returns>
            List of languages
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetByAlias(System.String)">
            <summary>
            Gets the store by alias.
            </summary>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetById(System.Int32,System.String)">
            <summary>
            Gets the store by unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetStoreAliasUrl">
            <summary>
            Gets the store alias URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetCurrentCulture">
            <summary>
            Get the number formatting for the current store
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetCultureByCurrencyCode(uWebshop.Domain.Store)">
            <summary>
            Get the culture based on the currency code of the store
            </summary>
            <param name="store">The store.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetLocalizedUrl(System.Int32,System.Int32)">
            <summary>
            Gets the localized URL.
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="categoryId">The category unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetNiceUrl(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Creates the Url for a catalog item by Id
            </summary>
            <param name="id">catalog item Id</param>
            <param name="categoryId">the Id of the category used to build the url. input 0 will use currentCategory.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
            If the categoryId is not in the categories list of the product, it will use the first category
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.RenameStore(System.String,System.String)">
            <summary>
            Renames the store.
            </summary>
            <param name="oldStoreAlias">The old store alias.</param>
            <param name="newStoreAlias">The new store alias.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.UnInstallStore(System.String)">
            <summary>
            Install a new uWebshop store
            </summary>
            <param name="storeAlias">the store alias to use</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetMultiStoreItem(System.Int32,System.String,System.String,System.String)">
            <summary>
            Gets the multi store item.
            </summary>
            <param name="contentId">The content unique identifier.</param>
            <param name="propertyAlias">The property alias.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetMultiStoreDisable(System.Int32)">
            <summary>
            Gets the multi store disable.
            </summary>
            <param name="contentId">The content unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetMultiStoreStock(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetProductsRecursive(System.Int32,System.String,System.String)">
            <summary>
            Returns all the products of the category, including any sublevel categories
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetProductsRecursive(uWebshop.Domain.Category)">
            <summary>
            Returns all the products of the category, including any sublevel categories
            </summary>
            <param name="category">The category.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetCategoriesRecursive(System.Int32,System.String)">
            <summary>
            Returns all the categories of the category, including any sublevel categories
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetAllCountries">
            <summary>
            Returns a list of all countries
            </summary>
            <returns>
            List of countries
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetAllCountries(System.String,System.String)">
            <summary>
            Returns a list of all countries in the provided storeAlias
            </summary>
            <param name="storeAlias">Alias of current store</param>
            <param name="currencyCode">The currency code.</param>
            <returns>
            List of countries
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetAllRegions">
            <summary>
            Returns a list of all regions
            </summary>
            <returns>
            List of countries
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetAllRegionsForStore(System.String)">
            <summary>
            Returns a list of all regions in the provided shopalias
            </summary>
            <param name="storeAlias">Alias of current language</param>
            <returns>
            List of countries
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetLocalization(System.String,System.String)">
            <summary>
            Gets the localization.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetLocalizationOrCurrent(System.String,System.String)">
            <summary>
            Gets the localization original current.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.StoreHelper.GetCurrencyCulture(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets the currency culture.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.Helpers.StoreHelper.StoreDependantDocumentTypeAliasList">
            <summary>
            List of all the default uWebshop document types
            </summary>
            <value>
            The store dependant document type alias list.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Helpers.StoreHelper.CurrentStoreAlias">
            <summary>
            Gets the current store alias.
            </summary>
            <value>
            The current store alias.
            </value>
        </member>
        <member name="P:uWebshop.Domain.Helpers.StoreHelper.CurrentLocalization">
            <summary>
            Gets the current localization.
            </summary>
            <value>
            The current localization.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Helpers.OrderHelper">
            <summary>
            Helper class with order related functions
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.SetOrderCookie(uWebshop.Domain.OrderInfo)">
            <summary>
            Sets the order cookie.
            </summary>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetCompletedOrderCookie">
            <summary>
            Get the completed order cookie.
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.SetCompletedOrderCookie(uWebshop.Domain.OrderInfo)">
            <summary>
            Sets the order cookie.
            </summary>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.RemoveOrderCookie(uWebshop.Domain.OrderInfo)">
            <summary>
            Removes the order cookie.
            </summary>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrder(System.Guid)">
            <summary>
            Get order based on the uniqueOrderId
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrder(System.String)">
            <summary>
            Get order based on the transaction Id of the payment provider
            </summary>
            <param name="transactionId">The transaction unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrder(System.Boolean)">
            <summary>
            Get Current Order based on the cookie value of the customer
            if status is NOT incomplete and NOT waiting for paymentprovider and NOT paid it means the order is in 'payment
            progress'
            action: create a new COPY of the current order so the customer can't change the original order.
            if status is NOT incomplete, and status is PAID or status is OfflinePayment, return null.
            </summary>
            <param name="overruleCopyOrderOnConfirmedOrder">if set to <c>true</c> don't make a new order when the current one is confirmed.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrder(uWebshop.Domain.OrderInfo,System.Boolean)">
            <summary>
            Get Current Order based on the given order. If there is no given order, try get orderInfo from cookie
            if status is NOT incomplete and NOT waiting for paymentprovider and NOT paid it means the order is in 'payment
            progress'
            action: create a new COPY of the current order so the customer can't change the original order.
            if status is NOT incomplete, and status is PAID or status is OfflinePayment, return null.
            </summary>
            <param name="orderInfo"></param>
            <param name="overruleCopyOrderOnConfirmedOrder">if set to <c>true</c> don't make a new order when the current one is confirmed.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrCreateOrder">
            <summary>
            Get Current Order based on the cookie value of the customer
            if status is NOT incopmlete and NOT waiting for paymentprovider and NOT paid it means the order is in 'payment
            progress'
            action: create a new COPY of the current order so the customer can't change the original order.
            if status is NOT incomplete, and status is PAID or status is OfflinePayment, create a new order
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrderXML(System.Guid)">
            <summary>
            Get order for current customer
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrdersForCustomer(System.Int32,System.String)">
            <summary>
            Returns all the orders from a customer (member) Id;
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrdersForCustomer(System.String,System.String)">
            <summary>
            Returns all the order from a customer (member) Login name;
            </summary>
            <param name="userName">Name of the login.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetAllOrders(System.String)">
            <summary>
            Gets all orders.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetTotalAmountUsingVatCheck">
            <summary>
            Check if VAT should be applied for this order
            </summary>
            <returns>
            The amount with or without vat
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetTotalAmountUsingVatCheck(System.Guid)">
            <summary>
            Check if VAT should be applied for this order
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns>
            The amount with or without vat
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetTotalAmountUsingVatCheckInCents(System.Guid)">
            <summary>
            Gets the total amount using vat check information cents.
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.CustomOrderLineValue(uWebshop.Domain.OrderInfo,System.Int32,System.String)">
            <summary>
            Returns customer orderline value from a specific order and orderline
            </summary>
            <param name="orderInfo">The order</param>
            <param name="orderLineId">Id of the orderline</param>
            <param name="alias">the fieldalias</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.CustomerInformationValue(uWebshop.Domain.OrderInfo,System.String)">
            <summary>
            Returns the value based
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ShippingInformationValue(uWebshop.Domain.OrderInfo,System.String)">
            <summary>
            Shippings the information value.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ExtraInformationValue(uWebshop.Domain.OrderInfo,System.String)">
            <summary>
            Gets the extra information value with given alias.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="alias">The alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.OrderContainsItem(uWebshop.Domain.OrderInfo,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Orders the contains item.
            </summary>
            <param name="orderinfo">The orderinfo.</param>
            <param name="itemIdsToCheck">The item ids automatic check.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetApplicableOrderLines(uWebshop.Domain.OrderInfo,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Gets the applicable order lines.
            </summary>
            <param name="orderinfo">The orderinfo.</param>
            <param name="itemIdsToCheck">The item ids automatic check.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.HandlePaymentRequest(uWebshop.Domain.OrderInfo,System.Int32)">
            <summary>
            Gets the redirect URL after confirmation.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="confirmedNodeId">The confirmed node unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.UpdateStock(uWebshop.Domain.OrderInfo)">
            <summary>
            Update the Stock of all products variants and discounts of an order
            </summary>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ReturnStock(uWebshop.Domain.OrderInfo)">
            <summary>
            Return the Stock of all products and variants and discounts of an order
            </summary>
            <param name="orderInfo">The order information.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.Orderable(uWebshop.Domain.OrderInfo)">
            <summary>
            Is the order orderable?
            </summary>
            <param name="orderinfo">The orderinfo.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.OrderContainsOutOfStockItems(System.Guid)">
            <summary>
            Check if the order contains items out of stock
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.CreateNewOrderFromExisting(uWebshop.Domain.OrderInfo)">
            <summary>
            Creates the new order from existing.
            </summary>
            <param name="orderInfoToCopyFrom">The order information automatic copy from.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.CreateOrder">
            <summary>
            Create Order, using the current store
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.OrderIdFromOrderIdCookie">
            <summary>
            Returns the order Guid based on the "OrderId" cookie of the customer
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.CreateOrder(uWebshop.Domain.Store)">
            <summary>
            Create Order
            </summary>
            <param name="store">The store.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ValidateOrder(uWebshop.Domain.OrderInfo)">
            <summary>
            Validates the order.
            </summary>
            <param name="orderInfo">The order information.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ValidateCustomer(uWebshop.Domain.OrderInfo,System.Boolean)">
            <summary>
            Validates the customer.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ValidateStock(uWebshop.Domain.OrderInfo,System.Boolean)">
            <summary>
            Validates the stock.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ValidateOrderLines(uWebshop.Domain.OrderInfo,System.Boolean)">
            <summary>
            Validates the order lines.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.ValidateCustomValidation(uWebshop.Domain.OrderInfo,System.Boolean)">
            <summary>
            Validates the custom validation.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="clearValidation">if set to <c>true</c> [clear validation].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrderInfoXML(System.Guid)">
            <summary>
            Get order for current customer
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrdersFromCustomer(System.Int32)">
            <summary>
            Get order based on the customer Id
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrdersFromCustomer(System.String)">
            <summary>
            Get order based on the customer Id
            </summary>
            <param name="customerUserName">The customer username</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.OrderHelper.GetOrCreateOrderInfo">
            <summary>
            Gets the original create order information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.PaymentConfigHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PaymentConfigHelper.#ctor(uWebshop.Domain.PaymentProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.PaymentConfigHelper"/> class.
            </summary>
            <param name="paymentProvider">The payment provider.</param>
        </member>
        <member name="M:uWebshop.Domain.PaymentConfigHelper.GetPaymentProviderConfig">
            <summary>
            Get the payment config file
            </summary>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.PaymentConfigHelper.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:uWebshop.Domain.PaymentConfigHelper.Settings">
            <summary>
            Gets the settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="T:uWebshop.Domain.PaymentConfigHelper.ConfigSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.PaymentConfigHelper.ConfigSettings.ContainsKey(System.String)">
            <summary>
            Determines whether the settings contain given key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.PaymentConfigHelper.ConfigSettings.Item(System.String)">
            <summary>
            Gets the setting with the specified key.
            </summary>
            <value>
            The setting>.
            </value>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:uWebshop.Domain.PaymentConfigHelper.ConfigSettings.Count">
            <summary>
            Gets the number of loaded settings.
            </summary>
        </member>
        <member name="T:uWebshop.Domain.Helpers.PaymentProviderHelper">
            <summary>
            Helper class with payment provider related functions
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetAllIPaymentProviders">
            <summary>
            Returns a list of all payment providers
            </summary>
            <returns>
            List of payment providers
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetAllPaymentProviders(System.String,System.String)">
            <summary>
            Gets all payment providers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetAllPaymentRequestHandlers">
            <summary>
            Returns a list of all payment providers
            </summary>
            <returns>
            List of payment request handlers
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetAllPaymentResponseHandlers">
            <summary>
            Returns a list of all payment providers
            </summary>
            <returns>
            List of payment response handlers
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetPaymentProvidersForOrder(System.Boolean)">
            <summary>
            Returns the paymentmethods available for the current order
            If the customer has not chosen a country yet, it will use the countrycode from the shop itself to return the
            providers.
            </summary>
            <param name="useCountry">if set to <c>true</c> [use country].</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetPaymentProvidersForOrder(uWebshop.Domain.OrderInfo,System.Boolean,uWebshop.Domain.Store)">
            <summary>
            Returns the paymentmethods available for the current order
            If the customer has not chosen a country yet, it will use the countrycode from the shop itself to return the
            providers.
            </summary>
            <param name="orderInfo">The order information.</param>
            <param name="useCountry">if set to <c>true</c> [use country].</param>
            <param name="store">The store.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetPaymentZones(System.String)">
            <summary>
            Gets the payment zones.
            </summary>
            <param name="countryCode">The country code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GenerateBaseUrl(System.Int32)">
            <summary>
            Generates the base URL.
            </summary>
            <param name="nodeId">The node unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GenerateBaseUrl">
            <summary>
            Generate the base Url to use for payment providers
            based on the currentNodeId or the current CMS node
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.Request(System.String)">
            <summary>
            Gets the request parameter with name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetUrlForContentWithId(System.Int32)">
            <summary>
            Gets the URL for content with unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderHelper.GetCurrentNodeId">
            <summary>
            Gets the current node unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Helpers.PaymentProviderExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderExtensions.SuccessUrl(uWebshop.Domain.PaymentProvider)">
            <summary>
            Successes the node URL.
            </summary>
            <param name="paymentProvider">The payment provider.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderExtensions.ErrorUrl(uWebshop.Domain.PaymentProvider)">
            <summary>
            Successes the node URL.
            </summary>
            <param name="paymentProvider">The payment provider.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:uWebshop.Domain.Helpers.PaymentProviderExtensions.ReportUrl(uWebshop.Domain.PaymentProvider)">
            <summary>
            Successes the node URL.
            </summary>
            <param name="paymentProvider">The payment provider.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:uWebshop.Domain.Helpers.VatCalculator">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.VatCalculator.WithoutVat(System.Int32,System.Decimal)">
            <summary>
            Without vat.
            </summary>
            <param name="withVat">The with vat.</param>
            <param name="vat">The vat.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.VatCalculator.WithVat(System.Int32,System.Decimal)">
            <summary>
            With vat.
            </summary>
            <param name="withoutVat">The without vat.</param>
            <param name="vat">The vat.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.VatCalculator.VatAmountFromWithoutVat(System.Int32,System.Decimal)">
            <summary>
            Vats the amount from without vat.
            </summary>
            <param name="withoutVat">The without vat.</param>
            <param name="vat">The vat.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.VatCalculator.VatAmountFromWithVat(System.Int32,System.Decimal)">
            <summary>
            Vats the amount from with vat.
            </summary>
            <param name="withVat">The with vat.</param>
            <param name="vat">The vat.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.VatCalculator.VatAmountFromOriginal(System.Boolean,System.Int32,System.Decimal)">
            <summary>
            Gets the vat amount from the original amount.
            </summary>
            <param name="originalIncludingVat">if set to <c>true</c> [original including vat].</param>
            <param name="original">The original.</param>
            <param name="vat">The vat.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IZoneService.GetAllPaymentZones(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Returns all the payment zones
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IZoneService.GetAllShippingZones(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Returns all the shipping zones
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IZoneService.GetByIdOrFallbackZone(System.Int32,uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Returns the zone matching with the id or the fallback zone (all countries) when not found
            </summary>
            <param name="id">The unique identifier.</param>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.UwebshopConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.UwebshopConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:uWebshop.Domain.UwebshopConfiguration"/> class.
            </summary>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.Current">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.ExamineIndexer">
            <summary>
            Gets the examine indexer.
            </summary>
            <value>
            The examine indexer.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.ShareBasketBetweenStores">
            <summary>
            Gets the setting indicating whether the basket is shared between all stores.
            </summary>
            <value>
            The setting indicating whether the basket is shared between all stores.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.PermanentRedirectOldCatalogUrls">
            <summary>
            Gets a value indicating whether [permanent redirect old catalog urls].
            </summary>
            <value>
            <c>true</c> if [permanent redirect old catalog urls]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.LegacyCategoryUrlIdentifier">
            <summary>
            Gets the legacy category URL identifier.
            </summary>
            <value>
            The legacy category URL identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.LegacyProductUrlIdentifier">
            <summary>
            Gets the legacy product URL identifier.
            </summary>
            <value>
            The legacy product URL identifier.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.CategoryUrl">
            <summary>
            Gets the category URL.
            </summary>
            <value>
            The category URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.ProductUrl">
            <summary>
            Gets the product URL.
            </summary>
            <value>
            The product URL.
            </value>
        </member>
        <member name="P:uWebshop.Domain.UwebshopConfiguration.ExamineSearcher">
            <summary>
            Gets the examine searcher.
            </summary>
            <value>
            The examine searcher.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IServiceFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IServiceFactory.Build``1">
            <summary>
            Builds this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Log">
            <summary>
            
            </summary>
        </member>
        <member name="P:uWebshop.Domain.Log.Instance">
            <summary>
            Gets the current logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="T:uWebshop.Domain.Interfaces.IOrderRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetOrderInfo(System.Guid)">
            <summary>
            Returns a single orderinfo
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns>
            Order
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.DetermineLastOrderId">
            <summary>
            Determines the last order unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetOrderInfoXML(System.Guid)">
            <summary>
            Returns a single orderinfo
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <returns>
            Order
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetOrderInfo(System.String)">
            <summary>
            Get the order based on the transaction ID returned from the Payment Provider
            </summary>
            <param name="transactionId">The transaction unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.SaveOrderInfo(uWebshop.Domain.OrderInfo)">
            <summary>
            Saves the order.
            </summary>
            <param name="orderInfo">The order.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetOrdersFromCustomer(System.Int32,System.String)">
            <summary>
            Gets the orders from customer.
            </summary>
            <param name="customerId">The customer unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetOrdersFromCustomer(System.String,System.String)">
            <summary>
            Get the orders based on the customer ID
            </summary>
            <param name="customerUsername">The customer username.</param>
            <param name="storeAlias">The store alias.</param>
            <returns>
            All the orders for the customer
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.SetOrderNumber(System.Guid,System.String,System.String,System.Int32)">
            <summary>
            Sets the order number.
            </summary>
            <param name="uniqueOrderId">The unique order unique identifier.</param>
            <param name="orderNumber">The order number.</param>
            <param name="alias">The alias.</param>
            <param name="id">The unique identifier.</param>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetHighestOrderNumber(System.Int32@)">
            <summary>
            Gets the highest order number.
            </summary>
            <param name="lastOrderReferenceNumber">The last order reference number.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.GetHighestOrderNumberForStore(System.String,System.Int32@)">
            <summary>
            Gets the highest order number for store.
            </summary>
            <param name="alias">The alias.</param>
            <param name="lastOrderReferenceNumber">The last order reference number.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.AssignNewOrderNumberToOrderSharedBasket(System.Int32,System.String,System.Int32)">
            <summary>
            Assigns the new order number automatic order shared basket.
            </summary>
            <param name="databaseId">The database unique identifier.</param>
            <param name="alias">The alias.</param>
            <param name="orderNumberStartNumber">The order number start number.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Interfaces.IOrderRepository.AssignNewOrderNumberToOrder(System.Int32,System.String,System.Int32)">
            <summary>
            Assigns the new order number automatic order.
            </summary>
            <param name="databaseId">The database unique identifier.</param>
            <param name="alias">The alias.</param>
            <param name="orderNumberStartNumber">The order number start number.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Helpers.DomainHelper">
            <summary>
            Helper class with domain related functions
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetAllCategories(System.Boolean,System.String,System.String)">
            <summary>
            Gets all categories.
            </summary>
            <param name="includeDisabled">if set to <c>true</c> include disabled categories.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetAllProducts(System.Boolean,System.String,System.String)">
            <summary>
            Returns a list of all products
            </summary>
            <param name="includeDisabled">if set to <c>true</c> [include disabled].</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns>
            List of products
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetAllProductVariants(System.Boolean,System.String,System.String)">
            <summary>
            Returns a list of all product variants
            </summary>
            <param name="includeDisabled">if set to <c>true</c> [include disabled].</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns>
            List of product variants
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetAllStores">
            <summary>
            Returns a list of all products
            </summary>
            <returns>
            List of products
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.StoreById(System.Int32)">
            <summary>
            Returns a list of all products
            </summary>
            <param name="id">The unique identifier.</param>
            <returns>
            List of products
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.ChangeStoreForCurrentRequest(uWebshop.Domain.Store)">
            <summary>
            Changes the store for current request.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetCategoryById(System.Int32)">
            <summary>
            Get a category by it's NodeId
            </summary>
            <param name="categoryId">NodeId of the category</param>
            <returns>
            Category Object
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetCategoryById(System.Int32,System.String,System.String)">
            <summary>
            Get a category by it's NodeId
            </summary>
            <param name="categoryId">NodeId of the category</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns>
            Category Object
            </returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetCategoryWithId(System.Int32)">
            <summary>
            Gets the category with unique identifier.
            </summary>
            <param name="id">The unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetRandomObjectsByAlias``1(System.String,System.Int32)">
            <summary>
            Get random object by nodeTypeAlias
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nodeTypeAlias">The node type alias.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetObjectsByAlias``1(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get object by nodeTypeAlias
            </summary>
            <typeparam name="T"></typeparam>
            <param name="nodeTypeAlias">The node type alias.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="startNodeId">The start node unique identifier.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetProducts(System.Int32)">
            <summary>
            Gets the products.
            </summary>
            <param name="categoryId">The category unique identifier.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.MultiStorePropertyAlias(System.String)">
            <summary>
                Convert the property to a multistore property usting the current store from the order or website
            </summary>
            <param name="propertyAlias"></param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.SerializeObjectToXmlString``1(``0)">
            <summary>
                Serialize an object to XMLString
            </summary>
            <param name="obj"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.DeserializeXmlStringToObject``1(System.String)">
            <summary>
            Deserialize XMLstring to Object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xmlString">The XML string.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetProductById(System.Int32,System.String,System.String)">
            <summary>
            Gets the product by unique identifier.
            </summary>
            <param name="productId">The product unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Helpers.DomainHelper.GetProductVariantById(System.Int32,System.String,System.String)">
            <summary>
            Gets the product variant by unique identifier.
            </summary>
            <param name="productVariantId">The product variant unique identifier.</param>
            <param name="storeAlias">The store alias.</param>
            <param name="currencyCode">The currency code.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Repositories.UwebshopApplicationCachedCountriesRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Repositories.UwebshopApplicationCachedCountriesRepository.GetAllCountries(uWebshop.Domain.Interfaces.ILocalization)">
            <summary>
            Gets all countries.
            </summary>
            <param name="localization">The localization.</param>
            <returns></returns>
        </member>
        <member name="M:uWebshop.Domain.Repositories.UwebshopApplicationCachedCountriesRepository.DotNETFrameworkFallback(System.String)">
            <summary>
            Dots the net framework fallback.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
        </member>
        <member name="T:uWebshop.Domain.Repositories.UwebshopApplicationCachedVATCountriesRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:uWebshop.Domain.Repositories.UwebshopApplicationCachedVATCountriesRepository.DotNETFrameworkFallback(System.String)">
            <summary>
            Dots the net framework fallback.
            </summary>
            <param name="storeAlias">The store alias.</param>
            <returns></returns>
            <exception cref="T:System.Exception">For VAT countries a configuration file named VATcountries.xml is required</exception>
        </member>
        <member name="P:uWebshop.Domain.Repositories.UwebshopApplicationCachedVATCountriesRepository.BaseXMLFileName">
            <summary>
            Gets the name of the base XML file.
            </summary>
            <value>
            The name of the base XML file.
            </value>
        </member>
        <member name="T:VATChecker.ViesVatCheckService">
            <summary>
                This class is a wrapper for the checkVAT webservice proxy which uses the synchron version
                of the check VAT method. The class adds a U character for Austrian VAT numbers if missing
            </summary>
            <remarks>
                This code was implemented by MasterSoft Software Solutions Ltd.
                Visit the <see href="http://www.mastersoft.at">MasterSoft website</see> for
                further information.
                <para>Dev: BGH -- Mag. (FH) Christian Kleinheinz</para>
            </remarks>
        </member>
        <member name="M:VATChecker.ViesVatCheckService.VATNumberValid(System.String,uWebshop.Domain.OrderInfo)">
            <summary>
                Check if a VAT number is valid
            </summary>
            <param name="number"></param>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="M:VATChecker.ViesVatCheckService.CheckVat">
            <summary>
                Check if the VAT number is valid or not
            </summary>
            <returns>True if the VAT number could be validated otherwise false</returns>
        </member>
        <member name="M:VATChecker.ViesVatCheckService.GetCountryCodeFromOrderIfNotIncludedInVatNumber(uWebshop.Domain.OrderInfo)">
            <summary>
            Gets the country code from order difference not included information vat number.
            </summary>
            <param name="order">The order.</param>
        </member>
        <member name="M:VATChecker.ViesVatCheckService.ExtractCountryCodeFromVatNumber(System.String)">
            <summary>
            Extracts the country code from vat number.
            </summary>
            <param name="number">The number.</param>
        </member>
        <member name="P:VATChecker.ViesVatCheckService.VATNumber">
            <summary>
                The VAT number to check for
            </summary>
        </member>
        <member name="P:VATChecker.ViesVatCheckService.CountryCode">
            <summary>
                The country code of the uid to check
            </summary>
            <remarks>
                This parameter can be one of these country codes
                country --> code to use
                ************************************************
                Austria --> AT
                Belgium --> BE
                Bulgaria --> BG
                Cyprus --> CY
                Czech Republic --> CZ
                Germany --> DE
                Denmark --> DK
                Estonia EE
                Greece EL
                Spain ES
                Finland FI
                France FR
                United Kingdom GB
                Hungary HU
                Ireland IE
                Italy IT
                Lithuania LT
                Luxembourg LU
                Malta MT
                The Netherlands NL
                Poland PL
                Portugal PT
                Romania RO
                Sweden SE
                Slovenia SI
                Slovakia SK
            </remarks>
        </member>
        <member name="P:VATChecker.ViesVatCheckService.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:VATChecker.ViesVatCheckService.IsValid">
            <summary>
            Gets or sets a value indicating whether [is valid].
            </summary>
            <value>
              <c>true</c> if [is valid]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:VATChecker.ViesVatCheckService.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:VATChecker.ViesVatCheckService.RetDate">
            <summary>
            Gets or sets the ret date.
            </summary>
            <value>
            The ret date.
            </value>
        </member>
    </members>
</doc>
